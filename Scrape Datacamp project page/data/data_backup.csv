repo_url,title,language,author,bio,datacamp_url,description,notebook_url,notebook_dl_url,imports,attributes,methods,functions,texts,keywords,long_description
https://github.com/mrbarkis/DataCamp_projects/tree/master/A%20Network%20Analysis%20of%20Game%20of%20Thrones,A Network Analysis of Game of Thrones,python,Mridul Seth,Data science enthusiast,https://www.datacamp.com/projects/76,"Analyze the network of characters in Game of Thrones and how it changes over the course of the books.
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/A%20Network%20Analysis%20of%20Game%20of%20Thrones/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/A%20Network%20Analysis%20of%20Game%20of%20Thrones/notebook.ipynb,"['networkx', 'numpy', 'pandas']","['.DataFrame', '.T', '.index', '.csv']","['.degree_centrality()', '.from_records()', '.Graph()', '.add_edge()', '.betweenness_centrality()', '.pagerank()', '.set_title()', '.items()', '.iterrows()', '.set_ylabel()', '.arange()', '.corr()', '.set_xticks()', '.idxmax()', '.set_xticklabels()', '.sort_values()', '.fillna()', '.plot()', '.set_xlabel()', '.append()', '.head()', '.read_csv()']","['setBookAxes()', 'list()', 'set()', 'sorted()', 'range()', 'print()']","['1', 'winter', 'come', 'let', 'load', 'dataset', 'asap', 'heard', 'game', 'throne', 'must', 'realli', 'good', 'hide', 'game', 'throne', 'huge', 'popular', 'televis', 'seri', 'hbo', 'base', 'also', 'huge', 'popular', 'book', 'seri', 'song', 'ice', 'fire', 'georg', 'r', 'r', 'martin', 'notebook', 'analyz', 'co', 'occurr', 'network', 'charact', 'game', 'throne', 'book', 'two', 'charact', 'consid', 'co', 'occur', 'name', 'appear', 'vicin', '15', 'word', 'one', 'anoth', 'book', 'dataset', 'constitut', 'network', 'given', 'text', 'file', 'describ', 'edg', 'charact', 'attribut', 'attach', 'edg', 'let', 'start', 'load', 'data', 'first', 'book', 'game', 'throne', 'inspect', '2', 'time', 'network', 'throne', 'result', 'datafram', 'book1', '5', 'column', 'sourc', 'target', 'type', 'weight', 'book', 'sourc', 'target', 'two', 'node', 'link', 'edg', 'network', 'direct', 'undirect', 'edg', 'network', 'edg', 'undirect', 'weight', 'attribut', 'everi', 'edg', 'tell', 'us', 'number', 'interact', 'charact', 'book', 'book', 'column', 'tell', 'us', 'book', 'number', 'data', 'load', 'panda', 'datafram', 'time', 'creat', 'network', 'use', 'networkx', 'network', 'analysi', 'librari', 'creat', 'graph', 'object', 'first', 'book', '3', 'popul', 'network', 'datafram', 'current', 'graph', 'object', 'g_book1', 'empti', 'let', 'popul', 'edg', 'book1', 'let', 'load', 'rest', 'book', '4', 'import', 'charact', 'game', 'throne', 'jon', 'snow', 'tyrion', 'daeneri', 'someon', 'els', 'let', 'see', 'network', 'scienc', 'offer', 'us', 'mani', 'differ', 'metric', 'measur', 'import', 'node', 'network', 'note', 'correct', 'way', 'calcul', 'import', 'node', 'network', 'everi', 'metric', 'differ', 'mean', 'first', 'let', 'measur', 'import', 'node', 'network', 'look', 'number', 'neighbor', 'number', 'node', 'connect', 'exampl', 'influenti', 'account', 'twitter', 'follow', 'followe', 'relationship', 'form', 'network', 'account', 'high', 'number', 'follow', 'measur', 'import', 'call', 'degre', 'central', 'use', 'measur', 'let', 'extract', 'top', 'ten', 'import', 'charact', 'first', 'book', 'book', '0', 'fifth', 'book', 'book', '4', '5', 'evolut', 'charact', 'import', 'accord', 'degre', 'central', 'import', 'charact', 'first', 'book', 'eddard', 'stark', 'even', 'top', '10', 'fifth', 'book', 'import', 'charact', 'chang', 'cours', 'five', 'book', 'know', 'stuff', 'happen', 'let', 'look', 'evolut', 'degre', 'central', 'coupl', 'charact', 'like', 'eddard', 'stark', 'jon', 'snow', 'tyrion', 'show', 'top', '10', 'degre', 'central', 'first', 'book', '6', 'stanni', 'baratheon', 'see', 'import', 'eddard', 'stark', 'die', 'book', 'seri', 'progress', 'jon', 'snow', 'drop', 'fourth', 'book', 'sudden', 'rise', 'fifth', 'book', 'let', 'look', 'variou', 'measur', 'like', 'between', 'central', 'pagerank', 'find', 'import', 'charact', 'game', 'throne', 'charact', 'co', 'occurr', 'network', 'see', 'uncov', 'interest', 'fact', 'network', 'let', 'plot', 'evolut', 'between', 'central', 'network', 'five', 'book', 'take', 'evolut', 'top', 'four', 'charact', 'everi', 'book', 'plot', '7', 'googl', 'pagerank', 'tell', 'us', 'got', 'see', 'peculiar', 'rise', 'import', 'stanni', 'baratheon', 'book', 'fifth', 'book', 'significantli', 'import', 'charact', 'network', 'even', 'though', 'third', 'import', 'charact', 'accord', 'degre', 'central', 'pagerank', 'initi', 'way', 'googl', 'rank', 'web', 'page', 'evalu', 'inlink', 'outlink', 'webpag', 'world', 'wide', 'web', 'essenti', 'direct', 'network', 'let', 'look', 'import', 'charact', 'game', 'throne', 'network', 'accord', 'pagerank', '8', 'correl', 'differ', 'measur', 'stanni', 'jon', 'snow', 'daeneri', 'import', 'charact', 'fifth', 'book', 'accord', 'pagerank', 'eddard', 'stark', 'follow', 'similar', 'curv', 'degre', 'central', 'between', 'central', 'import', 'first', 'book', 'die', 'oblivion', 'book', 'seri', 'seen', 'three', 'differ', 'measur', 'calcul', 'import', 'node', 'network', 'tell', 'us', 'someth', 'charact', 'import', 'co', 'occurr', 'network', 'see', 'name', 'pop', 'three', 'measur', 'mayb', 'strong', 'correl', 'let', 'look', 'correl', 'pagerank', 'between', 'central', 'degre', 'central', 'fifth', 'book', 'use', 'pearson', 'correl', '9', 'conclus', 'see', 'high', 'correl', 'three', 'measur', 'charact', 'co', 'occurr', 'network', 'look', 'differ', 'way', 'find', 'import', 'charact', 'game', 'throne', 'co', 'occurr', 'network', 'accord', 'degre', 'central', 'eddard', 'stark', 'import', 'charact', 'initi', 'book', 'import', 'charact', 'fifth', 'book', 'accord', 'three', 'measur']","['book', 'network', 'central', 'charact', 'throne', 'fifth', 'degre', 'node', 'pagerank', 'eddard', 'co', 'edg', 'import', 'between', 'jon', 'stark', 'game', 'correl', 'occurr', 'stanni']","<div>
 <p>
  Jon Snow, Daenerys Targaryen, or Tyrion Lannister? Who is the most 
important character in Game of Thrones? Let's see what mathematics can tell
us about this!
 </p>
 <p>
  In this project, you will look at the character co-occurrence
network and its evolution over the five books in R.R. Martin's
hugely popular book series
  <em>
   A Song of Ice and Fire
  </em>
  (perhaps better known as the TV show
  <em>
   Game of Thrones
  </em>
  ). You will
look at how the importance of the characters changes over the books using
different centrality measures.
 </p>
 <p>
  This project uses a dataset parsed by Andrew J. Beveridge and Jie Shan 
which is available
  <a href=""https://github.com/mathbeveridge/asoiaf"">
   here
  </a>
  . 
For more information on this dataset have a look at
  <a href=""https://networkofthrones.wordpress.com"">
   the Network of Thrones blog
  </a>
  .
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/A%20New%20Era%20of%20Data%20Analysis%20in%20Baseball,A New Era of Data Analysis in Baseball,python,David Venturi,Curriculum Manager at DataCamp,https://www.datacamp.com/projects/250,"Use MLB's Statcast data to compare New York Yankees sluggers Aaron Judge and Giancarlo Stanton.
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/A%20New%20Era%20of%20Data%20Analysis%20in%20Baseball/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/A%20New%20Era%20of%20Data%20Analysis%20in%20Baseball/notebook.ipynb,"['seaborn', 'matplotlib.pyplot', 'pandas']","['.zone', '.loc', '.max_columns', '.str', '.pyplot', '.csv']","['.set_visible()', '.gca()', '.set_title()', '.apply()', '.colorbar()', '.get_xaxis()', '.get_yaxis()', '.hist2d()', '.kdeplot()', '.set_label()', '.regplot()', '.startswith()', '.copy()', '.subplots()', '.concat()', '.set_option()', '.title()', '.boxplot()', '.tail()', '.value_counts()', '.read_csv()']","['assign_x_coord()', 'assign_y_coord()', 'print()']","['1', 'statcast', 'revolut', 'aaron', 'judg', 'judg', 'one', 'physic', 'largest', 'player', 'major', 'leagu', 'basebal', 'stand', '6', 'feet', '7', 'inch', '2', '01', 'tall', 'weigh', '282', 'pound', '128', 'kg', 'also', 'hit', 'hardest', 'home', 'run', 'ever', 'record', 'know', 'statcast', 'statcast', 'state', 'art', 'track', 'system', 'use', 'high', 'resolut', 'camera', 'radar', 'equip', 'measur', 'precis', 'locat', 'movement', 'basebal', 'basebal', 'player', 'introduc', '2015', '30', 'major', 'leagu', 'ballpark', 'statcast', 'data', 'revolution', 'game', 'team', 'engag', 'arm', 'race', 'data', 'analysi', 'hire', 'analyst', 'left', 'right', 'attempt', 'gain', 'edg', 'competit', 'video', 'describ', 'system', 'incred', 'notebook', 'go', 'wrangl', 'analyz', 'visual', 'statcast', 'data', 'compar', 'mr', 'judg', 'anoth', 'extrem', 'larg', 'teammat', 'let', 'start', 'load', 'data', 'notebook', 'two', 'csv', 'file', 'judg', 'csv', 'stanton', 'csv', 'contain', 'statcast', 'data', '2015', '2017', 'use', 'panda', 'datafram', 'store', 'data', 'let', 'also', 'load', 'data', 'visual', 'librari', 'matplotlib', 'seaborn', '2', 'statcast', 'measur', 'better', 'question', 'might', 'statcast', 'measur', 'start', 'pitcher', 'statcast', 'measur', 'simpl', 'data', 'point', 'veloc', 'time', 'statcast', 'dig', 'whole', 'lot', 'deeper', 'also', 'measur', 'releas', 'point', 'spin', 'rate', 'everi', 'pitch', 'move', 'hitter', 'statcast', 'capabl', 'measur', 'exit', 'veloc', 'launch', 'angl', 'vector', 'ball', 'come', 'bat', 'statcast', 'also', 'track', 'hang', 'time', 'project', 'distanc', 'ball', 'travel', 'let', 'inspect', 'last', 'five', 'row', 'judg', 'datafram', 'see', 'row', 'repres', 'one', 'pitch', 'thrown', 'batter', 'also', 'see', 'column', 'esoter', 'name', 'make', 'sens', 'worri', 'relev', 'one', 'explain', 'necessari', '3', 'aaron', 'judg', 'giancarlo', 'stanton', 'prolif', 'slugger', 'giancarlo', 'stanton', 'also', 'larg', 'human', 'stand', '6', 'feet', '6', 'inch', 'tall', 'weigh', '245', 'pound', 'despit', 'wear', 'jersey', 'judg', 'pictur', 'provid', '2018', 'teammat', 'new', 'york', 'yanke', 'similar', 'lot', 'way', 'one', 'hit', 'lot', 'home', 'run', 'stanton', 'judg', 'led', 'basebal', 'home', 'run', '2017', '59', '52', 'respect', 'except', 'total', 'player', 'third', '45', 'home', 'run', 'stanton', 'judg', 'also', 'differ', 'mani', 'way', 'one', 'bat', 'ball', 'event', 'bat', 'ball', 'produc', 'result', 'includ', 'out', 'hit', 'error', 'next', 'find', 'count', 'bat', 'ball', 'event', 'player', '2017', 'frequenc', 'event', 'quit', 'differ', '4', 'analyz', 'home', 'run', 'statcast', 'data', 'judg', 'walk', 'strike', 'stanton', 'stanton', 'fli', 'judg', 'let', 'get', 'hit', 'profil', 'detail', 'two', 'groundbreak', 'statcast', 'metric', 'launch', 'angl', 'exit', 'veloc', 'launch', 'angl', 'vertic', 'angl', 'ball', 'leav', 'player', 'bat', 'exit', 'veloc', 'speed', 'basebal', 'come', 'bat', 'new', 'data', 'chang', 'way', 'team', 'valu', 'hitter', 'pitcher', 'per', 'washington', 'post', 'ball', 'hit', 'high', 'launch', 'angl', 'like', 'result', 'hit', 'hit', 'fast', 'enough', 'right', 'angl', 'becom', 'home', 'run', 'let', 'look', 'exit', 'veloc', 'vs', 'launch', 'angl', 'let', 'focu', 'home', 'run', '2015', '2017', 'first', 'two', 'plot', 'show', 'data', 'point', 'second', 'two', 'show', 'smooth', 'contour', 'repres', 'densiti', '5', 'home', 'run', 'pitch', 'veloc', 'appear', 'stanton', 'hit', 'home', 'run', 'slightli', 'lower', 'slightli', 'harder', 'judg', 'though', 'need', 'taken', 'grain', 'salt', 'given', 'small', 'sampl', 'size', 'home', 'run', 'statcast', 'measur', 'veloc', 'ball', 'come', 'bat', 'measur', 'veloc', 'ball', 'come', 'pitcher', 'hand', 'begin', 'journey', 'toward', 'plate', 'use', 'data', 'compar', 'stanton', 'judg', 'home', 'run', 'term', 'pitch', 'veloc', 'next', 'find', 'box', 'plot', 'display', 'five', 'number', 'summari', 'player', 'minimum', 'first', 'quartil', 'median', 'third', 'quartil', 'maximum', '6', 'home', 'run', 'pitch', 'locat', 'judg', 'appear', 'hit', 'home', 'run', 'faster', 'pitch', 'stanton', 'might', 'call', 'judg', 'fastbal', 'hitter', 'stanton', 'appear', 'agnost', 'pitch', 'speed', 'like', 'pitch', 'movement', 'sinc', 'slower', 'pitch', 'e', 'g', 'curvebal', 'slider', 'changeup', 'tend', 'break', 'statcast', 'track', 'pitch', 'movement', 'type', 'let', 'move', 'someth', 'els', 'pitch', 'locat', 'statcast', 'track', 'zone', 'pitch', 'cross', 'plate', 'zone', 'number', 'look', 'like', 'catcher', 'point', 'view', 'plot', 'use', '2d', 'histogram', 'simplic', 'let', 'look', 'strike', 'give', 'us', '9x9', 'grid', 'view', 'zone', 'coordin', '2d', 'plot', 'bottom', 'left', 'corner', '1', '1', 'top', 'right', 'corner', '3', '3', 'let', 'set', 'function', 'assign', 'x', 'coordin', 'pitch', '7', 'home', 'run', 'pitch', 'locat', 'ii', 'let', 'coordin', '8', 'aaron', 'judg', 'home', 'run', 'zone', 'appli', 'function', 'creat', 'construct', '2d', 'histogram', 'first', 'aaron', 'judg', 'pitch', 'strike', 'zone', 'result', 'home', 'run', '9', 'giancarlo', 'stanton', 'home', 'run', 'zone', 'giancarlo', 'stanton', '10', 'oppos', 'pitcher', 'scare', 'takeaway', 'stanton', 'hit', 'mani', 'home', 'run', 'pitch', 'upper', 'third', 'strike', 'zone', 'like', 'pretti', 'much', 'everi', 'hitter', 'ever', 'player', 'love', 'pitch', 'horizont', 'vertic', 'middl', 'plate', 'judg', 'least', 'favorit', 'home', 'run', 'pitch', 'appear', 'high', 'away', 'stanton', 'appear', 'low', 'away', 'describ', 'stanton', 'home', 'run', 'zone', 'middl', 'insid', 'judg', 'home', 'run', 'zone', 'much', 'spread', 'grand', 'takeaway', 'whole', 'exercis', 'aaron', 'judg', 'giancarlo', 'stanton', 'ident', 'despit', 'superfici', 'similar', 'term', 'home', 'run', 'launch', 'profil', 'well', 'pitch', 'speed', 'locat', 'prefer', 'differ', 'oppos', 'pitcher', 'still', 'scare']","['pitch', 'home', 'stanton', 'statcast', 'judg', 'ball', 'veloc', 'run', 'bat', 'player', 'zone', 'angl', 'hit', 'aaron', 'basebal', 'giancarlo', 'pitcher', 'exit', 'hitter', 'launch']","<div>
 <p>
  There's a new era of data analysis in baseball. Using a new technology called Statcast, Major League Baseball
is now collecting the precise location and movements of its baseballs and players. In this project,
you will use Statcast data to compare the home runs of two of baseball's brightest (and largest) stars,
Aaron Judge (6'7"") and Giancarlo Stanton (6'6""), both of whom now play for the New York Yankees.
 </p>
 <p>
  The dataset used in this project is from
  <a href=""https://baseballsavant.mlb.com/about"">
   Baseball Savant
  </a>
  .
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/A%20Visual%20History%20of%20Nobel%20Prize%20Winners,A Visual History of Nobel Prize Winners,python,Rasmus Bååth,Senior Data Scientist at King (Activision Blizzard),https://www.datacamp.com/projects/441,"Explore a dataset from Kaggle containing a century's worth of Nobel Laureates. Who won? Who got snubbed?
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/A%20Visual%20History%20of%20Nobel%20Prize%20Winners/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/A%20Visual%20History%20of%20Nobel%20Prize%20Winners/notebook.ipynb,"['PercentFormatter', 'matplotlib.ticker', 'seaborn', 'numpy', 'matplotlib.pyplot', 'pandas']","['.ticker', '.yaxis', '.figsize', '.rcParams', '.year', '.dt', '.values', '.pyplot', '.csv']","['.nsmallest()', '.lineplot()', '.lmplot()', '.set_major_formatter()', '.astype()', '.floor()', '.filter()', '.nlargest()', '.set()', '.groupby()', '.value_counts()', '.mean()', '.to_datetime()', '.head()', '.read_csv()']","['PercentFormatter()', 'display()', 'len()']","['1', 'nobel', 'prize', 'nobel', 'prize', 'perhap', 'world', 'well', 'known', 'scientif', 'award', 'except', 'honor', 'prestig', 'substanti', 'prize', 'money', 'recipi', 'also', 'get', 'gold', 'medal', 'show', 'alfr', 'nobel', '1833', '1896', 'establish', 'prize', 'everi', 'year', 'given', 'scientist', 'scholar', 'categori', 'chemistri', 'literatur', 'physic', 'physiolog', 'medicin', 'econom', 'peac', 'first', 'nobel', 'prize', 'hand', '1901', 'time', 'prize', 'eurocentr', 'male', 'focus', 'nowaday', 'bias', 'way', 'whatsoev', 'sure', 'right', 'well', 'go', 'find', 'nobel', 'foundat', 'made', 'dataset', 'avail', 'prize', 'winner', 'start', 'prize', '1901', '2016', 'let', 'load', 'take', 'look', '2', 'get', 'nobel', 'prize', 'look', 'first', 'coupl', 'prize', 'winner', 'nobel', 'laureat', 'also', 'call', 'alreadi', 'see', 'celebr', 'wilhelm', 'conrad', 'röntgen', 'guy', 'discov', 'x', 'ray', 'actual', 'see', 'winner', '1901', 'guy', 'came', 'europ', 'back', '1901', 'look', 'winner', 'dataset', '1901', '2016', 'sex', 'countri', 'commonli', 'repres', 'countri', 'use', 'birth_countri', 'winner', 'organization_countri', 'nan', 'share', 'nobel', 'prize', '3', 'usa', 'domin', 'surpris', 'perhap', 'common', 'nobel', 'laureat', '1901', '2016', 'man', 'born', 'unit', 'state', 'america', '1901', 'winner', 'european', 'usa', 'start', 'domin', 'nobel', 'prize', 'chart', '4', 'usa', 'domin', 'visual', 'tabl', 'ok', 'see', 'usa', 'start', 'domin', 'nobel', 'chart', 'need', 'plot', '5', 'gender', 'typic', 'nobel', 'prize', 'winner', 'usa', 'becam', 'domin', 'winner', 'nobel', 'prize', 'first', '1930', 'kept', 'lead', 'posit', 'ever', 'sinc', 'one', 'group', 'lead', 'start', 'never', 'seem', 'let', 'go', 'men', 'mayb', 'come', 'shock', 'imbal', 'mani', 'male', 'femal', 'prize', 'winner', 'signific', 'imbal', 'better', 'wors', 'within', 'specif', 'prize', 'categori', 'like', 'physic', 'medicin', 'literatur', 'etc', '6', 'first', 'woman', 'win', 'nobel', 'prize', 'plot', 'bit', 'messi', 'line', 'overplot', 'show', 'interest', 'trend', 'pattern', 'overal', 'imbal', 'pretti', 'larg', 'physic', 'econom', 'chemistri', 'largest', 'imbal', 'medicin', 'somewhat', 'posit', 'trend', 'sinc', '1990', 'literatur', 'prize', 'also', 'balanc', 'big', 'outlier', 'peac', 'prize', '2010', 'keep', 'mind', 'cover', 'year', '2010', '2016', 'given', 'imbal', 'first', 'woman', 'receiv', 'nobel', 'prize', 'categori', '7', 'repeat', 'laureat', 'scientist', 'writer', 'activist', 'nobel', 'prize', 'would', 'crown', 'achiev', 'long', 'career', 'peopl', 'one', 'enough', 'gotten', 'lucki', 'nobel', 'prize', 'assum', 'luck', '8', 'old', 'get', 'prize', 'list', 'repeat', 'winner', 'contain', 'illustri', 'name', 'meet', 'mari', 'curi', 'got', 'prize', 'physic', 'discov', 'radiat', 'chemistri', 'isol', 'radium', 'polonium', 'john', 'bardeen', 'got', 'twice', 'physic', 'transistor', 'superconduct', 'frederick', 'sanger', 'got', 'twice', 'chemistri', 'linu', 'carl', 'paul', 'got', 'first', 'chemistri', 'later', 'peac', 'work', 'promot', 'nuclear', 'disarma', 'also', 'learn', 'organ', 'also', 'get', 'prize', 'red', 'cross', 'unhcr', 'gotten', 'twice', 'old', 'gener', 'get', 'prize', '9', 'age', 'differ', 'prize', 'categori', 'plot', 'show', 'us', 'lot', 'see', 'peopl', 'use', 'around', '55', 'receiv', 'price', 'nowaday', 'averag', 'closer', '65', 'larg', 'spread', 'laureat', 'age', '50', 'young', 'also', 'see', 'densiti', 'point', 'much', 'high', 'nowaday', 'earli', '1900', 'nowaday', 'mani', 'prize', 'share', 'mani', 'winner', 'also', 'see', 'disrupt', 'award', 'prize', 'around', 'second', 'world', 'war', '1939', '1945', 'let', 'look', 'age', 'trend', 'within', 'differ', 'prize', 'categori', '10', 'oldest', 'youngest', 'winner', 'plot', 'lot', 'excit', 'stuff', 'go', 'see', 'winner', 'chemistri', 'medicin', 'physic', 'prize', 'gotten', 'older', 'time', 'trend', 'strongest', 'physic', 'averag', 'age', 'use', '50', 'almost', '70', 'literatur', 'econom', 'stabl', 'also', 'see', 'econom', 'newer', 'categori', 'peac', 'show', 'opposit', 'trend', 'winner', 'get', 'younger', 'peac', 'categori', 'also', 'winner', 'around', '2010', 'seem', 'except', 'young', 'beg', 'question', 'oldest', 'youngest', 'peopl', 'ever', 'nobel', 'prize', '11', 'get', 'prize', 'hey', 'get', 'prize', 'make', 'end', 'notebook', 'might', 'nobel', 'prize', 'made', 'paint', 'count', 'someth', 'despair', 'leonid', 'hurwicz', '90', 'year', 'old', 'got', 'prize', 'might', 'late', 'know', 'leav', 'name', 'youngest', 'winner', 'ever', '2014', 'got', 'prize', 'struggl', 'suppress', 'children', 'young', 'peopl', 'right', 'children', 'educ']","['prize', 'winner', 'nobel', '1901', 'imbal', 'peac', 'chemistri', 'physic', 'laureat', 'usa', 'econom', 'literatur', 'medicin', '2010', 'domin', 'categori', 'nowaday', 'got', 'gotten', 'youngest']","<div>
 <p>
  The Nobel Prize is perhaps the world's most well known scientific award. Every
year it is given to scientists and scholars in chemistry,
literature, physics, medicine, economics, and peace. The first Nobel
Prize was handed out in 1901, and at that time the prize was Eurocentric and
male-focused, but nowadays it's not biased in any way. Surely, right?
 </p>
 <p>
  Well, let's find out! What characteristics do the prize winners have? Which
country gets it most often? And has anybody gotten it twice? It's up to you to
figure this out.
 </p>
 <p>
  The
  <a href=""https://www.kaggle.com/nobelfoundation/nobel-laureates"">
   dataset
  </a>
  used in this project is from The Nobel Foundation on Kaggle.
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Analyze%20Your%20Runkeeper%20Fitness%20Data,Analyze Your Runkeeper Fitness Data,python,Andrii Pavlenko,Project Instructor,https://www.datacamp.com/projects/727,"Import, clean, and analyze seven years worth of training data tracked on the Runkeeper app.
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Analyze%20Your%20Runkeeper%20Fitness%20Data/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Analyze%20Your%20Runkeeper%20Fitness%20Data/notebook.ipynb,"['statsmodels.api', 'warnings', 'matplotlib.pyplot', 'pandas']","['.5', '.api', '.figure', '.observed', '.trend', '.tsa', '.xaxis', '.3', '.2', '.4', '.style', '.str', '.pyplot', '.csv']","['.resample()', '.set()', '.axhspan()', '.mean()', '.fillna()', '.copy()', '.axhline()', '.figure()', '.show()', '.isnull()', '.sum()', '.plot()', '.subplots()', '.bfill()', '.seasonal_decompose()', '.set_facecolor()', '.stack()', '.set_xticklabels()', '.filterwarnings()', '.format()', '.sort_index()', '.append()', '.drop()', '.legend()', '.sample()', '.set_title()', '.describe()', '.hist()', '.replace()', '.use()', '.groupby()', '.info()', '.value_counts()', '.count()', '.head()', '.read_csv()']","['display()', 'int()', 'range()', 'print()', 'len()']","['1', 'obtain', 'review', 'raw', 'data', 'one', 'day', 'old', 'run', 'friend', 'chat', 'run', 'style', 'train', 'habit', 'achiev', 'suddenli', 'realiz', 'could', 'take', 'depth', 'analyt', 'look', 'train', 'use', 'popular', 'gp', 'fit', 'tracker', 'call', 'runkeep', 'year', 'decid', 'time', 'analyz', 'run', 'data', 'see', 'sinc', '2012', 'use', 'runkeep', 'app', 'great', 'one', 'key', 'featur', 'excel', 'data', 'export', 'anyon', 'smartphon', 'download', 'app', 'analyz', 'data', 'like', 'notebook', 'log', 'run', 'first', 'step', 'export', 'data', 'runkeep', 'done', 'alreadi', 'import', 'data', 'start', 'explor', 'find', 'potenti', 'problem', 'creat', 'data', 'clean', 'strategi', 'fix', 'issu', 'final', 'analyz', 'visual', 'clean', 'time', 'seri', 'data', 'export', 'seven', 'year', 'worth', 'train', 'data', '2012', '2018', 'data', 'csv', 'file', 'row', 'singl', 'train', 'activ', 'let', 'load', 'inspect', '2', 'data', 'preprocess', 'lucki', 'us', 'column', 'name', 'runkeep', 'provid', 'inform', 'need', 'renam', 'column', 'notic', 'miss', 'valu', 'use', 'info', 'method', 'reason', 'miss', 'valu', 'depend', 'heart', 'rate', 'inform', 'miss', 'alway', 'use', 'cardio', 'sensor', 'case', 'note', 'column', 'option', 'field', 'sometim', 'left', 'blank', 'also', 'use', 'rout', 'name', 'column', 'never', 'use', 'friend', 'tag', 'column', 'fill', 'miss', 'valu', 'heart', 'rate', 'column', 'avoid', 'mislead', 'result', 'later', 'right', 'first', 'data', 'preprocess', 'step', 'remov', 'column', 'use', 'analysi', 'replac', 'activ', 'type', 'unicycl', 'alway', 'activ', 'count', 'miss', 'valu', '3', 'deal', 'miss', 'valu', 'see', 'last', 'output', '214', 'miss', 'entri', 'averag', 'heart', 'rate', 'go', 'back', 'time', 'get', 'data', 'fill', 'miss', 'valu', 'averag', 'valu', 'process', 'call', 'mean', 'imput', 'imput', 'mean', 'fill', 'miss', 'data', 'need', 'consid', 'averag', 'heart', 'rate', 'vari', 'differ', 'activ', 'e', 'g', 'walk', 'vs', 'run', 'filter', 'datafram', 'activ', 'type', 'type', 'calcul', 'activ', 'mean', 'heart', 'rate', 'fill', 'miss', 'valu', 'mean', '4', 'plot', 'run', 'data', 'creat', 'first', 'plot', 'found', 'earlier', 'activ', 'data', 'run', '459', 'exact', '29', '18', 'two', 'instanc', 'cycl', 'walk', 'unicycl', 'respect', 'let', 'focu', 'plot', 'differ', 'run', 'metric', 'excel', 'first', 'visual', 'figur', 'four', 'subplot', 'one', 'run', 'metric', 'numer', 'column', 'subplot', 'differ', 'axi', 'explain', 'legend', 'x', 'axi', 'date', 'share', 'among', 'subplot', '5', 'run', 'statist', 'doubt', 'run', 'help', 'peopl', 'stay', 'mental', 'physic', 'healthi', 'product', 'age', 'great', 'fun', 'runner', 'talk', 'hobbi', 'discuss', 'result', 'also', 'discuss', 'differ', 'train', 'strategi', 'know', 'group', 'runner', 'commonli', 'hear', 'question', 'like', 'averag', 'distanc', 'fast', 'run', 'measur', 'heart', 'rate', 'often', 'train', 'let', 'find', 'answer', 'question', 'data', 'look', 'back', 'plot', 'task', '4', 'see', 'answer', 'measur', 'heart', 'rate', '2015', 'look', 'averag', 'let', 'use', 'data', '2015', '2018', 'panda', 'resampl', 'method', 'similar', 'groupbi', 'method', 'resampl', 'group', 'specif', 'time', 'span', 'use', 'resampl', 'group', 'time', 'seri', 'data', 'sampl', 'period', 'appli', 'sever', 'method', 'sampl', 'period', 'case', 'resampl', 'annual', 'weekli', '6', 'visual', 'averag', 'let', 'plot', 'long', 'term', 'averag', 'distanc', 'run', 'heart', 'rate', 'raw', 'data', 'visual', 'compar', 'averag', 'train', 'session', 'use', 'data', '2015', '2018', 'task', 'use', 'matplotlib', 'function', 'plot', 'creation', 'custom', '7', 'reach', 'goal', 'motiv', 'run', 'regularli', 'set', 'target', 'goal', 'run', '1000', 'km', 'per', 'year', 'let', 'visual', 'annual', 'run', 'distanc', 'km', '2013', '2018', 'see', 'reach', 'goal', 'year', 'star', 'green', 'region', 'indic', 'success', '8', 'progress', 'let', 'dive', 'littl', 'deeper', 'data', 'answer', 'tricki', 'question', 'progress', 'term', 'run', 'skill', 'answer', 'question', 'decompos', 'weekli', 'distanc', 'run', 'visual', 'compar', 'raw', 'data', 'red', 'trend', 'line', 'repres', 'weekli', 'distanc', 'run', 'go', 'use', 'statsmodel', 'librari', 'decompos', 'weekli', 'trend', '9', 'train', 'intens', 'heart', 'rate', 'popular', 'metric', 'use', 'measur', 'train', 'intens', 'depend', 'age', 'fit', 'level', 'heart', 'rate', 'group', 'differ', 'zone', 'peopl', 'target', 'depend', 'train', 'goal', 'target', 'heart', 'rate', 'moder', 'intens', 'activ', '50', '70', 'maximum', 'heart', 'rate', 'vigor', 'physic', 'activ', '70', '85', 'maximum', 'creat', 'distribut', 'plot', 'heart', 'rate', 'data', 'train', 'intens', 'visual', 'present', 'number', 'activ', 'predefin', 'train', 'zone', '10', 'detail', 'summari', 'report', 'data', 'clean', 'analysi', 'visual', 'let', 'creat', 'detail', 'summari', 'tabl', 'train', 'creat', 'two', 'tabl', 'first', 'tabl', 'summari', 'distanc', 'km', 'climb', 'variabl', 'train', 'activ', 'second', 'tabl', 'list', 'summari', 'statist', 'averag', 'speed', 'km', 'hr', 'climb', 'distanc', 'km', 'variabl', 'train', 'activ', '11', 'fun', 'fact', 'wrap', 'let', 'pick', 'fun', 'fact', 'summari', 'tabl', 'solv', 'last', 'exercis', 'data', 'run', 'histori', 'repres', '6', 'year', '2', 'month', '21', 'day', 'rememb', 'mani', 'run', 'shoe', 'went', '7', 'fun', 'fact', 'averag', 'distanc', '11', '38', 'km', 'longest', 'distanc', '38', '32', 'km', 'highest', 'climb', '982', 'total', 'climb', '57', '278', 'total', 'number', 'km', 'run', '5', '224', 'km', 'total', 'run', '459', 'number', 'run', 'shoe', 'gone', '7', 'pair', 'stori', 'forrest', 'gump', 'well', 'known', 'man', 'particular', 'reason', 'decid', 'go', 'littl', 'run', 'epic', 'run', 'durat', '3', 'year', '2', 'month', '14', 'day', '1169', 'day', 'pictur', 'see', 'forrest', 'rout', '24', '700', 'km', 'forrest', 'run', 'fact', 'averag', 'distanc', '21', '13', 'km', 'total', 'number', 'km', 'run', '24', '700', 'km', 'total', 'run', '1169', 'number', 'run', 'shoe', 'gone', 'assum', 'forest', 'go', 'run', 'shoe', 'rate', 'figur', 'mani', 'pair', 'shoe', 'forrest', 'need', 'run']","['km', 'run', 'heart', 'train', 'miss', 'shoe', 'distanc', 'activ', 'rate', 'climb', 'resampl', 'runkeep', 'averag', 'forrest', 'intens', 'fill', 'weekli', 'summari', 'export', 'goal']","<div>
 <p>
  With the explosion in fitness tracker popularity, runners all of the world are collecting data with gadgets (smartphones, watches, etc.) to keep themselves motivated. They look for answers to questions like:
 </p>
 <ul>
  <li>
   How fast, long, and intense was my run today?
  </li>
  <li>
   Have I succeeded with my training goals?
  </li>
  <li>
   Am I progressing?
  </li>
  <li>
   What were my best achievements?
  </li>
  <li>
   How do I perform compared to others?
  </li>
 </ul>
 <p>
  I exported seven years worth of my training data from
  <a href=""https://runkeeper.com/"">
   Runkeeper
  </a>
  . The data is a CSV file where each row is a single training activity. In this project, you'll create import, clean, and analyze my data to answer the above questions. You can then apply the same strategy to your training data if you wish!
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Bad%20passwords%20and%20the%20NIST%20guidelines,Bad passwords and the NIST guidelines,python,Rasmus Bååth,Senior Data Scientist at King (Activision Blizzard),https://www.datacamp.com/projects/141,"Check what passwords fail to conform to the National Institute of Standards and Technology password guidelines.
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Bad%20passwords%20and%20the%20NIST%20guidelines/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Bad%20passwords%20and%20the%20NIST%20guidelines/notebook.ipynb,['pandas'],"['.str', '.txt', '.csv']","['.extract()', '.sum()', '.isin()', '.any()', '.len()', '.contains()', '.head()', '.lower()', '.read_csv()']","['print()', 'len()']","['1', 'nist', 'special', 'public', '800', '63b', '50', 'year', 'ago', 'need', 'come', 'secret', 'password', 'probabl', 'part', 'secret', 'espionag', 'organ', 'like', 'pretend', 'spi', 'play', 'kid', 'today', 'mani', 'us', 'forc', 'come', 'new', 'password', 'time', 'sign', 'site', 'app', 'password', 'inventeur', 'respons', 'come', 'good', 'hard', 'crack', 'password', 'also', 'interest', 'site', 'app', 'make', 'sure', 'use', 'good', 'password', 'problem', 'realli', 'hard', 'defin', 'make', 'good', 'password', 'howev', 'nation', 'institut', 'standard', 'technolog', 'nist', 'know', 'second', 'best', 'thing', 'make', 'sure', 'least', 'use', 'bad', 'password', 'notebook', 'go', 'rule', 'nist', 'special', 'public', '800', '63b', 'detail', 'check', 'verifi', 'nist', 'call', 'second', 'parti', 'respons', 'store', 'verifi', 'password', 'perform', 'make', 'sure', 'user', 'pick', 'bad', 'password', 'go', 'password', 'user', 'fiction', 'compani', 'use', 'python', 'flag', 'user', 'bad', 'password', 'us', 'abl', 'alreadi', 'mean', 'fiction', 'compani', 'break', 'one', 'rule', '800', '63b', 'verifi', 'shall', 'store', 'memor', 'secret', 'form', 'resist', 'offlin', 'attack', 'memor', 'secret', 'shall', 'salt', 'hash', 'use', 'suitabl', 'one', 'way', 'key', 'deriv', 'function', 'never', 'save', 'user', 'password', 'plaintext', 'alway', 'encrypt', 'password', 'keep', 'mind', 'next', 'time', 'build', 'password', 'manag', 'system', 'let', 'load', 'data', 'warn', 'list', 'password', 'fiction', 'user', 'databas', 'contain', 'real', 'password', 'leak', 'real', 'websit', 'password', 'filter', 'way', 'includ', 'word', 'explicit', 'derogatori', 'offens', '2', 'password', 'short', 'take', 'look', 'first', '12', 'user', 'alreadi', 'see', 'bad', 'password', 'let', 'get', 'ahead', 'start', 'flag', 'password', 'manual', 'first', 'thing', 'check', 'accord', 'nist', 'special', 'public', '800', '63b', 'verifi', 'shall', 'requir', 'subscrib', 'chosen', 'memor', 'secret', 'least', '8', 'charact', 'length', 'ok', 'password', 'user', 'short', 'let', 'start', 'check', '3', 'common', 'password', 'peopl', 'use', 'alreadi', 'simpl', 'rule', 'flag', 'coupl', 'offend', 'among', 'first', '12', 'user', 'next', 'special', 'public', '800', '63b', 'rule', 'verifi', 'shall', 'compar', 'prospect', 'secret', 'list', 'contain', 'valu', 'known', 'commonli', 'use', 'expect', 'compromis', 'password', 'obtain', 'previou', 'breach', 'corpus', 'dictionari', 'word', 'repetit', 'sequenti', 'charact', 'e', 'g', 'aaaaaa', '1234abcd', 'context', 'specif', 'word', 'name', 'servic', 'usernam', 'deriv', 'thereof', 'go', 'check', 'order', 'start', 'password', 'obtain', 'previou', 'breach', 'corpus', 'websit', 'hacker', 'leak', 'user', 'password', 'mani', 'websit', 'follow', 'nist', 'guidelin', 'encrypt', 'password', 'exist', 'larg', 'list', 'popular', 'password', 'let', 'start', 'load', '10', '000', 'common', 'password', 'taken', '4', 'password', 'common', 'password', 'list', 'password', 'order', 'common', 'password', 'first', 'surpris', 'see', 'password', 'like', '123456', 'qwerti', 'hacker', 'also', 'access', 'list', 'common', 'password', 'import', 'none', 'user', 'use', 'password', 'let', 'flag', 'password', 'user', 'databas', 'among', 'top', '10', '000', 'use', 'password', '5', 'password', 'common', 'word', 'ay', 'ay', 'ay', 'turn', 'mani', 'user', 'use', 'common', 'password', 'first', '12', 'user', 'alreadi', 'two', 'howev', 'common', 'password', 'also', 'tend', 'short', 'alreadi', 'flag', 'short', 'next', 'thing', 'check', 'verifi', 'shall', 'compar', 'prospect', 'secret', 'list', 'contain', 'dictionari', 'word', 'follow', 'logic', 'easi', 'hacker', 'check', 'user', 'password', 'common', 'english', 'word', 'therefor', 'common', 'english', 'word', 'make', 'bad', 'password', 'let', 'check', 'user', 'password', 'top', '10', '000', 'english', 'word', 'googl', 'trillion', 'word', 'corpu', '6', 'password', 'name', 'turn', 'mani', 'password', 'common', 'english', 'word', 'next', 'nist', 'list', 'verifi', 'shall', 'compar', 'prospect', 'secret', 'list', 'contain', 'context', 'specif', 'word', 'name', 'servic', 'usernam', 'deriv', 'thereof', 'ok', 'mani', 'thing', 'could', 'check', 'one', 'thing', 'notic', 'user', 'usernam', 'consist', 'first', 'name', 'last', 'name', 'separ', 'dot', 'let', 'flag', 'password', 'either', 'user', 'first', 'last', 'name', 'handi', 'regexp', 'cheat', 'sheet', 'tester', 'http', 'www', 'pyregex', 'com', 'id', 'eyjyzwdleci6iihexfx3kykilcjmbgfncyi6mcwibwf0y2hfdhlwzsi6im1hdgnoiiwidgvzdf9zdhjpbmcioijqyw1lcy5ib25kin0', '3d', '7', 'password', 'repetit', 'milford', 'hubbard', 'user', 'number', '12', 'think', 'ok', 'last', 'thing', 'go', 'check', 'bit', 'tricki', 'verifi', 'shall', 'compar', 'prospect', 'secret', 'contain', 'repetit', 'sequenti', 'charact', 'e', 'g', 'aaaaaa', '1234abcd', 'tricki', 'check', 'repetit', 'hard', 'defin', '11111', 'repetit', 'ye', '12345', 'repetit', 'well', 'kind', '13579', 'repetit', 'mayb', 'check', 'repetit', 'arbitrarili', 'complex', 'go', 'someth', 'simpl', 'go', 'flag', 'password', 'contain', '4', 'repeat', 'charact', '8', 'togeth', 'implement', 'basic', 'test', 'bad', 'password', 'suggest', 'nist', 'special', 'public', '800', '63b', 'left', 'flag', 'bad', 'password', 'mayb', 'send', 'user', 'e', 'mail', 'strongli', 'suggest', 'chang', 'password', '9', 'otherwis', 'password', 'user', 'notebook', 'implement', 'password', 'check', 'recommend', 'nist', 'special', 'public', '800', '63b', 'certainli', 'possibl', 'better', 'implement', 'check', 'exampl', 'use', 'longer', 'list', 'common', 'password', 'also', 'note', 'nist', 'check', 'way', 'guarante', 'chosen', 'password', 'good', 'obvious', 'bad', 'apart', 'check', 'implement', 'nist', 'also', 'clear', 'password', 'rule', 'impos', 'verifi', 'impos', 'composit', 'rule', 'e', 'g', 'requir', 'mixtur', 'differ', 'charact', 'type', 'prohibit', 'consecut', 'repeat', 'charact', 'memor', 'secret', 'verifi', 'requir', 'memor', 'secret', 'chang', 'arbitrarili', 'e', 'g', 'period', 'next', 'time', 'websit', 'app', 'tell', 'includ', 'number', 'symbol', 'upper', 'lower', 'case', 'charact', 'password', 'send', 'copi', 'nist', 'special', 'public', '800', '63b']","['password', 'nist', 'user', 'secret', '63b', 'flag', 'repetit', 'verifi', '800', 'shall', 'check', 'memor', 'bad', 'rule', 'public', 'prospect', 'charact', 'special', 'ay', 'fiction']","<div>
 <p>
  Almost every web service you join will require you to come up with a password. 
But what makes a good password? 
In June 2017 the National Institute of Standards and Technology (NIST)
published
  <a href=""https://pages.nist.gov/800-63-3/sp800-63b.html"">
   publication 800-63B
  </a>
  titled
  <em>
   Digital Identity Guidelines: Authentication and Lifecycle Management
  </em>
  . 
This publication doesn't tell you what is a
  <em>
   good
  </em>
  password,
but it does have specific rules for what is a
  <em>
   bad
  </em>
  password.
 </p>
 <p>
  In this project, you will take a list of user passwords and, 
using publication 800-63B, you will write code that automatically 
detects and flags the bad passwords.
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Book%20Recommendations%20from%20Charles%20Darwin,Book Recommendations from Charles Darwin,python,Philippe Julien,Senior Data Scientist	at King,https://www.datacamp.com/projects/607,"Build a book recommendation system using NLP and the text of books like ""On the Origin of Species.""
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Book%20Recommendations%20from%20Charles%20Darwin/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Book%20Recommendations%20from%20Charles%20Darwin/notebook.ipynb,"['gensim', 'TfidfModel', 'corpora', 'gensim.models', 'glob', 'hierarchy', 'pickle', 're,', 'scipy.cluster', 'similarities', 'os', 'matplotlib.pyplot', 'pandas']","['.txt', '.p', '.columns', '.index', '.cluster', '.models', '.path', '.stem', '.plot', '.pyplot']","['.DataFrame()', '.split()', '.sort_values()', '.Dictionary()', '.MatrixSimilarity()', '.barh()', '.basename()', '.dendrogram()', '.doc2bow()', '.dump()', '.glob()', '.linkage()', '.load()', '.stem()', '.read()', '.sub()', '.append()', '.apply()', '.replace()', '.lower()', '.xlabel()', '.title()', '.head()']","['open()', 'PorterStemmer()', 'TfidfModel()', 'list()', 'sorted()', 'set()', 'range()', 'len()', 'print()']","['1', 'darwin', 'bibliographi', 'charl', 'darwin', 'one', 'univers', 'figur', 'scienc', 'renown', 'work', 'without', 'doubt', 'origin', 'speci', 'publish', '1859', 'introduc', 'concept', 'natur', 'select', 'darwin', 'wrote', 'mani', 'book', 'wide', 'rang', 'topic', 'includ', 'geolog', 'plant', 'person', 'life', 'notebook', 'automat', 'detect', 'close', 'relat', 'book', 'purpos', 'develop', 'base', 'content', 'base', 'book', 'recommend', 'system', 'determin', 'book', 'close', 'base', 'similar', 'discuss', 'topic', 'method', 'use', 'commonli', 'use', 'text', 'document', 'heavi', 'industri', 'legal', 'tech', 'custom', 'support', 'perform', 'common', 'task', 'text', 'classif', 'handl', 'search', 'engin', 'queri', 'let', 'take', 'look', 'book', 'use', 'recommend', 'system', 'list', 'file', 'folder', 'use', 'glob', 'http', 'stackoverflow', 'com', 'question', '3964681', 'find', 'file', 'directori', 'extens', 'txt', 'python', 'gensim', 'tutori', 'http', 'radimrehurek', 'com', 'gensim', 'auto_exampl', 'index', 'html', 'core', 'tutori', 'datacamp', 'articl', 'stem', 'http', 'www', 'datacamp', 'com', 'commun', 'tutori', 'stem', 'lemmat', 'python', '2', 'load', 'content', 'book', 'python', 'first', 'step', 'need', 'load', 'content', 'book', 'python', 'basic', 'pre', 'process', 'facilit', 'downstream', 'analys', 'call', 'collect', 'text', 'corpu', 'also', 'store', 'titl', 'book', 'futur', 'refer', 'print', 'respect', 'length', 'get', 'gaug', 'content', '3', 'find', 'origin', 'speci', 'next', 'part', 'analysi', 'often', 'check', 'result', 'return', 'method', 'given', 'book', 'consist', 'refer', 'darwin', 'famou', 'book', 'origin', 'speci', 'let', 'find', 'index', 'book', 'associ', '4', 'token', 'corpu', 'next', 'step', 'need', 'transform', 'corpu', 'format', 'easier', 'deal', 'downstream', 'analys', 'token', 'corpu', 'e', 'transform', 'text', 'list', 'individu', 'word', 'call', 'token', 'made', 'check', 'output', 'process', 'print', 'first', '20', 'token', 'origin', 'speci', '5', 'stem', 'token', 'corpu', 'read', 'origin', 'speci', 'notic', 'charl', 'darwin', 'use', 'differ', 'word', 'refer', 'similar', 'concept', 'exampl', 'concept', 'select', 'describ', 'word', 'select', 'select', 'select', 'select', 'dilut', 'weight', 'given', 'concept', 'book', 'potenti', 'bia', 'result', 'analysi', 'solv', 'issu', 'common', 'practic', 'use', 'stem', 'process', 'group', 'togeth', 'inflect', 'form', 'word', 'analys', 'singl', 'item', 'stem', 'origin', 'speci', 'exampl', 'word', 'relat', 'concept', 'select', 'would', 'gather', 'select', 'stem', 'analys', '20', 'full', 'book', 'stem', 'algorithm', 'take', 'sever', 'minut', 'run', 'order', 'make', 'process', 'faster', 'directli', 'load', 'final', 'result', 'pickl', 'file', 'review', 'method', 'use', 'gener', '6', 'build', 'bag', 'word', 'model', 'transform', 'text', 'stem', 'token', 'need', 'build', 'model', 'useabl', 'downstream', 'algorithm', 'first', 'need', 'creat', 'univers', 'word', 'contain', 'corpu', 'charl', 'darwin', 'book', 'call', 'dictionari', 'use', 'stem', 'token', 'dictionari', 'creat', 'bag', 'word', 'model', 'bow', 'text', 'bow', 'model', 'repres', 'book', 'list', 'uniqu', 'token', 'contain', 'associ', 'respect', 'number', 'occurr', 'better', 'understand', 'structur', 'model', 'print', 'five', 'first', 'element', 'one', 'origin', 'speci', 'bow', 'model', '7', 'common', 'word', 'given', 'book', 'result', 'return', 'bag', 'word', 'model', 'certainli', 'easi', 'use', 'comput', 'hard', 'interpret', 'human', 'straightforward', 'understand', 'stem', 'token', 'present', 'given', 'book', 'charl', 'darwin', 'mani', 'occurr', 'find', 'order', 'better', 'understand', 'model', 'gener', 'visual', 'content', 'transform', 'datafram', 'display', '10', 'common', 'stem', 'book', 'origin', 'speci', '8', 'build', 'tf', 'idf', 'model', 'presenc', 'stem', 'speci', 'would', 'hard', 'time', 'guess', 'bow', 'model', 'come', 'origin', 'speci', 'book', 'recur', 'word', 'apart', 'except', 'common', 'unlik', 'carri', 'inform', 'peculiar', 'given', 'book', 'need', 'use', 'addit', 'step', 'order', 'determin', 'token', 'specif', 'book', 'use', 'tf', 'idf', 'model', 'term', 'frequenc', 'invers', 'document', 'frequenc', 'model', 'defin', 'import', 'word', 'depend', 'frequent', 'text', 'infrequ', 'document', 'result', 'high', 'tf', 'idf', 'score', 'word', 'indic', 'word', 'specif', 'text', 'comput', 'score', 'print', '10', 'word', 'specif', 'origin', 'speci', 'book', 'e', '10', 'word', 'highest', 'tf', 'idf', 'score', '9', 'result', 'tf', 'idf', 'model', 'format', 'result', 'hard', 'interpret', 'human', 'therefor', 'transform', 'readabl', 'version', 'display', '10', 'specif', 'word', 'origin', 'speci', 'book', '10', 'comput', 'distanc', 'text', 'result', 'tf', 'idf', 'algorithm', 'return', 'stem', 'token', 'specif', 'book', 'exampl', 'see', 'topic', 'select', 'breed', 'domest', 'defin', 'origin', 'speci', 'ye', 'book', 'charl', 'darwin', 'talk', 'quit', 'lot', 'pigeon', 'model', 'associ', 'token', 'specif', 'book', 'measur', 'relat', 'book', 'purpos', 'use', 'measur', 'similar', 'call', 'cosin', 'similar', 'visual', 'result', 'distanc', 'matrix', 'e', 'matrix', 'show', 'pairwis', 'distanc', 'darwin', 'book', '11', 'book', 'similar', 'origin', 'speci', 'matrix', 'contain', 'similar', 'measur', 'pair', 'book', 'charl', 'darwin', 'use', 'matrix', 'quickli', 'extract', 'inform', 'need', 'e', 'distanc', 'one', 'book', 'one', 'sever', 'other', 'first', 'step', 'display', 'book', 'similar', 'origin', 'speci', 'specif', 'produc', 'bar', 'chart', 'show', 'book', 'rank', 'similar', 'darwin', 'landmark', 'work', '12', 'book', 'similar', 'content', 'turn', 'extrem', 'use', 'want', 'determin', 'given', 'book', 'similar', 'work', 'exampl', 'seen', 'enjoy', 'origin', 'speci', 'read', 'book', 'discuss', 'similar', 'concept', 'variat', 'anim', 'plant', 'domest', 'descent', 'man', 'select', 'relat', 'sex', 'familiar', 'darwin', 'work', 'suggest', 'like', 'seem', 'natur', 'inde', 'origin', 'speci', 'whole', 'chapter', 'domest', 'descent', 'man', 'select', 'relat', 'sex', 'appli', 'theori', 'natur', 'select', 'human', 'evolut', 'henc', 'result', 'make', 'sens', 'howev', 'want', 'better', 'understand', 'big', 'pictur', 'see', 'darwin', 'book', 'gener', 'relat', 'term', 'topic', 'discuss', 'purpos', 'repres', 'whole', 'similar', 'matrix', 'dendrogram', 'standard', 'tool', 'display', 'data', 'last', 'approach', 'display', 'inform', 'book', 'similar', 'exampl', 'find', 'book', 'closest', 'rel', 'also', 'visual', 'group', 'book', 'similar', 'topic', 'e', 'g', 'cluster', 'charl', 'darwin', 'person', 'life', 'autobiographi', 'letter', 'familiar', 'darwin', 'bibliographi', 'result', 'surpris', 'much', 'indic', 'method', 'give', 'good', 'result', 'otherwis', 'next', 'time', 'read', 'one', 'author', 'book', 'know', 'book', 'read', 'next', 'order', 'learn', 'topic', 'address']","['book', 'darwin', 'speci', 'stem', 'token', 'charl', 'origin', 'select', 'concept', 'model', 'idf', 'tf', 'bow', 'similar', 'word', 'topic', 'content', 'analys', 'domest', 'downstream']","<div>
 <p>
  Recommendation systems are at the heart of many products such as Netflix or Amazon. They generally rely on metadata (e.g., the actors or director of a movie) or on user tastes (e.g., the movies you liked before) to determine which you are most likely to enjoy. 
But when you are working with text-heavy datasets, you have access to a much richer resource—the whole text! In this project, you will learn how to build the basis of a book recommendation system based on their content. You will use Charles Darwin's bibliography to find out which books might interest you.
 </p>
 <p>
  The dataset was manually collected from
  <a href=""https://www.gutenberg.org"">
   Project Gutenberg
  </a>
  .
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Comparing%20Cosmetics%20by%20Ingredients,Comparing Cosmetics by Ingredients,python,Jiwon Jeong,Graduate Research Assistant at Yonsei University,https://www.datacamp.com/projects/695,"Process ingredient lists for cosmetics on Sephora then visualize similarity using t-SNE and Bokeh.
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Comparing%20Cosmetics%20by%20Ingredients/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Comparing%20Cosmetics%20by%20Ingredients/notebook.ipynb,"['ColumnDataSource,', 'HoverTool', 'TSNE', 'bokeh.io', 'bokeh.models', 'figure', 'push_notebook', 'show,', 'sklearn.manifold', 'bokeh.plotting', 'output_notebook,', 'numpy', 'pandas']","['.Ingredients', '.Label', '.io', '.manifold', '.values', '.models', '.8', '.plotting', '.csv']","['.query()', '.zeros()', '.add_tools()', '.circle()', '.split()', '.lower()', '.reset_index()', '.fit_transform()', '.append()', '.value_counts()', '.head()', '.read_csv()']","['oh_encoder()', 'display()', 'ColumnDataSource()', 'HoverTool()', 'TSNE()', 'figure()', 'output_notebook()', 'show()', 'len()', 'range()', 'print()']","['1', 'cosmet', 'chemic', 'complic', 'whenev', 'want', 'tri', 'new', 'cosmet', 'item', 'difficult', 'choos', 'actual', 'difficult', 'sometim', 'scari', 'new', 'item', 'never', 'tri', 'end', 'give', 'skin', 'troubl', 'know', 'inform', 'need', 'back', 'product', 'realli', 'hard', 'interpret', 'ingredi', 'list', 'unless', 'chemist', 'may', 'abl', 'relat', 'situat', 'instead', 'buy', 'hope', 'best', 'use', 'data', 'scienc', 'help', 'us', 'predict', 'product', 'may', 'good', 'fit', 'us', 'notebook', 'go', 'creat', 'content', 'base', 'recommend', 'system', 'content', 'chemic', 'compon', 'cosmet', 'specif', 'process', 'ingredi', 'list', '1472', 'cosmet', 'sephora', 'via', 'word', 'embed', 'visual', 'ingredi', 'similar', 'use', 'machin', 'learn', 'method', 'call', 'sne', 'interact', 'visual', 'librari', 'call', 'bokeh', 'let', 'inspect', 'data', 'first', '2', 'focu', 'one', 'product', 'categori', 'one', 'skin', 'type', 'six', 'categori', 'product', 'data', 'moistur', 'cleanser', 'face', 'mask', 'eye', 'cream', 'sun', 'protect', 'five', 'differ', 'skin', 'type', 'combin', 'dri', 'normal', 'oili', 'sensit', 'individu', 'differ', 'product', 'need', 'well', 'differ', 'skin', 'type', 'let', 'set', 'workflow', 'output', 'sne', 'model', 'visual', 'model', 'custom', 'exampl', 'notebook', 'let', 'focu', 'moistur', 'dri', 'skin', 'filter', 'data', 'accordingli', '3', 'token', 'ingredi', 'get', 'end', 'goal', 'compar', 'ingredi', 'product', 'first', 'need', 'preprocess', 'task', 'bookkeep', 'actual', 'word', 'product', 'ingredi', 'list', 'first', 'step', 'token', 'list', 'ingredi', 'ingredi', 'column', 'split', 'token', 'make', 'binari', 'bag', 'word', 'creat', 'dictionari', 'token', 'ingredient_idx', 'follow', 'format', 'ingredi', 'index', 'valu', '4', 'initi', 'document', 'term', 'matrix', 'dtm', 'next', 'step', 'make', 'document', 'term', 'matrix', 'dtm', 'cosmet', 'product', 'correspond', 'document', 'chemic', 'composit', 'correspond', 'term', 'mean', 'think', 'matrix', 'cosmet', 'ingredi', 'matrix', 'size', 'matrix', 'pictur', 'shown', 'creat', 'matrix', 'first', 'make', 'empti', 'matrix', 'fill', 'zero', 'length', 'matrix', 'total', 'number', 'cosmet', 'product', 'data', 'width', 'matrix', 'total', 'number', 'ingredi', 'initi', 'empti', 'matrix', 'fill', 'follow', 'task', '5', 'creat', 'counter', 'function', 'fill', 'matrix', 'let', 'creat', 'function', 'count', 'token', 'e', 'ingredi', 'list', 'row', 'end', 'goal', 'fill', 'matrix', '1', '0', 'ingredi', 'cosmet', 'valu', '1', 'remain', '0', 'name', 'function', 'oh_encod', 'becom', 'clear', 'next', '6', 'cosmet', 'ingredi', 'matrix', 'appli', 'oh_encod', 'functon', 'token', 'corpu', 'set', 'valu', 'row', 'matrix', 'result', 'tell', 'us', 'ingredi', 'item', 'compos', 'exampl', 'cosmet', 'item', 'contain', 'water', 'niacin', 'decyl', 'aleat', 'sh', 'polypeptid', '1', 'outcom', 'item', 'follow', 'call', 'one', 'hot', 'encod', 'encod', 'ingredi', 'item', 'cosmet', 'ingredi', 'matrix', 'fill', 'binari', 'valu', '7', 'dimens', 'reduct', 'sne', 'dimens', 'exist', 'matrix', '190', '2233', 'mean', '2233', 'featur', 'data', 'visual', 'downsiz', 'two', 'dimens', 'use', 'sne', 'reduc', 'dimens', 'data', 'distribut', 'stochast', 'neighbor', 'embed', 'sne', 'nonlinear', 'dimension', 'reduct', 'techniqu', 'well', 'suit', 'embed', 'high', 'dimension', 'data', 'visual', 'low', 'dimension', 'space', 'two', 'three', 'dimens', 'specif', 'techniqu', 'reduc', 'dimens', 'data', 'keep', 'similar', 'instanc', 'enabl', 'us', 'make', 'plot', 'coordin', 'plane', 'said', 'vector', 'cosmet', 'item', 'data', 'vector', 'two', 'dimension', 'coordin', 'distanc', 'point', 'indic', 'similar', 'item', '8', 'let', 'map', 'item', 'bokeh', 'readi', 'start', 'creat', 'plot', 'sne', 'valu', 'plot', 'item', 'coordin', 'plane', 'coolest', 'part', 'also', 'show', 'us', 'name', 'brand', 'price', 'rank', 'item', 'let', 'make', 'scatter', 'plot', 'use', 'bokeh', 'add', 'hover', 'tool', 'show', 'inform', 'note', 'display', 'plot', 'yet', 'make', 'addit', '9', 'ad', 'hover', 'tool', 'add', 'hover', 'tool', 'ad', 'hover', 'tool', 'allow', 'us', 'check', 'inform', 'item', 'whenev', 'cursor', 'directli', 'glyph', 'add', 'tooltip', 'product', 'name', 'brand', 'price', 'rank', 'e', 'rate', '10', 'map', 'cosmet', 'item', 'final', 'show', 'time', 'let', 'see', 'map', 'made', 'look', 'like', 'point', 'plot', 'correspond', 'cosmet', 'item', 'axe', 'mean', 'axe', 'sne', 'plot', 'easili', 'interpret', 'term', 'origin', 'data', 'like', 'mention', 'sne', 'visual', 'techniqu', 'plot', 'high', 'dimension', 'data', 'low', 'dimension', 'space', 'therefor', 'desir', 'interpret', 'sne', 'plot', 'quantit', 'instead', 'get', 'map', 'distanc', 'point', 'item', 'close', 'far', 'apart', 'closer', 'distanc', 'two', 'item', 'similar', 'composit', 'therefor', 'enabl', 'us', 'compar', 'item', 'without', 'chemistri', 'background', '11', 'compar', 'two', 'product', 'sinc', 'mani', 'cosmet', 'mani', 'ingredi', 'plot', 'mani', 'super', 'obviou', 'pattern', 'simpler', 'sne', 'plot', 'exampl', 'plot', 'requir', 'dig', 'find', 'insight', 'okay', 'say', 'enjoy', 'specif', 'product', 'increas', 'chanc', 'enjoy', 'anoth', 'product', 'similar', 'chemic', 'composit', 'say', 'enjoy', 'amorepacif', 'color', 'control', 'cushion', 'compact', 'broad', 'spectrum', 'spf', '50', 'could', 'find', 'product', 'plot', 'see', 'similar', 'product', 'exist', 'turn', 'look', 'point', 'furthest', 'left', 'plot', 'see', 'laneig', 'bb', 'cushion', 'hydra', 'radianc', 'spf', '50', 'essenti', 'overlap', 'amorepacif', 'product', 'look', 'ingredi', 'visual', 'confirm', 'composit', 'product', 'similar', 'though', 'difficult', 'analysi', 'first', 'place', 'plu', 'laneig', 'version', '22', 'cheaper', 'actual', 'higher', 'rate', 'perfect', 'use', 'real', 'life', 'actual', 'use', 'littl', 'ingredi', 'base', 'recommend', 'engin', 'help', 'us', 'make', 'educ', 'cosmet', 'purchas', 'choic']","['ingredi', 'cosmet', 'item', 'sne', 'matrix', 'product', 'skin', 'dimens', 'dimension', 'chemic', 'hover', 'fill', 'token', 'composit', 'embed', 'interpret', 'bokeh', 'difficult', 'coordin', '2233']","<div>
 <p>
  Buying new cosmetic products is difficult. It can even be scary for those who have sensitive skin and are prone to skin trouble. The information needed to alleviate this problem is on the back of each product, but it's tought to interpret those ingredient lists unless you have a background in chemistry.
 </p>
 <p>
  Instead of buying and hoping for the best, we can use data science to help us predict which products may be good fits for us. In this Project, you are going to create a content-based recommendation system where the 'content' will be the chemical components of cosmetics. Specifically, you will process ingredient lists for 1472 cosmetics on Sephora via
  <a href=""https://en.wikipedia.org/wiki/Word_embedding"">
   word embedding
  </a>
  , then visualize ingredient similarity using a machine learning method called t-SNE and an interactive visualization library called Bokeh.
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Disney%20Movies%20and%20Box%20Office%20Success,Disney Movies and Box Office Success,python,Sirinda Palahan,Assistant Professor at University of the Thai Chamber of Commerce,https://www.datacamp.com/projects/740,"Explore Disney movie data, then build a linear regression model to predict box office success.
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Disney%20Movies%20and%20Box%20Office%20Success/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Disney%20Movies%20and%20Box%20Office%20Success/notebook.ipynb,"['LinearRegression', 'sklearn.linear_model', 'seaborn', 'numpy', 'pandas']","['.5', '.coef_', '.intercept_', '.linear_model', '.random', '.year', '.dt', '.csv']","['.empty()', '.get_dummies()', '.percentile()', '.choice()', '.relplot()', '.fit()', '.arange()', '.reset_index()', '.sort_values()', '.head()', '.mean()', '.groupby()', '.read_csv()']","['LinearRegression()', 'range()', 'len()', 'print()']","['1', 'dataset', 'walt', 'disney', 'studio', 'foundat', 'walt', 'disney', 'compani', 'built', 'studio', 'produc', '600', 'film', 'sinc', 'debut', 'film', 'snow', 'white', 'seven', 'dwarf', '1937', 'mani', 'film', 'big', 'hit', 'notebook', 'explor', 'dataset', 'disney', 'movi', 'analyz', 'contribut', 'success', 'disney', 'movi', 'first', 'take', 'look', 'disney', 'data', 'compil', 'kelli', 'garrett', 'data', 'contain', '579', 'disney', 'movi', 'six', 'featur', 'movi', 'titl', 'releas', 'date', 'genr', 'mpaa', 'rate', 'total', 'gross', 'inflat', 'adjust', 'gross', 'let', 'load', 'file', 'see', 'data', 'look', 'like', '2', 'top', 'ten', 'movi', 'box', 'offic', 'let', 'start', 'explor', 'data', 'check', '10', 'disney', 'movi', 'earn', 'box', 'offic', 'sort', 'movi', 'inflat', 'adjust', 'gross', 'call', 'adjust', 'gross', 'point', 'onward', '3', 'movi', 'genr', 'trend', 'top', '10', 'movi', 'seem', 'genr', 'popular', 'other', 'check', 'genr', 'grow', 'stronger', 'popular', 'group', 'movi', 'genr', 'year', 'see', 'adjust', 'gross', 'genr', 'year', '4', 'visual', 'genr', 'popular', 'trend', 'make', 'plot', 'mean', 'group', 'better', 'see', 'box', 'offic', 'revenu', 'chang', 'time', '5', 'data', 'transform', 'line', 'plot', 'support', 'belief', 'genr', 'grow', 'faster', 'popular', 'other', 'disney', 'movi', 'action', 'adventur', 'genr', 'grow', 'fastest', 'next', 'build', 'linear', 'regress', 'model', 'understand', 'relationship', 'genr', 'box', 'offic', 'gross', 'sinc', 'linear', 'regress', 'requir', 'numer', 'variabl', 'genr', 'variabl', 'categor', 'variabl', 'use', 'techniqu', 'call', 'one', 'hot', 'encod', 'convert', 'categor', 'variabl', 'numer', 'techniqu', 'transform', 'categori', 'valu', 'new', 'column', 'assign', '1', '0', 'column', 'dataset', '11', 'dummi', 'variabl', 'one', 'genr', 'except', 'action', 'genr', 'use', 'baselin', 'exampl', 'movi', 'adventur', 'movi', 'like', 'lion', 'king', 'adventur', 'variabl', '1', 'dummi', 'variabl', '0', 'sinc', 'action', 'genr', 'baselin', 'movi', 'action', 'movi', 'aveng', 'dummi', 'variabl', '0', '6', 'genr', 'effect', 'dummi', 'variabl', 'build', 'linear', 'regress', 'model', 'predict', 'adjust', 'gross', 'use', 'dummi', 'variabl', 'regress', 'model', 'check', 'effect', 'genr', 'look', 'coeffici', 'given', 'unit', 'box', 'offic', 'gross', 'dollar', 'focu', 'impact', 'action', 'adventur', 'genr', 'note', 'intercept', 'first', 'coeffici', 'valu', 'repres', 'effect', 'action', 'adventur', 'genr', 'respect', 'expect', 'movi', 'like', 'lion', 'king', 'star', 'war', 'would', 'perform', 'better', 'box', 'offic', '7', 'confid', 'interv', 'regress', 'paramet', 'next', 'comput', '95', 'confid', 'interv', 'intercept', 'coeffici', '95', 'confid', 'interv', 'intercept', 'coeffici', 'bi', 'mean', 'interv', 'probabl', '95', 'contain', 'true', 'valu', 'coeffici', 'bi', 'respect', 'signific', 'relationship', 'given', 'genr', 'adjust', 'gross', 'confid', 'interv', 'coeffici', 'exclud', '0', 'calcul', 'confid', 'interv', 'use', 'pair', 'bootstrap', 'method', '8', 'confid', 'interv', 'regress', 'paramet', 'ii', 'initi', 'perform', 'pair', 'bootstrap', 'estim', 'regress', 'paramet', 'note', 'draw', 'sampl', 'set', 'genr', 'adjust', 'gross', 'data', 'genr', 'origin', 'genr', 'variabl', 'perform', 'one', 'hot', 'encod', '9', 'confid', 'interv', 'regress', 'paramet', 'iii', 'final', 'comput', '95', 'confid', 'interv', 'intercept', 'coeffici', 'examin', 'exclud', '0', 'one', 'unlik', 'valu', '0', 'conclud', 'signific', 'relationship', 'genr', 'adjust', 'gross', '10', 'disney', 'make', 'action', 'adventur', 'movi', 'confid', 'interv', 'bootstrap', 'method', 'intercept', 'coeffici', 'contain', 'valu', 'zero', 'alreadi', 'seen', 'lower', 'upper', 'bound', 'confid', 'interv', 'posit', 'tell', 'us', 'like', 'adjust', 'gross', 'significantli', 'correl', 'action', 'adventur', 'genr', 'result', 'bootstrap', 'analysi', 'trend', 'plot', 'done', 'earlier', 'could', 'say', 'disney', 'movi', 'plot', 'fit', 'action', 'adventur', 'genr', 'accord', 'data', 'tend', 'better', 'term', 'adjust', 'gross', 'genr', 'could', 'expect', 'marvel', 'star', 'war', 'live', 'action', 'movi', 'upcom', 'year']","['genr', 'movi', 'gross', 'disney', 'action', 'coeffici', 'interv', 'confid', 'adventur', 'adjust', 'variabl', 'dummi', 'offic', 'regress', 'box', 'intercept', 'bootstrap', 'film', '95', 'grow']","<div>
 <p>
  Since the 1930s, Walt Disney Studios has released more than 600 films covering a wide range of genres. While some movies are indeed directed towards kids, many are intended for a broad audience. In this project, you will analyze data to see how Disney movies have changed in popularity since its first movie release. You will also perform hypothesis testing to see what aspects of a movie contribute to its success.
 </p>
 <p>
  This project assumes that you can manipulate data using pandas and can make basic plots using Seaborn. You should also be familiar with statistical inference and be able to perform two-sample bootstrap hypothesis tests for difference of means. The prerequisites for this project are
  <a href=""https://www.datacamp.com/courses/introduction-to-linear-modeling-in-python"">
   Introduction to Linear Modeling in Python
  </a>
  and
  <a href=""https://www.datacamp.com/courses/introduction-to-seaborn"">
   Introduction to Seaborn
  </a>
  .
 </p>
 <p>
  The dataset used in this project is a modified version of the Disney Character Success dataset from
  <a href=""https://data.world/kgarrett/disney-character-success-00-16"">
   Kelly Garrett
  </a>
  .
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Do%20Left-handed%20People%20Really%20Die%20Young%3F,Do Left-handed People Really Die Young?,python,Madeleine Bonsma-Fisher,PhD Candidate at University of Toronto,https://www.datacamp.com/projects/479,"Use pandas and Bayesian statistics to see if left-handed people actually die earlier than righties.
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Do%20Left-handed%20People%20Really%20Die%20Young%3F/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Do%20Left-handed%20People%20Really%20Die%20Young%3F/notebook.ipynb,"['numpy', 'matplotlib.pyplot', 'pandas']","['.githubusercontent', '.Series', '.com', '.array', '.tsv', '.values', '.loc', '.shape', '.pyplot', '.csv']","['.nansum()', '.array()', '.subplots()', '.set_xlabel()', '.set_ylabel()', '.sum()', '.plot()', '.legend()', '.logical_and()', '.multiply()', '.mean()', '.tail()', '.zeros()', '.arange()', '.isin()', '.dropna()', '.info()', '.head()', '.read_csv()']","['P()', 'P_lh()', 'P_lh_given_A()', 'str()', 'round()', 'P_A_given_lh()', 'P_A_given_rh()', 'print()']","['1', 'old', 'left', 'hand', 'peopl', 'barack', 'obama', 'left', 'hand', 'bill', 'gate', 'oprah', 'winfrey', 'babe', 'ruth', 'mari', 'curi', '1991', 'studi', 'report', 'left', 'hand', 'peopl', 'die', 'averag', 'nine', 'year', 'earlier', 'right', 'hand', 'peopl', 'nine', 'year', 'could', 'realli', 'true', 'notebook', 'explor', 'phenomenon', 'use', 'age', 'distribut', 'data', 'see', 'reproduc', 'differ', 'averag', 'age', 'death', 'pure', 'chang', 'rate', 'left', 'handed', 'time', 'refut', 'claim', 'earli', 'death', 'left', 'hander', 'notebook', 'use', 'panda', 'bayesian', 'statist', 'analyz', 'probabl', 'certain', 'age', 'death', 'given', 'report', 'left', 'hand', 'right', 'hand', 'nation', 'geograph', 'survey', '1986', 'result', 'million', 'respons', 'includ', 'age', 'sex', 'hand', 'prefer', 'throw', 'write', 'research', 'averi', 'gilbert', 'charl', 'wysocki', 'analyz', 'data', 'notic', 'rate', 'left', 'handed', 'around', '13', 'peopl', 'younger', '40', 'decreas', 'age', '5', 'age', '80', 'conclud', 'base', 'analysi', 'subgroup', 'peopl', 'throw', 'left', 'hand', 'write', 'right', 'hand', 'age', 'depend', 'primarili', 'due', 'chang', 'social', 'accept', 'left', 'handed', 'mean', 'rate', 'factor', 'age', 'specif', 'rather', 'year', 'born', 'studi', 'done', 'today', 'expect', 'shift', 'version', 'distribut', 'function', 'age', 'ultim', 'see', 'effect', 'chang', 'rate', 'appar', 'mean', 'age', 'death', 'left', 'hand', 'peopl', 'let', 'start', 'plot', 'rate', 'left', 'handed', 'function', 'age', 'notebook', 'use', 'two', 'dataset', 'death', 'distribut', 'data', 'unit', 'state', 'year', '1999', 'sourc', 'websit', 'rate', 'left', 'handed', 'digit', 'figur', '1992', 'paper', 'gilbert', 'wysocki', '2', 'rate', 'left', 'handed', 'time', 'let', 'convert', 'data', 'plot', 'rate', 'left', 'handed', 'function', 'year', 'birth', 'averag', 'male', 'femal', 'get', 'singl', 'rate', 'sex', 'sinc', 'studi', 'done', '1986', 'data', 'convers', 'percentag', 'peopl', 'aliv', '1986', 'left', 'hand', 'function', 'year', 'born', '3', 'appli', 'bay', 'rule', 'probabl', 'die', 'certain', 'age', 'given', 'left', 'hand', 'equal', 'probabl', 'left', 'hand', 'given', 'die', 'certain', 'age', 'inequ', 'need', 'bay', 'theorem', 'statement', 'condit', 'probabl', 'allow', 'us', 'updat', 'belief', 'see', 'evid', 'want', 'calcul', 'probabl', 'die', 'age', 'given', 'left', 'hand', 'let', 'write', 'shorthand', 'p', 'lh', 'also', 'want', 'quantiti', 'right', 'hander', 'p', 'rh', 'bay', 'theorem', 'two', 'event', 'care', 'left', 'handed', 'lh', 'die', 'age', 'p', 'lh', 'frac', 'p', 'lh', 'p', 'p', 'lh', 'p', 'lh', 'probabl', 'left', 'hand', 'given', 'die', 'age', 'p', 'overal', 'probabl', 'die', 'age', 'p', 'lh', 'overal', 'probabl', 'left', 'hand', 'calcul', 'three', 'quantiti', 'begin', 'p', 'lh', 'calcul', 'p', 'lh', 'age', 'might', 'fall', 'outsid', 'origin', 'data', 'need', 'extrapol', 'data', 'earlier', 'later', 'year', 'sinc', 'rate', 'flatten', 'earli', '1900', 'late', '1900', 'use', 'point', 'end', 'take', 'mean', 'extrapol', 'rate', 'end', 'number', 'point', 'use', 'arbitrari', 'pick', '10', 'sinc', 'data', 'look', 'flat', 'ish', '1910', '4', 'peopl', 'normal', 'die', 'estim', 'probabl', 'live', 'age', 'use', 'data', 'give', 'number', 'peopl', 'die', 'given', 'year', 'old', 'creat', 'distribut', 'age', 'death', 'normal', 'number', 'total', 'number', 'peopl', 'die', 'think', 'data', 'probabl', 'distribut', 'give', 'probabl', 'die', 'age', 'data', 'use', 'entir', 'us', 'year', '1999', 'closest', 'could', 'find', 'time', 'rang', 'interest', 'block', 'load', 'death', 'distribut', 'data', 'plot', 'first', 'column', 'age', 'column', 'number', 'peopl', 'die', 'age', '5', 'overal', 'probabl', 'left', 'handed', 'previou', 'code', 'block', 'load', 'data', 'give', 'us', 'p', 'need', 'p', 'lh', 'p', 'lh', 'probabl', 'person', 'die', 'particular', 'studi', 'year', 'left', 'hand', 'assum', 'know', 'noth', 'els', 'averag', 'left', 'handed', 'popul', 'deceas', 'peopl', 'calcul', 'sum', 'left', 'handed', 'probabl', 'age', 'weight', 'number', 'deceas', 'peopl', 'age', 'divid', 'total', 'number', 'deceas', 'peopl', 'get', 'probabl', 'equat', 'form', 'calcul', 'n', 'number', 'peopl', 'die', 'age', 'given', 'datafram', 'death_distribution_data', '6', 'put', 'togeth', 'die', 'left', 'hand', 'mean', 'calcul', 'three', 'quantiti', 'need', 'p', 'p', 'lh', 'p', 'lh', 'combin', 'three', 'use', 'bay', 'rule', 'get', 'p', 'lh', 'probabl', 'age', 'death', 'studi', 'year', 'given', 'left', 'hand', 'make', 'answer', 'meaning', 'though', 'also', 'want', 'compar', 'p', 'rh', 'probabl', 'age', 'death', 'given', 'right', 'hand', 'calcul', 'follow', 'quantiti', 'twice', 'left', 'hander', 'right', 'hander', 'p', 'lh', 'frac', 'p', 'lh', 'p', 'p', 'lh', 'first', 'left', 'hander', '7', 'put', 'togeth', 'die', 'left', 'hand', 'ii', 'right', 'hander', '8', 'plot', 'distribut', 'condit', 'probabl', 'function', 'calcul', 'probabl', 'age', 'death', 'given', 'left', 'hand', 'right', 'hand', 'let', 'plot', 'probabl', 'rang', 'age', 'death', '6', '120', 'notic', 'left', 'hand', 'distribut', 'bump', 'age', '70', 'pool', 'deceas', 'peopl', 'left', 'hand', 'peopl', 'like', 'younger', '9', 'moment', 'truth', 'age', 'left', 'right', 'hander', 'death', 'final', 'let', 'compar', 'result', 'origin', 'studi', 'found', 'left', 'hand', 'peopl', 'nine', 'year', 'younger', 'death', 'averag', 'calcul', 'mean', 'probabl', 'distribut', 'way', 'calcul', 'p', 'lh', 'earlier', 'weight', 'probabl', 'distribut', 'age', 'sum', 'result', 'text', 'averag', 'age', 'left', 'hand', 'peopl', 'death', 'sum_a', 'p', 'lh', 'text', 'averag', 'age', 'right', 'hand', 'peopl', 'death', 'sum_a', 'p', 'rh', '10', 'final', 'comment', 'got', 'pretti', 'big', 'age', 'gap', 'left', 'hand', 'right', 'hand', 'peopl', 'pure', 'result', 'chang', 'rate', 'left', 'handed', 'popul', 'good', 'news', 'left', 'hander', 'probabl', 'die', 'young', 'sinist', 'report', 'rate', 'left', 'handed', 'increas', '3', 'earli', '1900', '11', 'today', 'mean', 'older', 'peopl', 'much', 'like', 'report', 'right', 'hand', 'left', 'hand', 'look', 'sampl', 'recent', 'deceas', 'peopl', 'old', 'right', 'hander', 'number', 'still', 'less', '9', 'year', 'gap', 'measur', 'studi', 'possibl', 'approxim', 'made', 'caus', 'use', 'death', 'distribut', 'data', 'almost', 'ten', 'year', 'studi', '1999', 'instead', '1991', 'use', 'death', 'data', 'entir', 'unit', 'state', 'instead', 'california', 'alon', 'origin', 'studi', 'extrapol', 'left', 'handed', 'survey', 'result', 'older', 'younger', 'age', 'group', 'possibl', 'extrapol', 'close', 'enough', 'true', 'rate', 'age', 'one', 'thing', 'could', 'next', 'figur', 'much', 'variabl', 'would', 'expect', 'encount', 'age', 'differ', 'pure', 'random', 'sampl', 'take', 'smaller', 'sampl', 'recent', 'deceas', 'peopl', 'assign', 'handed', 'probabl', 'survey', 'distribut', 'look', 'like', 'often', 'would', 'encount', 'age', 'gap', 'nine', 'year', 'use', 'data', 'assumpt', 'possibl', 'data', 'tool', 'random', 'sampl', 'finish', 'let', 'calcul', 'age', 'gap', 'expect', 'studi', '2018', 'instead', '1990', 'gap', 'turn', 'much', 'smaller', 'sinc', 'rate', 'left', 'handed', 'increas', 'peopl', 'born', '1960', 'nation', 'geograph', 'studi', '1990', 'studi', 'happen', 'uniqu', 'time', 'rate', 'left', 'handed', 'chang', 'across', 'lifetim', 'peopl', 'aliv', 'differ', 'handed', 'old', 'young', 'strike']","['p', 'age', 'lh', 'handed', 'left', 'hand', 'die', 'death', 'studi', 'hander', 'probabl', 'peopl', 'deceas', 'rate', 'extrapol', 'gap', 'nine', 'distribut', 'younger', 'bay']","<div>
 <p>
  Barack Obama is left-handed. So are Bill Gates and Oprah Winfrey; so were Babe Ruth and Marie Curie. A
  <a href=""https://www.nejm.org/doi/full/10.1056/NEJM199104043241418"">
   1991 study
  </a>
  reported that left-handed people die on average nine years earlier than right-handed people. Nine years! Could this really be true?
 </p>
 <p>
  In this project, you will explore this phenomenon using age distribution data to see if we can reproduce a difference in average age at death purely from the changing rates of left-handedness over time, refuting the claim of early death for left-handers. This notebook uses
  <code>
   pandas
  </code>
  and Bayesian statistics to analyze the probability of being a certain age at death given that you are reported as left-handed or right-handed.
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Dr.%20Semmelweis%20and%20the%20Discovery%20of%20Handwashing,Dr. Semmelweis and the Discovery of Handwashing,python,Rasmus Bååth,Senior Data Scientist at King (Activision Blizzard),https://www.datacamp.com/projects/20,"Reanalyse the data behind one of the most important discoveries of modern medicine: handwashing.
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Dr.%20Semmelweis%20and%20the%20Discovery%20of%20Handwashing/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Dr.%20Semmelweis%20and%20the%20Discovery%20of%20Handwashing/notebook.ipynb,['pandas'],"['.births', '.clinic', '.deaths', '.date', '.025', '.975', '.csv']","['.set_ylabel()', '.mean()', '.sample()', '.plot()', '.quantile()', '.Series()', '.to_datetime()', '.append()', '.read_csv()', '.head()']",['range()'],"['1', 'meet', 'dr', 'ignaz', 'semmelwei', 'dr', 'ignaz', 'semmelwei', 'hungarian', 'physician', 'born', '1818', 'activ', 'vienna', 'gener', 'hospit', 'dr', 'semmelwei', 'look', 'troubl', 'probabl', 'think', 'childb', 'fever', 'deadli', 'diseas', 'affect', 'women', 'given', 'birth', 'think', 'earli', '1840', 'vienna', 'gener', 'hospit', 'mani', '10', 'women', 'give', 'birth', 'die', 'think', 'know', 'caus', 'childb', 'fever', 'contamin', 'hand', 'doctor', 'deliv', 'babi', 'listen', 'wash', 'hand', 'notebook', 'go', 'reanalyz', 'data', 'made', 'semmelwei', 'discov', 'import', 'handwash', 'let', 'start', 'look', 'data', 'made', 'semmelwei', 'realiz', 'someth', 'wrong', 'procedur', 'vienna', 'gener', 'hospit', '2', 'alarm', 'number', 'death', 'tabl', 'show', 'number', 'women', 'give', 'birth', 'two', 'clinic', 'vienna', 'gener', 'hospit', 'year', '1841', '1846', 'notic', 'give', 'birth', 'danger', 'alarm', 'number', 'women', 'die', 'result', 'childbirth', 'childb', 'fever', 'see', 'clearli', 'look', 'proport', 'death', 'number', 'women', 'give', 'birth', 'let', 'zoom', 'proport', 'death', 'clinic', '1', '3', 'death', 'clinic', 'plot', 'proport', 'death', 'clinic', '1', 'clinic', '2', 'see', 'curiou', 'pattern', '4', 'handwash', 'begin', 'proport', 'death', 'constantli', 'much', 'higher', 'clinic', '1', 'semmelwei', 'saw', 'pattern', 'puzzl', 'distress', 'differ', 'clinic', 'mani', 'medic', 'student', 'serv', 'clinic', '1', 'mostli', 'midwif', 'student', 'serv', 'clinic', '2', 'midwiv', 'tend', 'women', 'give', 'birth', 'medic', 'student', 'also', 'spent', 'time', 'autopsi', 'room', 'examin', 'corps', 'semmelwei', 'start', 'suspect', 'someth', 'corps', 'spread', 'hand', 'medic', 'student', 'caus', 'childb', 'fever', 'desper', 'attempt', 'stop', 'high', 'mortal', 'rate', 'decre', 'wash', 'hand', 'unorthodox', 'controversi', 'request', 'nobodi', 'vienna', 'knew', 'bacteria', 'point', 'time', 'let', 'load', 'monthli', 'data', 'clinic', '1', 'see', 'handwash', 'effect', '5', 'effect', 'handwash', 'data', 'load', 'look', 'proport', 'death', 'time', 'plot', 'mark', 'obligatori', 'handwash', 'start', 'reduc', 'proport', 'death', 'degre', 'abl', 'spot', '6', 'effect', 'handwash', 'highlight', 'start', 'summer', '1847', 'proport', 'death', 'drastic', 'reduc', 'ye', 'semmelwei', 'made', 'handwash', 'obligatori', 'effect', 'handwash', 'made', 'even', 'clear', 'highlight', 'graph', '7', 'handwash', 'fewer', 'death', 'graph', 'show', 'handwash', 'huge', 'effect', 'much', 'reduc', 'monthli', 'proport', 'death', 'averag', '8', 'bootstrap', 'analysi', 'semmelwei', 'handwash', 'data', 'reduc', 'proport', 'death', 'around', '8', 'percentag', 'point', '10', 'averag', '2', 'still', 'high', 'number', 'modern', 'standard', 'get', 'feel', 'uncertainti', 'around', 'much', 'handwash', 'reduc', 'mortal', 'could', 'look', 'confid', 'interv', 'calcul', 'use', 'bootstrap', 'method', '9', 'fate', 'dr', 'semmelwei', 'handwash', 'reduc', 'proport', 'death', '6', '7', '10', 'percentag', 'point', 'accord', '95', 'confid', 'interv', 'would', 'seem', 'semmelwei', 'solid', 'evid', 'handwash', 'simpl', 'highli', 'effect', 'procedur', 'could', 'save', 'mani', 'live', 'tragedi', 'despit', 'evid', 'semmelwei', 'theori', 'childb', 'fever', 'caus', 'substanc', 'today', 'know', 'bacteria', 'autopsi', 'room', 'corps', 'ridicul', 'contemporari', 'scientist', 'medic', 'commun', 'larg', 'reject', 'discoveri', '1849', 'forc', 'leav', 'vienna', 'gener', 'hospit', 'good', 'one', 'reason', 'statist', 'statist', 'argument', 'uncommon', 'medic', 'scienc', '1800', 'semmelwei', 'publish', 'data', 'long', 'tabl', 'raw', 'data', 'show', 'graph', 'confid', 'interv', 'would', 'access', 'analysi', 'put', 'togeth', 'might', 'success', 'get', 'viennes', 'doctor', 'wash', 'hand']","['handwash', 'semmelwei', 'clinic', 'death', 'proport', 'vienna', 'childb', 'fever', 'hospit', 'women', 'birth', 'medic', 'reduc', 'dr', 'student', 'corps', 'wash', 'graph', 'effect', 'confid']","<div>
 <p>
  In 1847, the Hungarian physician Ignaz Semmelweis made a breakthough discovery:
he discovers handwashing. Contaminated hands was a major cause of childbed fever
and by enforcing handwashing at his hospital he saved hundreds of lives.
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Exploring%20the%20Bitcoin%20Cryptocurrency%20Market,Exploring the Bitcoin Cryptocurrency Market,python,Juan González-Vallinas,Director Data Science at multilayer.io,https://www.datacamp.com/projects/82,"You will explore the market capitalization of Bitcoin and other cryptocurrencies.
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Exploring%20the%20Bitcoin%20Cryptocurrency%20Market/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Exploring%20the%20Bitcoin%20Cryptocurrency%20Market/notebook.ipynb,"['matplotlib.pyplot', 'pandas']","['.market_cap_usd', '.plot', '.figure_format', '.id', '.market_cap_perc', '.percent_change_24h', '.percent_change_7d', '.style', '.pyplot', '.csv']","['.query()', '.bar()', '.count()', '.set_index()', '.set_ylabel()', '.sort_values()', '.notnull()', '.suptitle()', '.assign()', '.info()', '.subplots()', '.use()', '.set_xlabel()', '.dropna()', '.sum()', '.head()', '.read_csv()']","['capcount()', 'top10_subplot()']","['1', 'bitcoin', 'cryptocurr', 'full', 'dataset', 'filter', 'reproduc', 'sinc', 'launch', 'bitcoin', '2008', 'hundr', 'similar', 'project', 'base', 'blockchain', 'technolog', 'emerg', 'call', 'cryptocurr', 'also', 'coin', 'crypto', 'internet', 'slang', 'extrem', 'valuabl', 'nowaday', 'other', 'may', 'potenti', 'becom', 'extrem', 'valuabl', 'future1', 'fact', '6th', 'decemb', '2017', 'bitcoin', 'market', 'capit', '200', 'billion', 'astonish', 'increas', 'bitcoin', 'market', 'capit', '2017', '1', 'warn', 'cryptocurr', 'market', 'except', 'volatile2', 'money', 'put', 'might', 'disappear', 'thin', 'air', 'cryptocurr', 'mention', 'might', 'scam', 'similar', 'ponzi', 'scheme', 'mani', 'issu', 'overvalu', 'technic', 'etc', 'pleas', 'mistak', 'invest', 'advic', '2', 'updat', 'march', '2020', 'well', 'turn', 'volatil', 'inde', 'said', 'let', 'get', 'busi', 'start', 'csv', 'conveni', 'download', '6th', 'decemb', '2017', 'use', 'coinmarketcap', 'api', 'note', 'public', 'api', 'went', 'privat', '2020', 'longer', 'avail', 'name', 'dataset', 'coinmarketcap_06122017', 'csv', '2', 'discard', 'cryptocurr', 'without', 'market', 'capit', 'count', 'id', 'market_cap_usd', 'differ', 'cryptocurr', 'list', 'coinmarketcap', 'com', 'known', 'market', 'capit', 'repres', 'nan', 'data', 'nan', 'count', 'count', 'cryptocurr', 'littl', 'interest', 'us', 'analysi', 'safe', 'remov', '3', 'big', 'bitcoin', 'compar', 'rest', 'cryptocurr', 'time', 'write', 'bitcoin', 'seriou', 'competit', 'project', 'still', 'domin', 'market', 'capit', 'let', 'plot', 'market', 'capit', 'top', '10', 'coin', 'barplot', 'better', 'visual', '4', 'make', 'plot', 'easier', 'read', 'inform', 'plot', 'inform', 'enough', 'improv', 'bitcoin', 'big', 'coin', 'hard', 'distinguish', 'instead', 'percentag', 'let', 'use', 'log10', 'scale', 'raw', 'capit', 'plu', 'let', 'use', 'color', 'group', 'similar', 'coin', 'make', 'plot', 'informative1', 'color', 'rational', 'bitcoin', 'cash', 'bitcoin', 'gold', 'fork', 'bitcoin', 'blockchain2', 'ethereum', 'cardano', 'offer', 'ture', 'complet', 'smart', 'contract', 'iota', 'rippl', 'minabl', 'dash', 'litecoin', 'monero', 'get', 'color', '1', 'color', 'simplif', 'differ', 'similar', 'repres', '2', 'bitcoin', 'fork', 'actual', 'differ', 'scope', 'talk', 'pleas', 'see', 'warn', 'research', '5', 'go', 'volatil', 'cryptocurr', 'cryptocurr', 'market', 'spectacularli', 'volatil', 'sinc', 'first', 'exchang', 'open', 'notebook', 'start', 'big', 'bold', 'warn', 'noth', 'let', 'explor', 'volatil', 'bit', 'begin', 'select', 'plot', '24', 'hour', '7', 'day', 'percentag', 'chang', 'alreadi', 'avail', '6', 'well', 'alreadi', 'see', 'thing', 'bit', 'crazi', 'seem', 'lose', 'lot', 'money', 'quickli', 'cryptocurr', 'let', 'plot', 'top', '10', 'biggest', 'gainer', 'top', '10', 'loser', 'market', 'capit', '7', 'ok', 'interest', 'let', 'check', 'weekli', 'seri', '800', 'daili', 'increas', 'tutori', 'buy', 'random', 'coin', '1', 'calm', 'let', 'reus', 'function', 'defin', 'see', 'go', 'weekli', 'instead', 'daili', '1', 'pleas', 'take', 'moment', 'understand', 'implic', 'red', 'plot', 'much', 'valu', 'cryptocurr', 'lose', 'short', 'period', 'time', '8', 'small', 'small', 'name', 'cryptocurr', 'quit', 'unknown', 'consider', 'fluctuat', '1', '7', 'day', 'percentag', 'chang', 'stock', 'mani', 'financi', 'product', 'smaller', 'capit', 'bigger', 'risk', 'reward', 'smaller', 'cryptocurr', 'less', 'stabl', 'project', 'gener', 'therefor', 'even', 'riskier', 'invest', 'bigger', 'ones1', 'let', 'classifi', 'dataset', 'base', 'investopedia', 'capit', 'definit', 'compani', 'stock', '1', 'cryptocurr', 'new', 'asset', 'class', 'directli', 'compar', 'stock', 'furthermor', 'limit', 'set', 'stone', 'small', 'larg', 'stock', 'final', 'investor', 'argu', 'bitcoin', 'similar', 'gold', 'would', 'make', 'compar', 'commod', 'instead', '9', 'coin', 'tini', 'note', 'mani', 'coin', 'compar', 'larg', 'compani', 'market', 'cap', 'let', 'divert', 'origin', 'investopedia', 'definit', 'merg', 'categori', 'thank', 'complet', 'project']","['cryptocurr', 'bitcoin', 'coin', 'capit', 'market', 'volatil', 'stock', 'warn', 'pleas', 'color', '2020', '6th', 'bigger', 'coinmarketcap', 'fork', 'investopedia', 'lose', 'valuabl', 'project', 'percentag']","<div>
 <p>
  To better understand the growth and impact of
Bitcoin and other
  <a href=""https://en.wikipedia.org/wiki/Cryptocurrency"">
   cryptocurrencies
  </a>
  you will, in this project, explore the
  <em>
   market capitalization
  </em>
  of different cryptocurrencies.
 </p>
 <p>
  <strong>
   Warning: The cryptocurrency market is exceptionally volatile,
and any money you put in might disappear 
into thin air. Never invest money you can't afford to lose.
  </strong>
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Exploring%20the%20Evolution%20of%20Linux,Exploring the Evolution of Linux,python,Markus Harrer,Software Development Analyst,https://www.datacamp.com/projects/111,"Find out about the evolution of the Linux operating system by exploring its version control system.
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Exploring%20the%20Evolution%20of%20Linux/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Exploring%20the%20Evolution%20of%20Linux/notebook.ipynb,['pandas'],"['.timestamp', '.author', '.year', '.gz', '.columns', '.index', '.csv']","['.describe()', '.Grouper()', '.max()', '.min()', '.idxmax()', '.read()', '.unique()', '.count()', '.set_xlabel()', '.set_ylabel()', '.dropna()', '.to_datetime()', '.value_counts()', '.groupby()', '.plot()', '.head()', '.read_csv()']","['open()', 'len()', 'print()']","['1', 'introduct', 'version', 'control', 'repositori', 'like', 'cv', 'subvers', 'git', 'real', 'gold', 'mine', 'softwar', 'develop', 'contain', 'everi', 'chang', 'sourc', 'code', 'includ', 'date', 'respons', 'develop', 'well', 'littl', 'messag', 'describ', 'intent', 'chang', 'notebook', 'analyz', 'evolut', 'famou', 'open', 'sourc', 'project', 'linux', 'kernel', 'linux', 'kernel', 'heart', 'linux', 'distribut', 'like', 'debian', 'ubuntu', 'cento', 'dataset', 'hand', 'contain', 'histori', 'kernel', 'develop', 'almost', '13', 'year', 'earli', '2005', 'late', '2017', 'get', 'insight', 'work', 'develop', 'effort', 'identifi', 'top', '10', 'contributor', 'visual', 'commit', 'year', '2', 'read', 'dataset', 'dataset', 'creat', 'use', 'command', 'git', 'log', 'encod', 'latin', '1', 'pretti', 'late', '2017', 'latin', '1', 'encod', 'text', 'output', 'save', 'header', 'less', 'csv', 'file', 'file', 'row', 'commit', 'entri', 'follow', 'inform', 'timestamp', 'time', 'commit', 'unix', 'timestamp', 'second', 'sinc', '1970', '01', '01', '00', '00', '00', 'git', 'log', 'placehold', 'author', 'name', 'author', 'perform', 'commit', 'git', 'log', 'placehold', 'column', 'separ', 'number', 'sign', 'complet', 'dataset', 'dataset', 'directori', 'gz', 'compress', 'csv', 'file', 'name', 'git_log', 'gz', '3', 'get', 'overview', 'dataset', 'contain', 'inform', 'everi', 'singl', 'code', 'contribut', 'commit', 'linux', 'kernel', 'last', '13', 'year', 'first', 'take', 'look', 'number', 'author', 'commit', 'repositori', '4', 'find', 'top', '10', 'contributor', 'import', 'peopl', 'chang', 'linux', 'kernel', 'often', 'see', 'bottleneck', 'take', 'look', 'top', '10', 'author', 'commit', '5', 'wrangl', 'data', 'analysi', 'want', 'visual', 'contribut', 'time', 'use', 'inform', 'timestamp', 'column', 'creat', 'time', 'seri', 'base', 'column', '6', 'treat', 'wrong', 'timestamp', 'see', 'result', 'contributor', 'oper', 'system', 'time', 'incorrectli', 'set', 'commit', 'repositori', 'clean', 'timestamp', 'column', 'drop', 'row', 'incorrect', 'timestamp', '7', 'group', 'commit', 'per', 'year', 'find', 'develop', 'activ', 'increas', 'time', 'group', 'commit', 'year', 'count', '8', 'visual', 'histori', 'linux', 'final', 'make', 'plot', 'count', 'better', 'see', 'develop', 'effort', 'linux', 'increas', 'last', 'year', '9', 'conclus', 'thank', 'solid', 'foundat', 'caretak', 'linux', 'torvald', 'mani', 'develop', 'abl', 'contribut', 'linux', 'kernel', 'well', 'decreas', 'develop', 'activ', 'sight']","['linux', 'commit', 'timestamp', 'kernel', 'develop', 'git', '00', 'log', 'author', 'contributor', 'repositori', 'gz', 'latin', 'placehold', 'contribut', '01', 'effort', 'encod', 'year', 'late']","<div>
 <p>
  Version control repositories like CVS, Subversion or Git store rich
evolution information about a software project. In this project, 
you'll be challenged to read in, clean up and visualize a real world
Git repository dataset of the Linux kernel. With almost 700k commits and 
thousands of contributors (find out the exact number in this project ;-) )
there are some little data cleaning and wrangling challenges that you'll
encounter. But you'll also gain insights about the development activities
over the last 13 years.
 </p>
 <p>
  For this Project, you need to be familiar with Pandas
  <code>
   DataFrame
  </code>
  s,
especially the
  <code>
   read_csv
  </code>
  and
  <code>
   groupby
  </code>
  functions, as well as working with time series data.
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Exploring%20the%20History%20of%20Lego,Exploring the History of Lego,python,Ramnath Vaidyanathan,VP of Product Research at DataCamp,https://www.datacamp.com/projects/10,Use a variety of data manipulation techniques to explore different aspects of Lego's history!,https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Exploring%20the%20History%20of%20Lego/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Exploring%20the%20History%20of%20Lego/notebook.ipynb,['pandas'],"['.rgb', '.count', '.Series', '.csv']","['.groupby()', '.count()', '.agg()', '.duplicated()', '.unique()', '.set_title()', '.set_xlabel()', '.set_ylabel()', '.sum()', '.mean()', '.plot()', '.head()', '.read_csv()']","['len()', 'print()']","['1', 'introduct', 'everyon', 'love', 'lego', 'unless', 'ever', 'step', 'one', 'know', 'way', 'lego', 'deriv', 'danish', 'phrase', 'leg', 'godt', 'mean', 'play', 'well', 'unless', 'speak', 'danish', 'probabl', 'project', 'analyz', 'fascin', 'dataset', 'everi', 'singl', 'lego', 'block', 'ever', 'built', '2', 'read', 'data', 'comprehens', 'databas', 'lego', 'block', 'provid', 'rebrick', 'data', 'avail', 'csv', 'file', 'schema', 'shown', 'let', 'us', 'start', 'read', 'color', 'data', 'get', 'sens', 'divers', 'lego', 'set', '3', 'explor', 'color', 'read', 'color', 'data', 'start', 'explor', 'let', 'us', 'start', 'understand', 'number', 'color', 'avail', '4', 'transpar', 'color', 'lego', 'set', 'color', 'data', 'column', 'name', 'is_tran', 'indic', 'whether', 'color', 'transpar', 'would', 'interest', 'explor', 'distribut', 'transpar', 'vs', 'non', 'transpar', 'color', '5', 'explor', 'lego', 'set', 'anoth', 'interest', 'dataset', 'avail', 'databas', 'set', 'data', 'contain', 'comprehens', 'list', 'set', 'year', 'number', 'part', 'set', 'contain', 'let', 'us', 'use', 'data', 'explor', 'averag', 'number', 'part', 'lego', 'set', 'vari', 'year', '6', 'lego', 'theme', 'year', 'lego', 'block', 'ship', 'multipl', 'theme', 'let', 'us', 'tri', 'get', 'sens', 'number', 'theme', 'ship', 'vari', 'year', '7', 'wrap', 'lego', 'block', 'offer', 'unlimit', 'amount', 'fun', 'across', 'age', 'explor', 'interest', 'trend', 'around', 'color', 'part', 'theme']","['lego', 'color', 'theme', 'transpar', 'block', 'danish', 'ship', 'databas', 'unless', 'explor', 'set', 'comprehens', 'vari', 'avail', 'read', 'divers', 'fascin', 'godt', 'is_tran', 'leg']","<div>
 <p>
  The
  <a href=""https://rebrickable.com/downloads/"">
   Rebrickable
  </a>
  database includes data on every 
LEGO set that has ever been sold; the names of the sets, what bricks they contain, 
what color the bricks are, etc. It might be small bricks, but this is big data!
In this project, you will get to explore the Rebrickable database and answer a series of 
questions related to the history of Lego!
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Extract%20Stock%20Sentiment%20from%20News%20Headlines,Extract Stock Sentiment from News Headlines,python,Juan González-Vallinas,Director Data Science at multilayer.io,https://www.datacamp.com/projects/611,"Scrape news headlines for FB and TSLA then apply sentiment analysis to generate investment insight.
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Extract%20Stock%20Sentiment%20from%20News%20Headlines/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Extract%20Stock%20Sentiment%20from%20News%20Headlines/notebook.ipynb,"[""#nltk.download('vader_lexicon')"", 'SentimentIntensityAnalyzer', 'nltk.sentiment.vader', 'BeautifulSoup', 'bs4', 'nltk;', 'os', 'matplotlib.pyplot', 'pandas']","['.text', '.a', '.date', '.html', '.lexicon', '.polarity_scores', '.sentiment', '.td', '.time', '.title', '.vader', '.dt', '.plot', '.2', '.columns', '.5', '.style', '.pyplot']","['.find()', '.prettify()', '.xs()', '.get_text()', '.set_index()', '.DataFrame()', '.split()', '.findAll()', '.find_all()', '.listdir()', '.to_list()', '.update()', '.bar()', '.items()', '.to_datetime()', '.drop_duplicates()', '.unstack()', '.head()', '.sort_index()', '.download()', '.join()', '.count()', '.apply()', '.drop()', '.legend()', '.use()', '.ylabel()', '.append()', '.mean()', '.groupby()']","['SentimentIntensityAnalyzer()', 'BeautifulSoup()', 'enumerate()', 'open()', 'print()', 'len()']","['1', 'search', 'gold', 'insid', 'html', 'file', 'use', 'take', 'day', 'financi', 'news', 'spread', 'via', 'radio', 'newspap', 'word', 'mouth', 'age', 'internet', 'take', 'second', 'know', 'news', 'articl', 'automat', 'gener', 'figur', 'earn', 'call', 'stream', 'hedg', 'fund', 'independ', 'trader', 'use', 'data', 'scienc', 'process', 'wealth', 'inform', 'quest', 'profit', 'notebook', 'gener', 'invest', 'insight', 'appli', 'sentiment', 'analysi', 'financi', 'news', 'headlin', 'finviz', 'com', 'use', 'natur', 'languag', 'process', 'techniqu', 'understand', 'emot', 'behind', 'headlin', 'predict', 'whether', 'market', 'feel', 'good', 'bad', 'stock', 'would', 'possibl', 'make', 'educ', 'guess', 'certain', 'stock', 'perform', 'trade', 'accordingli', 'hope', 'make', 'money', 'headlin', 'finviz', 'headlin', 'similar', 'length', 'easier', 'pars', 'group', 'full', 'articl', 'vari', 'length', 'finviz', 'list', 'trust', 'websit', 'headlin', 'site', 'tend', 'consist', 'jargon', 'independ', 'blogger', 'consist', 'textual', 'pattern', 'improv', 'sentiment', 'analysi', 'web', 'scrape', 'requir', 'data', 'scienc', 'ethic', 'send', 'lot', 'traffic', 'finviz', 'server', 'nice', 'html', 'file', 'facebook', 'tesla', 'variou', 'point', 'time', 'download', 'let', 'import', 'file', 'memori', 'disclaim', 'invest', 'stock', 'market', 'involv', 'risk', 'lead', 'monetari', 'loss', 'content', 'notebook', 'taken', 'financi', 'advic', '2', 'insid', 'file', 'anyway', 'grab', 'tabl', 'contain', 'headlin', 'stock', 'html', 'file', 'start', 'pars', 'tabl', 'need', 'understand', 'data', 'tabl', 'structur', 'option', 'open', 'html', 'file', 'text', 'editor', 'prefer', 'one', 'syntax', 'highlight', 'like', 'sublim', 'text', 'explor', 'use', 'browser', 'webdev', 'toolkit', 'explor', 'html', 'explor', 'headlin', 'tabl', 'notebook', 'let', 'third', 'option', '3', 'extra', 'extra', 'extract', 'news', 'headlin', 'saw', 'interest', 'data', 'insid', 'tabl', 'row', 'tr', 'text', 'insid', 'td', 'tag', 'let', 'actual', 'pars', 'data', 'tabl', 'comfort', 'data', 'structur', '4', 'make', 'nltk', 'think', 'like', 'financi', 'journalist', 'sentiment', 'analysi', 'sensit', 'context', 'exampl', 'say', 'addict', 'often', 'mean', 'someth', 'posit', 'context', 'video', 'game', 'enjoy', 'friend', 'often', 'mean', 'someth', 'neg', 'talk', 'opioid', 'rememb', 'reason', 'chose', 'headlin', 'tri', 'extract', 'sentiment', 'financi', 'journalist', 'like', 'profession', 'lingo', 'let', 'make', 'nltk', 'think', 'like', 'financi', 'journalist', 'ad', 'new', 'word', 'sentiment', 'valu', 'lexicon', '5', 'break', 'news', 'nltk', 'crush', 'sentiment', 'estim', 'data', 'algorithm', 'load', 'get', 'core', 'matter', 'programmat', 'predict', 'sentiment', 'news', 'headlin', 'luckili', 'us', 'vader', 'high', 'level', 'case', 'adjust', 'model', 'lexicon', 'addit', 'vader', 'box', 'extra', 'lexicon', 'would', 'like', 'translat', 'heavi', 'loss', 'real', 'money', 'real', 'sentiment', 'analysi', 'tool', 'chanc', 'profit', 'requir', 'extens', 'dedic', 'financ', 'news', 'lexicon', 'furthermor', 'might', 'also', 'enough', 'use', 'pre', 'packag', 'model', 'like', 'vader', 'differ', 'use', 'vader', 'low', 'level', 'nltk', 'http', 'www', 'nltk', 'org', 'howto', 'sentiment', 'html', '6', 'plot', 'sentiment', 'subplot', 'score', 'let', 'start', 'plot', 'result', 'start', 'plot', 'time', 'seri', 'stock', '7', 'weekend', 'duplic', 'happen', 'tesla', 'novemb', '22nd', 'sinc', 'happen', 'headlin', 'insid', 'datafram', 'quick', 'peek', 'reveal', 'problem', 'particular', 'day', '5', 'headlin', 'day', 'two', 'headlin', 'verbatim', 'anoth', 'anoth', 'news', 'outlet', 'let', 'clean', 'dataset', 'bit', 'much', 'headlin', 'news', 'piec', 'differ', 'sourc', 'fact', 'written', 'differ', 'could', 'provid', 'differ', 'perspect', 'stori', 'plu', 'one', 'piec', 'news', 'import', 'tend', 'get', 'headlin', 'multipl', 'sourc', 'want', 'get', 'rid', 'verbatim', 'copi', 'headlin', 'like', 'come', 'journalist', 'forward', 'around', 'speak', '8', 'sentiment', 'one', 'singl', 'trade', 'day', 'stock', 'understand', 'possibl', 'dataset', 'get', 'better', 'feel', 'data', 'let', 'focu', 'one', 'trade', 'day', 'one', 'singl', 'stock', 'make', 'inform', 'plot', 'see', 'smallest', 'grain', 'possibl', 'headlin', 'subscor', '9', 'visual', 'singl', 'day', 'make', 'plot', 'visual', 'posit', 'neg', 'neutral', 'score', 'singl', 'day', 'trade', 'singl', 'stock', 'one', 'mani', 'way', 'visual', 'dataset']","['headlin', 'sentiment', 'stock', 'news', 'financi', 'insid', 'finviz', 'journalist', 'lexicon', 'vader', 'nltk', 'html', 'trade', 'pars', 'extra', 'tabl', 'independ', 'piec', 'tesla', 'verbatim']","<div>
 <p>
  It used to take days for financial news to spread via radio, newspapers, and word of mouth. Now, in the age of the internet, it takes seconds. Did you know news articles are
  <em>
   automatically
  </em>
  being generated from figures and earnings call streams? In this project, you will generate investing insight by applying
  <a href=""https://en.wikipedia.org/wiki/Sentiment_analysis"">
   sentiment analysis
  </a>
  on financial news headlines from
  <a href=""https://finviz.com"">
   Finviz
  </a>
  . Using this
  <a href=""https://en.wikipedia.org/wiki/Natural_language_processing"">
   natural language processing
  </a>
  technique, you will understand the emotion behind the headlines and predict whether the market
  <em>
   feels
  </em>
  good or bad about a stock.
 </p>
 <p>
  The datasets used in this project are raw HTML files for the
  <a href=""https://finviz.com/quote.ashx?t=FB"">
   Facebook
  </a>
  (FB) and
  <a href=""https://finviz.com/quote.ashx?t=TSLA"">
   Tesla
  </a>
  (TSLA) stocks from
  <a href=""https://finviz.com/"">
   FINVIZ.com
  </a>
  , a popular website dedicated to stock information and news.
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Find%20Movie%20Similarity%20from%20Plot%20Summaries,Find Movie Similarity from Plot Summaries,python,Anubhav Singh,Founder at The Code Foundation,https://www.datacamp.com/projects/648,"Use NLP and clustering on movie plot summaries from IMDb and Wikipedia to quantify movie similarity.
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Find%20Movie%20Similarity%20from%20Plot%20Summaries/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Find%20Movie%20Similarity%20from%20Plot%20Summaries/notebook.ipynb,"['KMeans', 'SnowballStemmer', 'cosine_similarity', 'dendrogram', 'linkage,', ""nltk.download('punkt')"", 'nltk.stem.snowball', 'scipy.cluster.hierarchy', 'sklearn.cluster', 'sklearn.metrics.pairwise', 'nltk;', 'TfidfVectorizer', 're', 'sklearn.feature_extraction.text', 'numpy', 'matplotlib.pyplot', 'pandas']","['.cluster', '.hierarchy', '.labels_', '.pairwise', '.snowball', '.shape', '.8', '.stem', '.random', '.feature_extraction', '.metrics', '.2', '.text', '.pyplot', '.plot', '.csv']","['.search()', '.sent_tokenize()', '.word_tokenize()', '.astype()', '.stem()', '.gcf()', '.get_xmajorticklabels()', '.set_color()', '.tolist()', '.gca()', '.seed()', '.set_size_inches()', '.download()', '.hist()', '.fit_transform()', '.fit()', '.show()', '.value_counts()', '.head()', '.read_csv()']","['SnowballStemmer()', 'tokenize_and_stem()', 'KMeans()', 'Not()', 'cosine_similarity()', 'dendrogram()', 'linkage()', 'TfidfVectorizer()', 'print()', 'len()']","['1', 'import', 'observ', 'dataset', 'love', 'watch', 'movi', 'movi', 'like', 'peopl', 'prefer', 'movi', 'similar', 'genr', 'us', 'love', 'watch', 'action', 'movi', 'us', 'like', 'watch', 'horror', 'us', 'like', 'watch', 'movi', 'ninja', 'us', 'like', 'watch', 'superhero', 'movi', 'within', 'genr', 'often', 'share', 'common', 'base', 'paramet', 'consid', 'follow', 'two', 'movi', 'movi', '2001', 'space', 'odyssey', 'close', 'encount', 'third', 'kind', 'movi', 'base', 'alien', 'come', 'earth', 'seen', 'inde', 'share', 'mani', 'similar', 'could', 'conclud', 'fall', 'genr', 'movi', 'base', 'intuit', 'fun', 'data', 'scienc', 'context', 'notebook', 'quantifi', 'similar', 'movi', 'base', 'plot', 'summari', 'avail', 'imdb', 'wikipedia', 'separ', 'group', 'also', 'known', 'cluster', 'creat', 'dendrogram', 'repres', 'close', 'movi', 'relat', 'let', 'start', 'import', 'dataset', 'observ', 'data', 'provid', '2', 'combin', 'wikipedia', 'imdb', 'plot', 'summari', 'dataset', 'import', 'current', 'contain', 'two', 'column', 'titl', 'wiki_plot', 'imdb_plot', 'plot', 'found', 'movi', 'wikipedia', 'imdb', 'respect', 'text', 'two', 'column', 'similar', 'howev', 'often', 'written', 'differ', 'tone', 'thu', 'provid', 'context', 'movi', 'differ', 'manner', 'linguist', 'express', 'sometim', 'text', 'one', 'column', 'may', 'mention', 'featur', 'plot', 'present', 'column', 'exampl', 'consid', 'follow', 'plot', 'extract', 'godfath', 'wikipedia', 'day', 'daughter', 'wed', 'vito', 'corleon', 'imdb', 'late', 'summer', '1945', 'guest', 'gather', 'wed', 'recept', 'vito', 'corleon', 'daughter', 'conni', 'wikipedia', 'plot', 'mention', 'day', 'daughter', 'wed', 'imdb', 'plot', 'also', 'mention', 'year', 'scene', 'name', 'daughter', 'let', 'combin', 'column', 'avoid', 'overhead', 'comput', 'associ', 'extra', 'column', 'process', '3', 'token', 'token', 'process', 'break', 'articl', 'individu', 'sentenc', 'word', 'need', 'besid', 'token', 'method', 'provid', 'nltk', 'might', 'perform', 'addit', 'filtrat', 'remov', 'token', 'entir', 'numer', 'valu', 'punctuat', 'program', 'may', 'fail', 'build', 'context', 'wait', 'bu', 'stop', '1981', 'forrest', 'gump', 'string', 'would', 'match', 'dictionari', 'possibl', 'build', 'context', 'word', 'wait', 'bu', 'present', 'english', 'dictionari', 'let', 'us', 'perform', 'token', 'small', 'extract', 'godfath', '4', 'stem', 'stem', 'process', 'bring', 'word', 'differ', 'form', 'root', 'word', 'help', 'us', 'establish', 'mean', 'differ', 'form', 'word', 'without', 'deal', 'form', 'separ', 'exampl', 'word', 'fish', 'fish', 'fisher', 'get', 'stem', 'word', 'fish', 'consid', 'follow', 'sentenc', 'young', 'william', 'wallac', 'wit', 'treacheri', 'longshank', 'gladiat', 'escap', 'citi', 'wall', 'wit', 'cicero', 'death', 'braveheart', 'instead', 'build', 'separ', 'dictionari', 'entri', 'wit', 'wit', 'mean', 'thing', 'outsid', 'quantiti', 'stem', 'reduc', 'wit', 'differ', 'algorithm', 'avail', 'stem', 'porter', 'stemmer', 'snowbal', 'stemmer', 'etc', 'shall', 'use', 'snowbal', 'stemmer', '5', 'club', 'togeth', 'token', 'stem', 'abl', 'token', 'stem', 'sentenc', 'may', 'use', 'two', 'function', 'repeatedli', 'one', 'handl', 'larg', 'amount', 'data', 'henc', 'think', 'wrap', 'function', 'pass', 'text', 'token', 'stem', 'function', 'argument', 'pass', 'new', 'wrap', 'function', 'shall', 'perform', 'token', 'stem', 'instead', 'token', 'token', 'argument', 'creat', 'tf', 'idf', 'vector', 'text', 'differ', 'make', 'though', 'consid', 'sentenc', 'plot', 'godfath', 'today', 'may', '19', '2016', 'daughter', 'wed', 'token', 'sentenc', 'follow', 'result', 'today', 'may', 'daughter', 'wed', 'token', 'stem', 'oper', 'get', 'today', 'may', 'onli', 'daughter', 'wed', 'word', 'root', 'form', 'lead', 'better', 'establish', 'mean', 'non', 'root', 'form', 'may', 'present', 'nltk', 'train', 'corpu', '6', 'creat', 'tfidfvector', 'comput', 'understand', 'text', 'machin', 'capabl', 'understand', 'number', 'perform', 'numer', 'comput', 'henc', 'must', 'convert', 'textual', 'plot', 'summari', 'number', 'comput', 'abl', 'extract', 'mean', 'one', 'simpl', 'method', 'would', 'count', 'occurr', 'word', 'entir', 'vocabulari', 'return', 'count', 'vector', 'enter', 'countvector', 'consid', 'word', 'appear', 'quit', 'frequent', 'almost', 'movi', 'plot', 'high', 'count', 'case', 'obvious', 'theme', 'movi', 'term', 'frequenc', 'invers', 'document', 'frequenc', 'tf', 'idf', 'one', 'method', 'overcom', 'shortcom', 'countvector', 'term', 'frequenc', 'word', 'measur', 'often', 'appear', 'document', 'invers', 'document', 'frequenc', 'paramet', 'reduc', 'import', 'word', 'frequent', 'appear', 'sever', 'document', 'exampl', 'appli', 'tf', 'idf', 'first', '3', 'sentenc', 'plot', 'wizard', 'oz', 'told', 'import', 'word', 'toto', 'pet', 'dog', 'lead', 'charact', 'movi', 'begin', 'toto', 'bite', 'someon', 'due', 'journey', 'oz', 'begin', 'simplest', 'term', 'tf', 'idf', 'recogn', 'word', 'uniqu', 'import', 'given', 'document', 'let', 'creat', 'one', 'purpos', '7', 'fit', 'transform', 'tfidfvector', 'creat', 'tf', 'idf', 'vector', 'must', 'fit', 'text', 'transform', 'text', 'produc', 'correspond', 'numer', 'form', 'data', 'comput', 'abl', 'understand', 'deriv', 'mean', 'use', 'fit_transform', 'method', 'tfidfvector', 'object', 'observ', 'tfidfvector', 'object', 'creat', 'come', 'across', 'paramet', 'stopword', 'stopword', 'word', 'given', 'text', 'contribut', 'consider', 'toward', 'mean', 'sentenc', 'gener', 'grammat', 'filler', 'word', 'exampl', 'sentenc', 'dorothi', 'gale', 'live', 'dog', 'toto', 'farm', 'aunt', 'em', 'uncl', 'henri', 'could', 'drop', 'word', 'still', 'similar', 'overal', 'mean', 'sentenc', 'thu', 'stopword', 'conveni', 'drop', 'sentenc', 'set', 'stopword', 'english', 'direct', 'vector', 'drop', 'stopword', 'pre', 'defin', 'list', 'english', 'languag', 'stopword', 'present', 'nltk', 'modul', 'anoth', 'paramet', 'ngram_rang', 'defin', 'length', 'ngram', 'form', 'vector', 'text', '8', 'import', 'kmean', 'creat', 'cluster', 'determin', 'close', 'one', 'movi', 'relat', 'help', 'unsupervis', 'learn', 'use', 'cluster', 'techniqu', 'cluster', 'method', 'group', 'togeth', 'number', 'item', 'exhibit', 'similar', 'properti', 'accord', 'measur', 'similar', 'desir', 'given', 'sampl', 'item', 'one', 'cluster', 'good', 'basi', 'cluster', 'dataset', 'could', 'genr', 'movi', 'say', 'could', 'cluster', '0', 'hold', 'movi', 'drama', 'genr', 'would', 'expect', 'movi', 'like', 'chinatown', 'psycho', 'belong', 'cluster', 'similarli', 'cluster', '1', 'project', 'hold', 'movi', 'belong', 'adventur', 'genr', 'lawrenc', 'arabia', 'raider', 'lost', 'ark', 'exampl', 'k', 'mean', 'algorithm', 'help', 'us', 'implement', 'cluster', 'python', 'name', 'deriv', 'method', 'implement', 'given', 'sampl', 'divid', 'k', 'cluster', 'cluster', 'denot', 'mean', 'item', 'lie', 'cluster', 'get', 'follow', 'distribut', 'cluster', '9', 'calcul', 'similar', 'distanc', 'consid', 'follow', 'two', 'sentenc', 'movi', 'wizard', 'oz', 'find', 'emerald', 'citi', 'final', 'reach', 'emerald', 'citi', 'put', 'sentenc', 'countvector', 'vocabulari', 'produc', 'would', 'find', 'emerald', 'citi', 'final', 'reach', 'vector', 'sentenc', 'would', 'follow', '1', '1', '1', '1', '1', '1', '0', '0', '1', '0', '0', '1', '1', '1', '1', '1', 'calcul', 'cosin', 'angl', 'form', 'vector', 'repres', 'get', 'score', '0', '667', 'mean', 'sentenc', 'close', 'relat', 'similar', 'distanc', '1', 'cosin', 'similar', 'angl', 'follow', 'vector', 'similar', 'cosin', 'angl', 'would', '1', 'henc', 'distanc', 'would', '1', '1', '0', 'let', 'calcul', 'similar', 'distanc', 'movi', '10', 'import', 'matplotlib', 'linkag', 'dendrogram', 'shall', 'creat', 'tree', 'like', 'diagram', 'call', 'dendrogram', 'movi', 'titl', 'help', 'us', 'understand', 'level', 'similar', 'visual', 'dendrogram', 'help', 'visual', 'result', 'hierarch', 'cluster', 'altern', 'k', 'mean', 'cluster', 'two', 'pair', 'movi', 'level', 'hierarch', 'cluster', 'expect', 'similar', 'strength', 'similar', 'correspond', 'pair', 'movi', 'exampl', 'movi', 'fargo', 'would', 'similar', 'north', 'northwest', 'movi', 'platoon', 'save', 'privat', 'ryan', 'given', 'pair', 'exhibit', 'level', 'hierarchi', 'let', 'import', 'modul', 'need', 'creat', 'dendrogram', '11', 'creat', 'merg', 'plot', 'dendrogram', 'shall', 'plot', 'dendrogram', 'movi', 'whose', 'similar', 'measur', 'given', 'similar', 'distanc', 'previous', 'calcul', 'lower', 'similar', 'distanc', 'two', 'movi', 'lower', 'linkag', 'make', 'intercept', 'axi', 'instanc', 'lowest', 'dendrogram', 'linkag', 'shall', 'discov', 'movi', 'wonder', 'life', 'place', 'sun', 'indic', 'movi', 'similar', 'plot', '12', 'movi', 'similar', 'determin', 'similar', 'movi', 'base', 'plot', 'wrap', 'let', 'answer', 'one', 'final', 'question', 'movi', 'similar', 'movi', 'braveheart']","['movi', 'sentenc', 'cluster', 'stem', 'token', 'similar', 'dendrogram', 'stopword', 'wed', 'daughter', 'imdb', 'genr', 'shall', 'watch', 'wit', 'vector', 'word', 'idf', 'tf', 'form']","<div>
 <p>
  Natural Language Processing (NLP) is an exciting field of study for data scientists where they develop algorithms that can make sense out of conversational language used by humans. In this Project, you will use NLP to find the degree of similarity between movies based on their plots available on IMDb and Wikipedia.
 </p>
 <p>
  The dataset contains the titles of the top 100 movies on
  <a href=""https://www.imdb.com/"">
   IMDb
  </a>
  as well as each movie's plot summary from both IMDb and Wikipedia.
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Generating%20Keywords%20for%20Google%20Ads,Generating Keywords for Google Ads,python,Elias Dabbas,Owner at The Media Supermarket,https://www.datacamp.com/projects/400,"Automatically generate keywords for a search engine marketing campaign using Python. 
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Generating%20Keywords%20for%20Google%20Ads/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Generating%20Keywords%20for%20Google%20Ads/notebook.ipynb,"['pprint', 'pandas']",['.csv'],"['.append()', '.to_csv()', '.from_records()', '.rename()', '.copy()', '.DataFrame()', '.count()', '.groupby()', '.head()']","['pprint()', 'print()']","['1', 'brief', 'imagin', 'work', 'digit', 'market', 'agenc', 'agenc', 'approach', 'massiv', 'onlin', 'retail', 'furnitur', 'want', 'test', 'skill', 'creat', 'larg', 'campaign', 'websit', 'task', 'creat', 'prototyp', 'set', 'keyword', 'search', 'campaign', 'sofa', 'section', 'client', 'say', 'want', 'us', 'gener', 'keyword', 'follow', 'product', 'sofa', 'convert', 'sofa', 'love', 'seat', 'reclin', 'sofa', 'bed', 'brief', 'client', 'gener', 'low', 'cost', 'retail', 'offer', 'mani', 'promot', 'discount', 'need', 'focu', 'keyword', 'also', 'need', 'move', 'away', 'luxuri', 'keyword', 'topic', 'target', 'price', 'sensit', 'custom', 'go', 'tight', 'budget', 'would', 'good', 'focu', 'tightli', 'target', 'set', 'keyword', 'make', 'sure', 'set', 'exact', 'phrase', 'match', 'base', 'brief', 'first', 'need', 'gener', 'list', 'word', 'togeth', 'product', 'given', 'would', 'make', 'good', 'keyword', 'exampl', 'product', 'sofa', 'reclin', 'word', 'buy', 'price', 'result', 'keyword', 'buy', 'sofa', 'sofa', 'buy', 'buy', 'reclin', 'reclin', 'buy', 'price', 'sofa', 'sofa', 'price', 'price', 'reclin', 'reclin', 'price', 'final', 'result', 'want', 'datafram', 'look', 'like', 'campaign', 'ad', 'group', 'keyword', 'criterion', 'type', 'campaign1', 'adgroup_1', 'keyword', '1a', 'exact', 'campaign1', 'adgroup_1', 'keyword', '1a', 'phrase', 'campaign1', 'adgroup_1', 'keyword', '1b', 'exact', 'campaign1', 'adgroup_1', 'keyword', '1b', 'phrase', 'campaign1', 'adgroup_2', 'keyword', '2a', 'exact', 'campaign1', 'adgroup_2', 'keyword', '2a', 'phrase', 'first', 'step', 'come', 'list', 'word', 'user', 'might', 'use', 'express', 'desir', 'buy', 'low', 'cost', 'sofa', '2', 'combin', 'word', 'product', 'name', 'imagin', 'possibl', 'combin', 'keyword', 'stress', 'us', 'keyword', 'ninja', 'know', 'translat', 'campaign', 'brief', 'python', 'data', 'structur', 'imagin', 'result', 'datafram', 'need', 'creat', 'brainstorm', 'word', 'work', 'well', 'brief', 'receiv', 'time', 'combin', 'product', 'name', 'gener', 'meaning', 'search', 'keyword', 'want', 'combin', 'everi', 'word', 'everi', 'product', 'seen', 'exampl', 'quick', 'remind', 'product', 'reclin', 'word', 'buy', 'price', 'exampl', 'would', 'want', 'gener', 'follow', 'combin', 'buy', 'reclin', 'reclin', 'buy', 'price', 'reclin', 'reclin', 'price', 'word', 'product', '3', 'convert', 'list', 'list', 'datafram', 'want', 'convert', 'list', 'list', 'datafram', 'easili', 'manipul', 'manag', 'final', 'output', '4', 'renam', 'column', 'datafram', 'upload', 'tabl', 'keyword', 'need', 'give', 'column', 'meaning', 'name', 'inspect', 'datafram', 'creat', 'see', 'column', 'current', 'name', '0', '1', 'ad', 'group', 'exampl', 'sofa', 'keyword', 'exampl', 'sofa', 'buy', 'much', 'appropri', 'name', '5', 'add', 'campaign', 'column', 'need', 'add', 'addit', 'inform', 'datafram', 'need', 'new', 'column', 'call', 'campaign', 'campaign', 'name', 'want', 'campaign', 'name', 'descript', 'group', 'keyword', 'product', 'let', 'call', 'campaign', 'sem_sofa', '6', 'creat', 'match', 'type', 'column', 'differ', 'keyword', 'match', 'type', 'one', 'exact', 'match', 'match', 'exact', 'term', 'close', 'variat', 'exact', 'term', 'anoth', 'match', 'type', 'broad', 'match', 'mean', 'ad', 'may', 'show', 'search', 'includ', 'misspel', 'synonym', 'relat', 'search', 'relev', 'variat', 'straight', 'googl', 'adword', 'document', 'gener', 'broader', 'match', 'type', 'traffic', 'potenti', 'keyword', 'sinc', 'ad', 'may', 'trigger', 'often', 'convers', 'narrow', 'match', 'type', 'mean', 'ad', 'may', 'show', 'less', 'often', 'like', 'relat', 'someon', 'search', 'sinc', 'client', 'tight', 'budget', 'want', 'make', 'sure', 'keyword', 'exact', 'match', 'begin', '7', 'duplic', 'keyword', 'phrase', 'match', 'great', 'thing', 'exact', 'match', 'specif', 'control', 'process', 'well', 'tradeoff', 'howev', 'search', 'volum', 'exact', 'match', 'lower', 'match', 'type', 'possibl', 'think', 'way', 'peopl', 'search', 'probabl', 'miss', 'high', 'qualiti', 'keyword', 'good', 'use', 'anoth', 'match', 'call', 'phrase', 'match', 'discoveri', 'mechan', 'allow', 'ad', 'trigger', 'keyword', 'includ', 'exact', 'match', 'keyword', 'togeth', 'anyth', 'later', 'launch', 'campaign', 'explor', 'modifi', 'broad', 'match', 'broad', 'match', 'neg', 'match', 'type', 'better', 'visibl', 'control', 'campaign', '8', 'save', 'summar', 'upload', 'campaign', 'need', 'save', 'csv', 'file', 'abl', 'import', 'adword', 'editor', 'bingad', 'editor', 'also', 'option', 'past', 'data', 'editor', 'want', 'easi', 'access', 'save', 'data', 'great', 'let', 'save', 'csv', 'file', 'look', 'summari', 'campaign', 'structur', 'good', 'wrap', 'keyword', 'work', 'group', 'ad', 'group', 'criterion', 'type', 'count', 'keyword', 'summari', 'show', 'us', 'assign', 'specif', 'keyword', 'specif', 'ad', 'group', 'part', 'campaign', 'essenc', 'tell', 'googl', 'bing', 'etc', 'want', 'word', 'ad', 'group', 'trigger', 'one', 'ad', 'ad', 'group', 'separ', 'creat', 'anoth', 'tabl', 'ad', 'task', 'anoth', 'day', 'would', 'look', 'someth', 'like', 'campaign', 'ad', 'group', 'headlin', '1', 'headlin', '2', 'descript', 'final', 'url', 'sem_sofa', 'sofa', 'look', 'qualiti', 'sofa', 'explor', 'massiv', 'collect', '30', 'day', 'return', 'free', 'deliveri', 'within', 'us', 'start', 'shop', 'datacampsofa', 'com', 'sofa', 'sem_sofa', 'sofa', 'look', 'afford', 'sofa', 'check', 'weekli', 'offer', '30', 'day', 'return', 'free', 'deliveri', 'within', 'us', 'start', 'shop', 'datacampsofa', 'com', 'sofa', 'sem_sofa', 'reclin', 'look', 'qualiti', 'reclin', 'explor', 'massiv', 'collect', '30', 'day', 'return', 'free', 'deliveri', 'within', 'us', 'start', 'shop', 'datacampsofa', 'com', 'reclin', 'sem_sofa', 'reclin', 'need', 'afford', 'reclin', 'check', 'weekli', 'offer', '30', 'day', 'return', 'free', 'deliveri', 'within', 'us', 'start', 'shop', 'datacampsofa', 'com', 'reclin', 'togeth', 'tabl', 'get', 'us', 'sampl', 'keyword', 'ad', 'land', 'page', 'map', 'shown', 'diagram']","['keyword', 'sofa', 'reclin', 'campaign', 'match', 'exact', 'ad', 'buy', 'campaign1', 'brief', 'sem_sofa', 'price', 'phrase', 'adgroup_1', 'datacampsofa', 'deliveri', 'shop', 'product', 'search', 'client']","<div>
 <p>
  You work for a digital marketing agency, which is approached by a massive online retailer of furniture. 
You are tasked with creating a prototype set of keywords for search campaigns for their sofas section. With your 
Python skills, you will efficiently create these keywords!
 </p>
 <p>
  The most important task in structuring a search engine marketing account is mapping the right keywords to the right ads and making sure they send users to the right landing pages. Having figured that out is a big part of the account setup and makes the life of the account manager much easier.
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Introduction%20to%20DataCamp%20Projects,Introduction to DataCamp Projects,python,Rasmus Bååth,Senior Data Scientist at King (Activision Blizzard),https://www.datacamp.com/projects/33,"If you've never done a DataCamp project, this is the place to start! 
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Introduction%20to%20DataCamp%20Projects/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Introduction%20to%20DataCamp%20Projects/notebook.ipynb,"['folium', 'matplotlib.pyplot', 'pandas']","['.0266', '.0311', '.0579', '.3318', '.4970', '.5431', '.9', '.4', '.5', '.pyplot', '.csv']","['.Map()', '.Marker()', '.add_to()', '.xlabel()', '.ylabel()', '.title()', '.show()', '.plot()', '.read_csv()']","['greet()', 'print()']","['1', 'jupyt', 'notebook', 'jupyt', 'notebook', 'document', 'contain', 'text', 'cell', 'read', 'right', 'code', 'cell', 'special', 'notebook', 'interact', 'chang', 'add', 'code', 'cell', 'run', 'cell', 'first', 'select', 'click', 'run', 'cell', 'button', 'run', 'hit', 'ctrl', 'enter', 'result', 'display', 'directli', 'notebook', 'could', 'use', 'notebook', 'simpl', 'calcul', 'exampl', 'estim', 'averag', '256', 'children', 'born', 'everi', 'minut', '2016', 'code', 'cell', 'calcul', 'mani', 'children', 'born', 'averag', 'day', '2', 'put', 'code', 'code', 'cell', 'code', 'cell', 'contain', 'much', 'simpl', 'one', 'liner', 'notebook', 'run', 'python', 'put', 'python', 'code', 'code', 'cell', 'notebook', 'run', 'languag', 'like', 'r', 'code', 'cell', 'defin', 'whole', 'new', 'function', 'greet', 'show', 'output', 'greet', 'run', 'last', 'code', 'cell', 'last', 'valu', 'alway', 'print', '3', 'jupyt', 'notebook', 'data', 'seen', 'notebook', 'display', 'basic', 'object', 'number', 'string', 'notebook', 'also', 'support', 'object', 'use', 'data', 'scienc', 'make', 'great', 'interact', 'data', 'analysi', 'exampl', 'creat', 'panda', 'datafram', 'read', 'csv', 'file', 'averag', 'global', 'temperatur', 'year', '1850', '2016', 'look', 'head', 'datafram', 'notebook', 'render', 'nice', 'look', 'tabl', '4', 'jupyt', 'notebook', 'plot', 'tabl', 'nice', 'say', 'goe', 'plot', 'show', 'thousand', 'data', 'point', 'notebook', 'handl', 'plot', 'well', 'requir', 'bit', 'magic', 'magic', 'refer', 'arcan', 'ritual', 'call', 'magic', 'command', 'affect', 'jupyt', 'notebook', 'work', 'magic', 'command', 'start', 'either', 'command', 'need', 'nice', 'display', 'plot', 'inlin', 'matplotlib', 'inlin', 'magic', 'place', 'plot', 'creat', 'code', 'cell', 'automat', 'display', 'inlin', 'let', 'take', 'look', 'global', 'temperatur', 'last', '150', 'year', '5', 'jupyt', 'notebook', 'lot', 'tabl', 'plot', 'common', 'output', 'data', 'analysi', 'jupyt', 'notebook', 'render', 'mani', 'type', 'output', 'sound', 'anim', 'video', 'etc', 'ye', 'almost', 'anyth', 'shown', 'modern', 'web', 'browser', 'also', 'make', 'possibl', 'includ', 'interact', 'widget', 'directli', 'notebook', 'exampl', 'slightli', 'complic', 'code', 'creat', 'interact', 'map', 'show', 'locat', 'three', 'largest', 'smartphon', 'compani', '2016', 'move', 'zoom', 'map', 'click', 'marker', 'info', '6', 'goodby', 'short', 'introduct', 'jupyt', 'notebook', 'open', 'sourc', 'technolog', 'increasingli', 'use', 'data', 'scienc', 'analysi', 'hope', 'enjoy']","['cell', 'jupyt', 'code', 'magic', 'run', 'inlin', 'command', 'interact', 'nice', 'greet', 'render', 'temperatur', 'display', '2016', 'notebook', 'click', 'children', 'global', 'tabl', 'output']","<div>
 <p>
  This is an introduction to DataCamp projects. DataCamp projects allow you to apply 
the skills you have learned in DataCamp courses. In each project, you will carry out 
an end-to-end analysis on real-world tasks using real-world tools and workflows.
 </p>
 <p>
  In doing so, you will learn how to work with Jupyter notebooks: an open-source web 
application that is great for interactive data analysis.
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Introduction%20to%20DataCamp%20Projects,Introduction to DataCamp Projects,python,David Venturi,Curriculum Manager at DataCamp,https://www.datacamp.com/projects/571,"If you've never done a DataCamp project, this is the place to start!
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Introduction%20to%20DataCamp%20Projects/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Introduction%20to%20DataCamp%20Projects/notebook.ipynb,"['folium', 'matplotlib.pyplot', 'pandas']","['.0266', '.0311', '.0579', '.3318', '.4970', '.5431', '.9', '.4', '.5', '.pyplot', '.csv']","['.Map()', '.Marker()', '.add_to()', '.xlabel()', '.ylabel()', '.title()', '.show()', '.plot()', '.read_csv()']","['greet()', 'print()']","['1', 'jupyt', 'notebook', 'jupyt', 'notebook', 'document', 'contain', 'text', 'cell', 'read', 'right', 'code', 'cell', 'special', 'notebook', 'interact', 'chang', 'add', 'code', 'cell', 'run', 'cell', 'first', 'select', 'click', 'run', 'cell', 'button', 'run', 'hit', 'ctrl', 'enter', 'result', 'display', 'directli', 'notebook', 'could', 'use', 'notebook', 'simpl', 'calcul', 'exampl', 'estim', 'averag', '256', 'children', 'born', 'everi', 'minut', '2016', 'code', 'cell', 'calcul', 'mani', 'children', 'born', 'averag', 'day', '2', 'put', 'code', 'code', 'cell', 'code', 'cell', 'contain', 'much', 'simpl', 'one', 'liner', 'notebook', 'run', 'python', 'put', 'python', 'code', 'code', 'cell', 'notebook', 'run', 'languag', 'like', 'r', 'code', 'cell', 'defin', 'whole', 'new', 'function', 'greet', 'show', 'output', 'greet', 'run', 'last', 'code', 'cell', 'last', 'valu', 'alway', 'print', '3', 'jupyt', 'notebook', 'data', 'seen', 'notebook', 'display', 'basic', 'object', 'number', 'string', 'notebook', 'also', 'support', 'object', 'use', 'data', 'scienc', 'make', 'great', 'interact', 'data', 'analysi', 'exampl', 'creat', 'panda', 'datafram', 'read', 'csv', 'file', 'averag', 'global', 'temperatur', 'year', '1850', '2016', 'look', 'head', 'datafram', 'notebook', 'render', 'nice', 'look', 'tabl', '4', 'jupyt', 'notebook', 'plot', 'tabl', 'nice', 'say', 'goe', 'plot', 'show', 'thousand', 'data', 'point', 'notebook', 'handl', 'plot', 'well', 'requir', 'bit', 'magic', 'magic', 'refer', 'arcan', 'ritual', 'call', 'magic', 'command', 'affect', 'jupyt', 'notebook', 'work', 'magic', 'command', 'start', 'either', 'command', 'need', 'nice', 'display', 'plot', 'inlin', 'matplotlib', 'inlin', 'magic', 'place', 'plot', 'creat', 'code', 'cell', 'automat', 'display', 'inlin', 'let', 'take', 'look', 'global', 'temperatur', 'last', '150', 'year', '5', 'jupyt', 'notebook', 'lot', 'tabl', 'plot', 'common', 'output', 'data', 'analysi', 'jupyt', 'notebook', 'render', 'mani', 'type', 'output', 'sound', 'anim', 'video', 'etc', 'ye', 'almost', 'anyth', 'shown', 'modern', 'web', 'browser', 'also', 'make', 'possibl', 'includ', 'interact', 'widget', 'directli', 'notebook', 'exampl', 'slightli', 'complic', 'code', 'creat', 'interact', 'map', 'show', 'locat', 'three', 'largest', 'smartphon', 'compani', '2016', 'move', 'zoom', 'map', 'click', 'marker', 'info', '6', 'goodby', 'short', 'introduct', 'jupyt', 'notebook', 'open', 'sourc', 'technolog', 'increasingli', 'use', 'data', 'scienc', 'analysi', 'hope', 'enjoy']","['cell', 'jupyt', 'code', 'magic', 'run', 'inlin', 'command', 'interact', 'nice', 'greet', 'render', 'temperatur', 'display', '2016', 'notebook', 'click', 'children', 'global', 'tabl', 'output']","<div>
 <p>
  This is an introduction to DataCamp projects. DataCamp projects allow you to apply 
the skills you have learned in DataCamp courses. In each project, you will carry out 
an end-to-end analysis on real-world tasks using real-world tools and workflows.
 </p>
 <p>
  In doing so, you will learn how to work with Jupyter notebooks: an open-source web 
application that is great for interactive data analysis.
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Na%C3%AFve%20Bees:%20Image%20Loading%20and%20Processing,Naïve Bees: Image Loading and Processing,python,Peter Bull,Co-founder of DrivenData,https://www.datacamp.com/projects/374,"Load, transform, and understand images of honey bees and bumble bees in Python.
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Na%C3%AFve%20Bees:%20Image%20Loading%20and%20Processing/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Na%C3%AFve%20Bees:%20Image%20Loading%20and%20Processing/notebook.ipynb,"['Path', 'pathlib', 'IPython.display', 'Image', 'PIL', 'display', 'numpy', 'matplotlib.pyplot', 'pandas']","['.jpg', '.cm', '.FLIP_LEFT_RIGHT', '.gray', '.stem', '.Blues_r', '.Greens_r', '.Reds_r', '.g', '.size', '.shape', '.display', '.random', '.plot', '.pyplot']","['.imshow()', '.format()', '.save()', '.open()', '.array()', '.show()', '.convert()', '.crop()', '.rotate()', '.transpose()', '.beta()', '.density()', '.fromarray()', '.maximum()', '.resize()', '.flatten()', '.Series()']","['plot_rgb()', 'display()', 'plot_kde()', 'process_image()', 'Path()', 'enumerate()', 'print()']","['1', 'import', 'python', 'librari', 'honey', 'bee', 'question', 'hand', 'machin', 'identifi', 'bee', 'honey', 'bee', 'bumbl', 'bee', 'bee', 'differ', 'behavior', 'appear', 'given', 'varieti', 'background', 'posit', 'imag', 'resolut', 'challeng', 'machin', 'tell', 'apart', 'abl', 'identifi', 'bee', 'speci', 'imag', 'task', 'ultim', 'would', 'allow', 'research', 'quickli', 'effect', 'collect', 'field', 'data', 'pollin', 'bee', 'critic', 'role', 'ecolog', 'agricultur', 'diseas', 'like', 'coloni', 'collaps', 'disord', 'threaten', 'speci', 'identifi', 'differ', 'speci', 'bee', 'wild', 'mean', 'better', 'understand', 'preval', 'growth', 'import', 'insect', 'bumbl', 'bee', 'notebook', 'walk', 'load', 'process', 'imag', 'load', 'process', 'imag', 'readi', 'build', 'model', 'automat', 'detect', 'honeybe', 'bumblebe', '2', 'open', 'imag', 'pil', 'import', 'readi', 'time', 'work', 'real', 'imag', 'pillow', 'flexibl', 'imag', 'load', 'manipul', 'librari', 'work', 'mani', 'differ', 'imag', 'format', 'exampl', 'png', 'jpg', 'gif', 'imag', 'data', 'one', 'work', 'imag', 'use', 'pillow', 'librari', 'import', 'pil', 'want', 'load', 'imag', 'display', 'notebook', 'print', 'dimens', 'imag', 'dimens', 'mean', 'width', 'imag', 'height', 'imag', 'measur', 'pixel', 'document', 'imag', 'pillow', 'give', 'comprehens', 'view', 'object', '3', 'imag', 'manipul', 'pil', 'pillow', 'number', 'common', 'imag', 'manipul', 'task', 'built', 'librari', 'exampl', 'one', 'may', 'want', 'resiz', 'imag', 'file', 'size', 'smaller', 'perhap', 'convert', 'imag', 'black', 'white', 'instead', 'color', 'oper', 'pillow', 'provid', 'includ', 'resiz', 'crop', 'rotat', 'flip', 'convert', 'greyscal', 'color', 'mode', 'often', 'kind', 'manipul', 'part', 'pipelin', 'turn', 'small', 'number', 'imag', 'imag', 'creat', 'train', 'data', 'machin', 'learn', 'algorithm', 'techniqu', 'call', 'data', 'augment', 'common', 'techniqu', 'imag', 'classif', 'tri', 'coupl', 'oper', 'look', 'result', '4', 'imag', 'array', 'data', 'imag', 'far', 'pil', 'handl', 'load', 'imag', 'display', 'howev', 'go', 'use', 'imag', 'data', 'need', 'understand', 'data', 'look', 'like', 'imag', 'format', 'three', 'color', 'channel', 'red', 'green', 'blue', 'imag', 'also', 'fourth', 'channel', 'call', 'alpha', 'control', 'transpar', 'pixel', 'imag', 'valu', 'everi', 'channel', 'way', 'repres', 'data', 'three', 'dimension', 'matrix', 'width', 'matrix', 'width', 'imag', 'height', 'matrix', 'height', 'imag', 'depth', 'matrix', 'number', 'channel', 'saw', 'height', 'width', 'imag', '100', 'pixel', 'mean', 'underli', 'data', 'matrix', 'dimens', '100x100x3', '5', 'explor', 'color', 'channel', 'color', 'channel', 'help', 'provid', 'inform', 'imag', 'pictur', 'ocean', 'blue', 'wherea', 'pictur', 'field', 'green', 'kind', 'inform', 'use', 'build', 'model', 'examin', 'differ', 'imag', 'look', 'kernel', 'densiti', 'estim', 'color', 'channel', 'plot', 'understand', 'differ', 'make', 'plot', 'see', 'shape', 'appear', 'right', 'mean', 'color', 'wherea', 'left', 'mean', 'less', 'color', '6', 'honey', 'bee', 'bumbl', 'bee', 'look', 'two', 'differ', 'imag', 'differ', 'first', 'imag', 'honey', 'bee', 'second', 'imag', 'bumbl', 'bee', 'first', 'let', 'look', 'honey', 'bee', '7', 'honey', 'bee', 'bumbl', 'bee', 'ii', 'let', 'look', 'bumbl', 'bee', 'one', 'compar', 'imag', 'clear', 'differ', 'color', 'honey', 'bee', 'imag', 'blue', 'flower', 'strong', 'peak', 'right', 'hand', 'side', 'blue', 'channel', 'bumbl', 'bee', 'imag', 'lot', 'yellow', 'bee', 'background', 'almost', 'perfect', 'overlap', 'red', 'green', 'channel', 'togeth', 'make', 'yellow', '8', 'simplifi', 'simplifi', 'simplifi', 'sometim', 'color', 'inform', 'use', 'time', 'distract', 'exampl', 'look', 'bee', 'bee', 'similar', 'color', 'hand', 'bee', 'often', 'top', 'differ', 'color', 'flower', 'know', 'color', 'flower', 'may', 'distract', 'separ', 'honey', 'bee', 'bumbl', 'bee', 'let', 'convert', 'imag', 'black', 'white', 'grayscal', 'grayscal', 'one', 'mode', 'pillow', 'support', 'switch', 'mode', 'done', 'convert', 'method', 'pass', 'string', 'new', 'mode', 'chang', 'number', 'color', 'channel', 'shape', 'array', 'chang', 'chang', 'also', 'interest', 'look', 'kde', 'grayscal', 'version', 'compar', 'rgb', 'version', '9', 'save', 'work', 'talk', 'whole', 'time', 'make', 'chang', 'imag', 'manipul', 'might', 'use', 'part', 'machin', 'learn', 'pipelin', 'use', 'imag', 'futur', 'save', 'work', 'made', 'chang', 'make', 'coupl', 'chang', 'imag', 'object', 'pillow', 'save', 'flip', 'imag', 'left', 'right', 'color', 'version', 'chang', 'numpi', 'version', 'data', 'clip', 'use', 'np', 'maximum', 'function', 'take', 'number', 'array', 'smaller', '100', 'replac', '100', 'reduc', 'rang', 'valu', 'increas', 'contrast', 'imag', 'convert', 'back', 'imag', 'save', 'result', '10', 'make', 'pipelin', 'time', 'creat', 'imag', 'process', 'pipelin', 'tool', 'toolbox', 'load', 'imag', 'transform', 'save', 'result', 'pipelin', 'follow', 'load', 'imag', 'imag', 'open', 'creat', 'path', 'save', 'imag', 'convert', 'imag', 'grayscal', 'save', 'grayscal', 'imag', 'rotat', 'crop', 'zoom', 'imag', 'save', 'new', 'imag']","['imag', 'bee', 'color', 'channel', 'bumbl', 'honey', 'pillow', 'grayscal', 'height', 'pil', 'pipelin', 'save', 'width', 'blue', 'mode', 'manipul', 'flower', 'matrix', 'pixel', 'simplifi']","<div>
 <p>
  Can a machine distinguish between a honey bee and a bumble bee? Being able to identify bee species from images, while challenging, would allow researchers to more quickly and effectively collect field data. In this Project, you will use the Python image library Pillow to load and manipulate image data. You'll learn common transformations of images and how to build them into a pipeline.
 </p>
 <p>
  This project is the first part of a series of projects that walk through working with image data, building classifiers using traditional techniques, and leveraging the power of deep learning for computer vision. The second project in the series is
  <a href=""https://www.datacamp.com/projects/412"">
   Naïve Bees: Predict Species from Images
  </a>
  .
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Na%C3%AFve%20Bees:%20Predict%20Species%20from%20Images,Naïve Bees: Predict Species from Images,python,Peter Bull,Co-founder of DrivenData,https://www.datacamp.com/projects/412,"Build a model that can automatically detect honey bees and bumble bees in images.
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Na%C3%AFve%20Bees:%20Predict%20Species%20from%20Images/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Na%C3%AFve%20Bees:%20Predict%20Species%20from%20Images/notebook.ipynb,"['PCA', 'SVC', 'StandardScaler', 'accuracy_score', 'auc,', 'hog', 'mpl', 'rgb2gray', 'roc_curve,', 'skimage.color', 'skimage.feature', 'IPython.display', 'Image', 'PIL', 'display', 'matplotlib', 'sklearn.decomposition', 'sklearn.metrics', 'sklearn.preprocessing', 'sklearn.svm', 'os', 'sklearn.model_selection', 'train_test_split', 'numpy', 'matplotlib.pyplot', 'pandas']","['.0', '.genus', '.shape', '.cm', '.gray', '.index', '.2f', '.color', '.feature', '.3', '.path', '.display', '.jpg', '.decomposition', '.preprocessing', '.svm', '.metrics', '.model_selection', '.values', '.pyplot', '.csv']","['.imshow()', '.format()', '.array()', '.hstack()', '.predict_proba()', '.fit_transform()', '.flatten()', '.open()', '.show()', '.Series()', '.join()', '.predict()', '.legend()', '.xlabel()', '.fit()', '.ylabel()', '.title()', '.plot()', '.append()', '.value_counts()', '.head()', '.read_csv()']","['get_image()', 'create_features()', 'create_feature_matrix()', 'hog()', 'rgb2gray()', 'PCA()', 'SVC()', 'StandardScaler()', 'accuracy_score()', 'auc()', 'roc_curve()', 'train_test_split()', 'display()', 'print()']","['1', 'import', 'python', 'librari', 'honey', 'bee', 'api', 'machin', 'identifi', 'bee', 'honey', 'bee', 'bumbl', 'bee', 'bee', 'differ', 'behavior', 'appear', 'given', 'varieti', 'background', 'posit', 'imag', 'resolut', 'challeng', 'machin', 'tell', 'apart', 'abl', 'identifi', 'bee', 'speci', 'imag', 'task', 'ultim', 'would', 'allow', 'research', 'quickli', 'effect', 'collect', 'field', 'data', 'pollin', 'bee', 'critic', 'role', 'ecolog', 'agricultur', 'diseas', 'like', 'coloni', 'collaps', 'disord', 'threaten', 'speci', 'identifi', 'differ', 'speci', 'bee', 'wild', 'mean', 'better', 'understand', 'preval', 'growth', 'import', 'insect', 'bumbl', 'bee', 'bombu', 'load', 'pre', 'process', 'imag', 'notebook', 'walk', 'build', 'model', 'automat', 'detect', 'honey', 'bee', 'bumbl', 'bee', '2', 'display', 'imag', 'bee', 'type', 'import', 'readi', 'time', 'look', 'imag', 'load', 'label', 'csv', 'file', 'datafram', 'call', 'label', 'index', 'imag', 'name', 'e', 'g', 'index', '1036', 'refer', 'imag', 'name', '1036', 'jpg', 'genu', 'column', 'tell', 'us', 'bee', 'type', 'genu', 'take', 'valu', 'either', '0', '0', 'api', 'honey', 'bee', '1', '0', 'bombu', 'bumbl', 'bee', 'function', 'get_imag', 'convert', 'index', 'valu', 'datafram', 'file', 'path', 'imag', 'locat', 'open', 'imag', 'use', 'imag', 'object', 'pillow', 'return', 'imag', 'numpi', 'array', 'use', 'function', 'load', 'sixth', 'api', 'imag', 'sixth', 'bombu', 'imag', 'datafram', '3', 'imag', 'manipul', 'rgb2grey', 'scikit', 'imag', 'number', 'imag', 'process', 'function', 'built', 'librari', 'exampl', 'convert', 'imag', 'greyscal', 'rgb2grey', 'function', 'comput', 'lumin', 'rgb', 'imag', 'use', 'follow', 'formula', '0', '2125', 'r', '0', '7154', 'g', '0', '0721', 'b', 'imag', 'data', 'repres', 'matrix', 'depth', 'number', 'channel', 'rgb', 'imag', 'three', 'channel', 'red', 'green', 'blue', 'wherea', 'return', 'greyscal', 'imag', 'one', 'channel', 'accordingli', 'origin', 'color', 'imag', 'dimens', '100x100x3', 'call', 'rgb2grey', 'result', 'greyscal', 'imag', 'one', 'channel', 'make', 'dimens', '100x100x1', '4', 'histogram', 'orient', 'gradient', 'need', 'turn', 'imag', 'someth', 'machin', 'learn', 'algorithm', 'understand', 'tradit', 'comput', 'vision', 'techniqu', 'reli', 'mathemat', 'transform', 'turn', 'imag', 'use', 'featur', 'exampl', 'may', 'want', 'detect', 'edg', 'object', 'imag', 'increas', 'contrast', 'filter', 'particular', 'color', 'got', 'matrix', 'pixel', 'valu', 'contain', 'enough', 'interest', 'inform', 'algorithm', 'need', 'help', 'algorithm', 'along', 'pick', 'salient', 'featur', 'use', 'histogram', 'orient', 'gradient', 'hog', 'descriptor', 'idea', 'behind', 'hog', 'object', 'shape', 'within', 'imag', 'infer', 'edg', 'way', 'identifi', 'edg', 'look', 'direct', 'intens', 'gradient', 'e', 'chang', 'luminesc', 'imag', 'divid', 'grid', 'fashion', 'cell', 'pixel', 'within', 'cell', 'histogram', 'gradient', 'direct', 'compil', 'improv', 'invari', 'highlight', 'shadow', 'imag', 'cell', 'block', 'normal', 'mean', 'intens', 'valu', 'calcul', 'larger', 'region', 'imag', 'call', 'block', 'use', 'contrast', 'normal', 'cell', 'level', 'histogram', 'within', 'block', 'hog', 'featur', 'vector', 'imag', 'concaten', 'cell', 'level', 'histogram', '5', 'creat', 'imag', 'featur', 'flatten', 'singl', 'row', 'algorithm', 'requir', 'data', 'format', 'row', 'correspond', 'imag', 'column', 'correspond', 'featur', 'mean', 'inform', 'given', 'imag', 'need', 'contain', 'singl', 'row', 'want', 'provid', 'model', 'raw', 'pixel', 'valu', 'imag', 'well', 'hog', 'featur', 'calcul', 'write', 'function', 'call', 'create_featur', 'combin', 'two', 'set', 'featur', 'flatten', 'three', 'dimension', 'array', 'one', 'dimension', 'flat', 'array', '6', 'loop', 'imag', 'preprocess', 'gener', 'flatten', 'featur', 'array', 'bombu', 'imag', 'time', 'loop', 'imag', 'creat', 'featur', 'imag', 'stack', 'flatten', 'featur', 'array', 'big', 'matrix', 'pass', 'model', 'create_feature_matrix', 'function', 'follow', 'load', 'imag', 'gener', 'row', 'featur', 'use', 'create_featur', 'function', 'stack', 'row', 'featur', 'matrix', 'result', 'featur', 'matrix', 'row', 'correspond', 'imag', 'column', 'featur', '7', 'scale', 'featur', 'matrix', 'pca', 'featur', 'quit', 'done', 'yet', 'mani', 'machin', 'learn', 'method', 'built', 'work', 'best', 'data', 'mean', '0', 'unit', 'varianc', 'luckili', 'scikit', 'learn', 'provid', 'simpl', 'way', 'rescal', 'data', 'work', 'well', 'use', 'standardscal', 'got', 'thorough', 'explan', 'link', 'doc', 'rememb', 'also', '31', '000', 'featur', 'imag', '500', 'imag', 'total', 'use', 'svm', 'model', 'choic', 'also', 'need', 'reduc', 'number', 'featur', 'use', 'princip', 'compon', 'analysi', 'pca', 'pca', 'way', 'linearli', 'transform', 'data', 'inform', 'data', 'contain', 'within', 'smaller', 'number', 'featur', 'call', 'compon', 'visual', 'exampl', 'imag', 'dataset', 'contain', 'handwritten', 'number', 'imag', 'left', 'origin', 'imag', '784', 'compon', 'see', 'imag', 'right', 'post', 'pca', 'captur', 'shape', 'number', 'quit', 'effect', 'even', '59', 'compon', 'case', 'keep', '500', 'compon', 'mean', 'featur', 'matrix', '500', 'column', 'rather', 'origin', '31', '296', '8', 'split', 'train', 'test', 'set', 'need', 'convert', 'data', 'train', 'test', 'set', 'use', '70', 'imag', 'train', 'data', 'test', 'model', 'remain', '30', 'scikit', 'learn', 'train_test_split', 'function', 'make', 'easi', '9', 'train', 'model', 'final', 'time', 'build', 'model', 'use', 'support', 'vector', 'machin', 'svm', 'type', 'supervis', 'machin', 'learn', 'model', 'use', 'regress', 'classif', 'outlier', 'detect', 'svm', 'model', 'represent', 'exampl', 'point', 'space', 'map', 'exampl', 'separ', 'categori', 'divid', 'clear', 'gap', 'wide', 'possibl', 'new', 'exampl', 'map', 'space', 'predict', 'belong', 'categori', 'base', 'side', 'gap', 'fall', 'visual', 'maximum', 'margin', 'separ', 'two', 'class', 'use', 'svm', 'classifi', 'linear', 'kernel', 'sinc', 'classif', 'task', 'honey', 'bumbl', 'bee', 'use', 'support', 'vector', 'classifi', 'svc', 'type', 'svm', 'import', 'class', 'top', 'notebook', 'excel', 'visual', 'svm', 'work', 'check', 'video', 'http', 'brohrer', 'github', 'io', 'open_the_black_box', 'html', '10', 'score', 'model', 'use', 'train', 'model', 'gener', 'predict', 'test', 'data', 'see', 'well', 'model', 'calcul', 'accuraci', 'compar', 'predict', 'label', 'test', 'set', 'true', 'label', 'test', 'set', 'accuraci', 'number', 'correct', 'predict', 'divid', 'total', 'number', 'predict', 'scikit', 'learn', 'accuracy_scor', 'function', 'math', 'us', 'sometim', 'accuraci', 'mislead', 'sinc', 'equal', 'number', 'honey', 'bumbl', 'bee', 'use', 'metric', 'problem', '11', 'roc', 'curv', 'auc', 'use', 'svm', 'predict', 'predict', 'either', '0', '0', '1', '0', 'imag', 'x_test', 'use', 'svm', 'predict_proba', 'get', 'probabl', 'class', 'true', 'label', 'exampl', 'predict_proba', 'return', '0', '46195176', '0', '53804824', 'first', 'imag', 'mean', '46', 'chanc', 'bee', 'imag', 'api', '0', '0', '53', 'chanc', 'bee', 'imag', 'bombu', '1', '0', 'note', 'two', 'probabl', 'imag', 'alway', 'sum', '1', 'use', 'default', 'set', 'probabl', '0', '5', 'assign', 'class', 'label', '1', '0', 'assign', '0', '0', 'howev', 'threshold', 'adjust', 'receiv', 'oper', 'characterist', 'curv', 'roc', 'curv', 'plot', 'fals', 'posit', 'rate', 'true', 'posit', 'rate', 'differ', 'threshold', 'roc', 'curv', 'judg', 'visual', 'close', 'upper', 'lefthand', 'corner', 'area', 'curv', 'auc', 'also', 'calcul', '1', 'mean', 'everi', 'predict', 'label', 'correct', 'gener', 'worst', 'score', 'auc', '0', '5', 'perform', 'model', 'randomli', 'guess', 'see', 'scikit', 'learn', 'document', 'resourc', 'exampl', 'roc', 'curv', 'auc']","['imag', 'bee', 'featur', 'svm', '0', 'bombu', 'curv', 'bumbl', 'honey', 'label', 'model', 'compon', 'auc', 'gradient', 'hog', 'pca', 'roc', 'predict', 'array', 'scikit']","<div>
 <p>
  Can a machine distinguish between a honey bee and a bumble bee? Being able to identify bee species from images, while challenging, would allow researchers to more quickly and effectively collect field data. In this project, you will use the Python image library Pillow to load and manipulate image data, then build a model to identify honey bees and bumble bees given an image of these insects.
 </p>
 <p>
  This project is the second part of a series of projects that walk through working with image data, building classifiers using traditional techniques, and leveraging the power of deep learning for computer vision.
 </p>
 <p>
  The recommended prerequisites for this project are
  <a href=""https://www.datacamp.com/courses/intermediate-python-for-data-science"">
   Intermediate Python for Data Science
  </a>
  ,
  <a href=""https://www.datacamp.com/courses/introduction-to-data-visualization-with-python"">
   Introduction to Data Visualization with Python
  </a>
  ,
  <a href=""https://www.datacamp.com/courses/supervised-learning-with-scikit-learn"">
   Supervised Learning with scikit-learn
  </a>
  , and
  <a href=""https://www.datacamp.com/projects/374"">
   Naïve Bees: Image Loading and Processing
  </a>
  .
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Predicting%20Credit%20Card%20Approvals,Predicting Credit Card Approvals,python,Sayak  Paul,Deep Learning Associate at PyImageSearch,https://www.datacamp.com/projects/558,"Build a machine learning model to predict if a credit card application will get approved. 
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Predicting%20Credit%20Card%20Approvals/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Predicting%20Credit%20Card%20Approvals/notebook.ipynb,"['sklearn.preprocessing', 'sklearn.model_selection', 'GridSearchCV', 'LabelEncoder', 'LogisticRegression', 'MinMaxScaler', 'confusion_matrix', 'sklearn.linear_model', 'sklearn.metrics', 'train_test_split', 'numpy', 'pandas']","['.preprocessing', '.dtypes', '.model_selection', '.best_params_', '.best_score_', '.data', '.nan', '.values', '.linear_model', '.33', '.metrics', '.index']","['.isnull()', '.sum()', '.tail()', '.fit_transform()', '.fillna()', '.score()', '.fit()', '.predict()', '.mean()', '.drop()', '.describe()', '.replace()', '.info()', '.value_counts()', '.head()', '.read_csv()']","['GridSearchCV()', 'LabelEncoder()', 'LogisticRegression()', 'MinMaxScaler()', 'confusion_matrix()', 'dict()', 'train_test_split()', 'zip()', 'print()']","['1', 'credit', 'card', 'applic', 'commerci', 'bank', 'receiv', 'lot', 'applic', 'credit', 'card', 'mani', 'get', 'reject', 'mani', 'reason', 'like', 'high', 'loan', 'balanc', 'low', 'incom', 'level', 'mani', 'inquiri', 'individu', 'credit', 'report', 'exampl', 'manual', 'analyz', 'applic', 'mundan', 'error', 'prone', 'time', 'consum', 'time', 'money', 'luckili', 'task', 'autom', 'power', 'machin', 'learn', 'pretti', 'much', 'everi', 'commerci', 'bank', 'nowaday', 'notebook', 'build', 'automat', 'credit', 'card', 'approv', 'predictor', 'use', 'machin', 'learn', 'techniqu', 'like', 'real', 'bank', 'use', 'credit', 'card', 'approv', 'dataset', 'uci', 'machin', 'learn', 'repositori', 'structur', 'notebook', 'follow', 'first', 'start', 'load', 'view', 'dataset', 'see', 'dataset', 'mixtur', 'numer', 'non', 'numer', 'featur', 'contain', 'valu', 'differ', 'rang', 'plu', 'contain', 'number', 'miss', 'entri', 'preprocess', 'dataset', 'ensur', 'machin', 'learn', 'model', 'choos', 'make', 'good', 'predict', 'data', 'good', 'shape', 'exploratori', 'data', 'analysi', 'build', 'intuit', 'final', 'build', 'machin', 'learn', 'model', 'predict', 'individu', 'applic', 'credit', 'card', 'accept', 'first', 'load', 'view', 'dataset', 'find', 'sinc', 'data', 'confidenti', 'contributor', 'dataset', 'anonym', 'featur', 'name', '2', 'inspect', 'applic', 'output', 'may', 'appear', 'bit', 'confus', 'first', 'sight', 'let', 'tri', 'figur', 'import', 'featur', 'credit', 'card', 'applic', 'featur', 'dataset', 'anonym', 'protect', 'privaci', 'blog', 'give', 'us', 'pretti', 'good', 'overview', 'probabl', 'featur', 'probabl', 'featur', 'typic', 'credit', 'card', 'applic', 'gender', 'age', 'debt', 'marri', 'bankcustom', 'educationlevel', 'ethnic', 'yearsemploy', 'priordefault', 'employ', 'creditscor', 'driverslicens', 'citizen', 'zipcod', 'incom', 'final', 'approvalstatu', 'give', 'us', 'pretti', 'good', 'start', 'point', 'map', 'featur', 'respect', 'column', 'output', 'see', 'first', 'glanc', 'data', 'dataset', 'mixtur', 'numer', 'non', 'numer', 'featur', 'fix', 'preprocess', 'let', 'learn', 'dataset', 'bit', 'see', 'dataset', 'issu', 'need', 'fix', '3', 'handl', 'miss', 'valu', 'part', 'uncov', 'issu', 'affect', 'perform', 'machin', 'learn', 'model', 'go', 'unchang', 'dataset', 'contain', 'numer', 'non', 'numer', 'data', 'specif', 'data', 'float64', 'int64', 'object', 'type', 'specif', 'featur', '2', '7', '10', '14', 'contain', 'numer', 'valu', 'type', 'float64', 'float64', 'int64', 'int64', 'respect', 'featur', 'contain', 'non', 'numer', 'valu', 'dataset', 'also', 'contain', 'valu', 'sever', 'rang', 'featur', 'valu', 'rang', '0', '28', 'rang', '2', '67', 'rang', '1017', '100000', 'apart', 'get', 'use', 'statist', 'inform', 'like', 'mean', 'max', 'min', 'featur', 'numer', 'valu', 'final', 'dataset', 'miss', 'valu', 'take', 'care', 'task', 'miss', 'valu', 'dataset', 'label', 'seen', 'last', 'cell', 'output', 'let', 'temporarili', 'replac', 'miss', 'valu', 'question', 'mark', 'nan', '4', 'handl', 'miss', 'valu', 'part', 'ii', 'replac', 'question', 'mark', 'nan', 'go', 'help', 'us', 'next', 'miss', 'valu', 'treatment', 'go', 'perform', 'import', 'question', 'get', 'rais', 'give', 'much', 'import', 'miss', 'valu', 'ignor', 'ignor', 'miss', 'valu', 'affect', 'perform', 'machin', 'learn', 'model', 'heavili', 'ignor', 'miss', 'valu', 'machin', 'learn', 'model', 'may', 'miss', 'inform', 'dataset', 'may', 'use', 'train', 'mani', 'model', 'cannot', 'handl', 'miss', 'valu', 'implicitli', 'lda', 'avoid', 'problem', 'go', 'imput', 'miss', 'valu', 'strategi', 'call', 'mean', 'imput', '5', 'handl', 'miss', 'valu', 'part', 'iii', 'success', 'taken', 'care', 'miss', 'valu', 'present', 'numer', 'column', 'still', 'miss', 'valu', 'imput', 'column', '0', '1', '3', '4', '5', '6', '13', 'column', 'contain', 'non', 'numer', 'data', 'mean', 'imput', 'strategi', 'would', 'work', 'need', 'differ', 'treatment', 'go', 'imput', 'miss', 'valu', 'frequent', 'valu', 'present', 'respect', 'column', 'good', 'practic', 'come', 'imput', 'miss', 'valu', 'categor', 'data', 'gener', '6', 'preprocess', 'data', 'part', 'miss', 'valu', 'success', 'handl', 'still', 'minor', 'essenti', 'data', 'preprocess', 'need', 'proceed', 'toward', 'build', 'machin', 'learn', 'model', 'go', 'divid', 'remain', 'preprocess', 'step', 'three', 'main', 'task', 'convert', 'non', 'numer', 'data', 'numer', 'split', 'data', 'train', 'test', 'set', 'scale', 'featur', 'valu', 'uniform', 'rang', 'first', 'convert', 'non', 'numer', 'valu', 'numer', 'one', 'result', 'faster', 'comput', 'also', 'mani', 'machin', 'learn', 'model', 'like', 'xgboost', 'especi', 'one', 'develop', 'use', 'scikit', 'learn', 'requir', 'data', 'strictli', 'numer', 'format', 'use', 'techniqu', 'call', 'label', 'encod', '7', 'split', 'dataset', 'train', 'test', 'set', 'success', 'convert', 'non', 'numer', 'valu', 'numer', 'one', 'split', 'data', 'train', 'set', 'test', 'set', 'prepar', 'data', 'two', 'differ', 'phase', 'machin', 'learn', 'model', 'train', 'test', 'ideal', 'inform', 'test', 'data', 'use', 'scale', 'train', 'data', 'use', 'direct', 'train', 'process', 'machin', 'learn', 'model', 'henc', 'first', 'split', 'data', 'appli', 'scale', 'also', 'featur', 'like', 'driverslicens', 'zipcod', 'import', 'featur', 'dataset', 'predict', 'credit', 'card', 'approv', 'drop', 'design', 'machin', 'learn', 'model', 'best', 'set', 'featur', 'data', 'scienc', 'literatur', 'often', 'refer', 'featur', 'select', '8', 'preprocess', 'data', 'part', 'ii', 'data', 'split', 'two', 'separ', 'set', 'train', 'test', 'set', 'respect', 'left', 'one', 'final', 'preprocess', 'step', 'scale', 'fit', 'machin', 'learn', 'model', 'data', 'let', 'tri', 'understand', 'scale', 'valu', 'mean', 'real', 'world', 'let', 'use', 'creditscor', 'exampl', 'credit', 'score', 'person', 'creditworthi', 'base', 'credit', 'histori', 'higher', 'number', 'financi', 'trustworthi', 'person', 'consid', 'creditscor', '1', 'highest', 'sinc', 'rescal', 'valu', 'rang', '0', '1', '9', 'fit', 'logist', 'regress', 'model', 'train', 'set', 'essenti', 'predict', 'credit', 'card', 'applic', 'approv', 'classif', 'task', 'accord', 'uci', 'dataset', 'contain', 'instanc', 'correspond', 'deni', 'statu', 'instanc', 'correspond', 'approv', 'statu', 'specif', '690', 'instanc', '383', '55', '5', 'applic', 'got', 'deni', '307', '44', '5', 'applic', 'got', 'approv', 'give', 'us', 'benchmark', 'good', 'machin', 'learn', 'model', 'abl', 'accur', 'predict', 'statu', 'applic', 'respect', 'statist', 'model', 'pick', 'question', 'ask', 'featur', 'affect', 'credit', 'card', 'approv', 'decis', 'process', 'correl', 'although', 'measur', 'correl', 'outsid', 'scope', 'notebook', 'reli', 'intuit', 'inde', 'correl', 'correl', 'take', 'advantag', 'fact', 'gener', 'linear', 'model', 'perform', 'well', 'case', 'let', 'start', 'machin', 'learn', 'model', 'logist', 'regress', 'model', 'gener', 'linear', 'model', '10', 'make', 'predict', 'evalu', 'perform', 'well', 'model', 'perform', 'evalu', 'model', 'test', 'set', 'respect', 'classif', 'accuraci', 'also', 'take', 'look', 'model', 'confus', 'matrix', 'case', 'predict', 'credit', 'card', 'applic', 'equal', 'import', 'see', 'machin', 'learn', 'model', 'abl', 'predict', 'approv', 'statu', 'applic', 'deni', 'origin', 'got', 'deni', 'model', 'perform', 'well', 'aspect', 'might', 'end', 'approv', 'applic', 'approv', 'confus', 'matrix', 'help', 'us', 'view', 'model', 'perform', 'aspect', '11', 'grid', 'search', 'make', 'model', 'perform', 'better', 'model', 'pretti', 'good', 'abl', 'yield', 'accuraci', 'score', 'almost', '84', 'confus', 'matrix', 'first', 'element', 'first', 'row', 'confus', 'matrix', 'denot', 'true', 'neg', 'mean', 'number', 'neg', 'instanc', 'deni', 'applic', 'predict', 'model', 'correctli', 'last', 'element', 'second', 'row', 'confus', 'matrix', 'denot', 'true', 'posit', 'mean', 'number', 'posit', 'instanc', 'approv', 'applic', 'predict', 'model', 'correctli', 'let', 'see', 'better', 'perform', 'grid', 'search', 'model', 'paramet', 'improv', 'model', 'abil', 'predict', 'credit', 'card', 'approv', 'scikit', 'learn', 'implement', 'logist', 'regress', 'consist', 'differ', 'hyperparamet', 'grid', 'search', 'follow', 'two', 'tol', 'max_it', '12', 'find', 'best', 'perform', 'model', 'defin', 'grid', 'hyperparamet', 'valu', 'convert', 'singl', 'dictionari', 'format', 'gridsearchcv', 'expect', 'one', 'paramet', 'begin', 'grid', 'search', 'see', 'valu', 'perform', 'best', 'instanti', 'gridsearchcv', 'earlier', 'logreg', 'model', 'data', 'instead', 'pass', 'train', 'test', 'set', 'separ', 'suppli', 'x', 'scale', 'version', 'also', 'instruct', 'gridsearchcv', 'perform', 'cross', 'valid', 'five', 'fold', 'end', 'notebook', 'store', 'best', 'achiev', 'score', 'respect', 'best', 'paramet', 'build', 'credit', 'card', 'predictor', 'tackl', 'wide', 'known', 'preprocess', 'step', 'scale', 'label', 'encod', 'miss', 'valu', 'imput', 'finish', 'machin', 'learn', 'predict', 'person', 'applic', 'credit', 'card', 'would', 'get', 'approv', 'given', 'inform', 'person']","['card', 'credit', 'approv', 'miss', 'applic', 'model', 'numer', 'machin', 'valu', 'featur', 'learn', 'predict', 'imput', 'deni', 'train', 'non', 'scale', 'confus', 'statu', 'preprocess']","<div>
 <p>
  Commercial banks receive a lot of applications for credit cards. Many of them get rejected 
for many reasons, like high loan balances, low income levels, or too many inquiries on an 
individual's credit report, for example. Manually analyzing these applications is mundane, 
error-prone, and time-consuming (and time is money!). Luckily, this task can be automated with 
the power of machine learning and pretty much every commercial bank does so nowadays. 
In this project, you will build an automatic credit card approval predictor using machine learning 
techniques, just like the real banks do.
 </p>
 <p>
  The dataset used in this project is the
  <a href=""http://archive.ics.uci.edu/ml/datasets/credit+approval"">
   Credit Card Approval dataset
  </a>
  from the UCI Machine Learning Repository.
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Real-time%20Insights%20from%20Social%20Media%20Data,Real-time Insights from Social Media Data,python,Samia Khalid,Senior Software Engineer at Microsoft,https://www.datacamp.com/projects/760,"Learn to analyze Twitter data and do a deep dive into a hot trend.
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Real-time%20Insights%20from%20Social%20Media%20Data/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Real-time%20Insights%20from%20Social%20Media%20Data/notebook.ipynb,"['Counter', 'collections', 'json', 'matplotlib.pyplot', 'pandas']","['.json', '.style', '.pyplot']","['.dumps()', '.keys()', '.loads()', '.read()', '.background_gradient()', '.intersection()', '.most_common()', '.DataFrame()', '.hist()', '.sort_values()', '.sum()', '.append()', '.groupby()']","['type()', 'Counter()', 'open()', 'set()', 'print()', 'len()']","['1', 'local', 'global', 'thought', 'pattern', 'might', 'twitter', 'fan', 'admit', 'huge', 'influenc', 'world', 'know', 'trump', 'tweet', 'twitter', 'data', 'gold', 'term', 'insight', 'twitter', 'storm', 'avail', 'analysi', 'near', 'real', 'time', 'mean', 'learn', 'big', 'wave', 'thought', 'mood', 'around', 'world', 'aris', 'place', 'fill', 'rich', 'twitter', 'secur', 'guard', 'block', 'us', 'lay', 'hand', 'data', 'right', 'away', 'authent', 'step', 'realli', 'straightforward', 'need', 'call', 'api', 'data', 'collect', 'sinc', 'goal', 'today', 'learn', 'extract', 'insight', 'data', 'alreadi', 'gotten', 'green', 'pass', 'secur', 'data', 'readi', 'usag', 'dataset', 'folder', 'concentr', 'fun', 'part', 'twitter', 'provid', 'global', 'local', 'trend', 'let', 'load', 'inspect', 'data', 'topic', 'hot', 'worldwid', 'ww', 'unit', 'state', 'us', 'moment', 'queri', 'snapshot', 'json', 'respons', 'call', 'twitter', 'get', 'trend', 'place', 'api', 'note', 'document', 'call', 'full', 'overview', 'twitter', 'api', '2', 'prettifi', 'output', 'data', 'hard', 'read', 'luckili', 'resort', 'json', 'dump', 'method', 'format', 'pretti', 'json', 'string', '3', 'find', 'common', 'trend', 'pretti', 'print', 'result', 'output', 'previou', 'task', 'observ', 'array', 'trend', 'object', 'name', 'trend', 'topic', 'queri', 'paramet', 'use', 'search', 'topic', 'twitter', 'search', 'search', 'url', 'volum', 'tweet', 'last', '24', 'hour', 'avail', 'trend', 'get', 'updat', 'everi', '5', 'min', 'queri', 'time', 'beratkandili', 'goodfriday', 'welovetheearth', 'trend', 'ww', 'tweet_volum', 'tell', 'us', 'welovetheearth', 'popular', 'among', 'three', 'result', 'sort', 'tweet_volum', 'trend', 'uniqu', 'us', 'easi', 'skim', 'two', 'set', 'trend', 'spot', 'common', 'trend', 'let', 'manual', 'work', 'use', 'python', 'set', 'data', 'structur', 'find', 'common', 'trend', 'iter', 'two', 'trend', 'object', 'cast', 'list', 'name', 'set', 'call', 'intersect', 'method', 'get', 'common', 'name', 'two', 'set', '4', 'explor', 'hot', 'trend', 'intersect', 'last', 'output', 'see', 'two', 'set', 'trend', 'size', '50', '11', 'overlap', 'topic', 'particular', 'one', 'common', 'trend', 'sound', 'interest', 'welovetheearth', 'good', 'see', 'twitterati', 'unanim', 'talk', 'love', 'mother', 'earth', 'note', 'could', 'overlap', 'much', 'higher', 'overlap', 'queri', 'get', 'trend', 'peopl', 'us', 'could', 'fire', 'obout', 'topic', 'relev', 'imag', 'sourc', 'offici', 'music', 'video', 'cover', 'http', 'welovetheearth', 'org', 'video', 'found', 'hot', 'trend', 'welovetheearth', 'let', 'see', 'stori', 'scream', 'tell', 'us', 'queri', 'twitter', 'search', 'api', 'hashtag', 'queri', 'paramet', 'get', 'back', 'actual', 'tweet', 'relat', 'respons', 'search', 'api', 'store', 'dataset', 'folder', 'welovetheearth', 'json', 'let', 'load', 'dataset', 'deep', 'dive', 'trend', '5', 'dig', 'deeper', 'print', 'first', 'two', 'tweet', 'item', 'make', 'us', 'realiz', 'lot', 'tweet', 'normal', 'think', 'tweet', 'lot', 'short', 'text', 'hey', 'let', 'get', 'overwheml', 'inform', 'tweet', 'object', 'let', 'focu', 'interest', 'field', 'see', 'find', 'hidden', 'insight', '6', 'frequenc', 'analysi', 'first', 'result', 'last', 'extract', 'deduc', 'talk', 'song', 'love', 'earth', 'lot', 'big', 'artist', 'forc', 'behind', 'twitter', 'wave', 'especi', 'lil', 'dicki', 'ed', 'sheeran', 'cute', 'koala', 'song', 'edsheeranthekoala', 'hashtag', 'observ', 'first', '10', 'item', 'interest', 'field', 'gave', 'us', 'sens', 'data', 'take', 'closer', 'look', 'simpl', 'use', 'exercis', 'comput', 'frequenc', 'distribut', 'start', 'simpl', 'frequenc', 'gener', 'good', 'approach', 'help', 'get', 'idea', 'proceed', '7', 'activ', 'around', 'trend', 'base', 'last', 'frequenc', 'distribut', 'build', 'deduct', 'safe', 'say', 'music', 'video', 'earth', 'hashtag', 'earthmusicvideo', 'lil', 'dicki', 'dicaprio', 'music', 'artist', 'involv', 'well', 'leo', 'environmentalist', 'surpris', 'see', 'name', 'pop', 'also', 'say', 'video', 'releas', 'friday', 'like', 'april', '19th', 'abl', 'extract', 'mani', 'insight', 'quit', 'power', 'let', 'analyz', 'data', 'find', 'pattern', 'activ', 'around', 'tweet', 'retweet', 'occur', 'around', 'particular', 'tweet', 'tweet', 'retweet', 'retweeted_statu', 'field', 'give', 'mani', 'interest', 'detail', 'origin', 'tweet', 'author', 'measur', 'tweet', 'popular', 'analyz', 'retweetcount', 'favoritecount', 'field', 'let', 'also', 'extract', 'number', 'follow', 'tweeter', 'lot', 'celeb', 'pictur', 'tell', 'advoc', 'welovetheearth', 'influenc', 'signific', 'proport', 'follow', 'note', 'retweet_count', 'give', 'us', 'total', 'number', 'time', 'origin', 'tweet', 'retweet', 'origin', 'tweet', 'next', 'retweet', 'tinker', 'around', 'sampl', 'tweet', 'offici', 'documentaiton', 'way', 'get', 'head', 'around', 'mnay', 'field', '8', 'tabl', 'speak', '1000', 'word', 'let', 'manipul', 'data', 'visual', 'better', 'richer', 'way', 'look', 'matter', '9', 'analyz', 'use', 'languag', 'tabl', 'tell', 'us', 'lil', 'dicki', 'follow', 'react', '42', '4', 'follow', 'like', 'first', 'tweet', 'even', 'celebr', 'like', 'kati', 'perri', 'ellen', 'huug', 'twitter', 'follow', 'follow', 'hardli', 'react', 'e', 'g', '0', '0098', 'kati', 'follow', 'like', 'tweet', 'leo', 'got', 'like', 'retweet', 'term', 'count', 'first', 'tweet', 'like', '2', '19', 'follow', 'larg', 'differ', 'reaction', 'could', 'explain', 'fact', 'lil', 'dicki', 'music', 'video', 'leo', 'still', 'got', 'traction', 'kati', 'ellen', 'play', 'major', 'role', 'initi', 'find', 'interest', 'pattern', 'data', 'text', 'tweet', 'could', 'spot', 'differ', 'languag', 'let', 'creat', 'frequenc', 'distribut', 'languag', '10', 'final', 'thought', 'last', 'histogram', 'tell', 'us', 'tweet', 'english', 'polish', 'italian', 'spanish', 'next', 'runner', 'up', 'lot', 'tweet', 'languag', 'alien', 'twitter', 'lang', 'und', 'sort', 'inform', 'use', 'allow', 'us', 'get', 'understand', 'categori', 'peopl', 'interest', 'topic', 'cluster', 'could', 'also', 'analyz', 'devic', 'type', 'use', 'twitterati', 'tweet', 'sourc', 'answer', 'question', 'like', 'own', 'appl', 'compar', 'andorid', 'influenc', 'peopl', 'propens', 'toward', 'trend', 'leav', 'exercis', 'excit', 'journey', 'start', 'almost', 'clueless', 'rich', 'insight', 'locat', 'base', 'comparison', 'analyz', 'activ', 'around', 'tweet', 'find', 'pattern', 'languag', 'devic', 'cover', 'lot', 'today', 'let', 'give', 'well', 'deserv', 'pat', 'back', 'magic', 'formula', 'data', 'python', 'creativ', 'curios']","['tweet', 'twitter', 'trend', 'welovetheearth', 'retweet', 'dicki', 'json', 'lil', 'queri', 'topic', 'music', 'leo', 'api', 'insight', 'earth', 'hashtag', 'kati', 'thought', 'around', 'frequenc']","<div>
 <p>
  Fear of missing out, curiosity, self-esteem, speed: it's like social media has changed our basic human needs; these baits are keeping us hooked and engaged. And Twitter is a master at this
  <em>
   game
  </em>
  .  Elon Musk's tweets keep Wall Street on its toes; Trump's tweets have the potential of starting wars — Twitter has this huge influence on the world because of the type of its users. Data from
  <em>
   Twitter-storms
  </em>
  is available in near real-time. This means we can learn about the big waves of thoughts and moods around the world as they arise. So of course, we are not going to miss the chance to analyze this treasure trove.
 </p>
 <p>
  In this Project, you will use pre-downloaded datasets to understand the nuts and bolts of Twitter Data. In particular, you will do a thorough analysis of a hot-trend.
 </p>
 <p>
  <em>
   Warning: Some of the tweets in the Twitter datasets contain explicit language.
  </em>
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Recreating%20John%20Snow's%20Ghost%20Map,Recreating John Snow's Ghost Map,python,Radovan Kavicky,President and Principal Data Scientist at GapData Institute,https://www.datacamp.com/projects/132,"Recreate John Snow's famous map of the 1854 cholera outbreak in London.
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Recreating%20John%20Snow's%20Ghost%20Map/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Recreating%20John%20Snow's%20Ghost%20Map/notebook.ipynb,"['bokeh', 'figure,', 'show', 'bokeh.plotting', 'output_notebook,', 'folium', 'pandas']","['.13666', '.5132119', '.INLINE', '.resources', '.weekday_name', '.plotting', '.2', '.4', '.dt', '.shape', '.csv']","['.line()', '.add_to()', '.CircleMarker()', '.iterrows()', '.circle()', '.rename()', '.info()', '.Map()', '.Marker()', '.describe()', '.to_datetime()', '.sum()', '.groupby()', '.read_csv()', '.head()']","['zip()', 'range()', 'figure()', 'output_notebook()', 'show()', 'list()', 'len()', 'print()']","['1', 'dr', 'john', 'snow', 'dr', 'john', 'snow', '1813', '1858', 'famou', 'british', 'physician', 'wide', 'recogn', 'legendari', 'figur', 'histori', 'public', 'health', 'lead', 'pioneer', 'develop', 'anesthesia', 'even', 'say', 'one', 'greatest', 'physician', 'time', 'lead', 'advoc', 'anesthesia', 'hygien', 'practic', 'medicin', 'experi', 'ether', 'chloroform', 'also', 'design', 'mask', 'method', 'administ', 'person', 'administ', 'chloroform', 'queen', 'victoria', 'birth', 'eighth', 'ninth', 'children', '1853', '1857', 'assur', 'grow', 'public', 'accept', 'use', 'anesthet', 'childbirth', 'show', 'later', 'life', 'success', 'john', 'snow', 'also', 'recogn', 'one', 'founder', 'modern', 'epidemiolog', 'also', 'consid', 'founder', 'data', 'visual', 'spatial', 'analysi', 'data', 'scienc', 'gener', 'mani', 'relat', 'field', 'scientif', 'pretti', 'modern', 'data', 'approach', 'identifi', 'sourc', 'cholera', 'outbreak', 'soho', 'london', '1854', 'alway', 'like', 'fact', 'long', 'time', 'simpli', 'ignor', 'scientif', 'commun', 'current', 'often', 'mythifi', 'notebook', 'go', 'rediscov', 'data', 'stori', 'reanalyz', 'data', 'collect', '1854', 'recreat', 'famou', 'map', 'also', 'call', 'ghost', 'map', '2', 'cholera', 'attack', 'prior', 'john', 'snow', 'discoveri', 'cholera', 'regular', 'visitor', 'london', 'overcrowd', 'unsanitari', 'street', 'time', 'third', 'cholera', 'outbreak', 'one', 'studi', 'subject', 'year', '1839', '1856', '700', 'studi', 'essay', 'publish', 'london', 'alon', 'nearli', 'author', 'believ', 'outbreak', 'due', 'miasma', 'bad', 'air', 'john', 'snow', 'pioneer', 'work', 'anesthesia', 'gase', 'made', 'doubt', 'miasma', 'model', 'diseas', 'origin', 'formul', 'publish', 'theori', 'cholera', 'spread', 'water', 'food', 'essay', 'mode', 'commun', 'cholera', 'outbreak', '1849', 'essay', 'receiv', 'neg', 'review', 'lancet', 'london', 'medic', 'gazett', 'know', 'right', 'dr', 'snow', 'dilemma', 'prove', 'first', 'step', 'get', 'check', 'data', 'dataset', '489', 'row', 'data', '3', 'column', 'work', 'dataset', 'easili', 'first', 'make', 'chang', '3', 'know', 'noth', 'john', 'snow', 'somehow', 'unthink', 'one', 'man', 'could', 'debunk', 'miasma', 'theori', 'prove', 'other', 'got', 'wrong', 'work', 'mostli', 'ignor', 'medic', 'colleagu', 'simpli', 'said', 'know', 'noth', 'john', 'snow', 'alreadi', 'mention', 'john', 'snow', 'first', 'attempt', 'debunk', 'miasma', 'theori', 'end', 'neg', 'review', 'howev', 'review', 'made', 'help', 'suggest', 'term', 'evid', 'would', 'compel', 'crucial', 'natur', 'experi', 'would', 'find', 'peopl', 'live', 'side', 'side', 'lifestyl', 'similar', 'respect', 'except', 'water', 'sourc', 'cholera', 'outbreak', 'soho', 'london', '1854', 'gave', 'snow', 'opportun', 'save', 'live', 'time', 'also', 'test', 'improv', 'theori', 'final', 'proof', 'right', 'know', 'john', 'snow', 'let', 'get', 'data', 'right', 'first', '4', 'ghost', 'map', 'origin', 'map', 'unfortun', 'avail', 'might', 'never', 'even', 'exist', 'see', 'famou', 'one', 'drew', 'year', 'later', '1855', 'though', 'display', 'cell', 'map', 'depict', 'visual', 'death', 'sometim', 'call', 'also', 'ghost', 'map', 'know', 'john', 'snow', 'data', 'let', 'recreat', 'map', 'use', 'modern', 'techniqu', '5', 'pump', 'mark', 'death', 'map', 'john', 'snow', 'saw', 'random', 'pattern', 'saw', 'recreat', 'ghost', 'map', 'major', 'death', 'concentr', 'corner', 'broad', 'street', 'broadwick', 'street', 'cambridg', 'street', 'lexington', 'street', 'cluster', 'death', 'around', 'junction', 'street', 'epicent', 'outbreak', 'ye', 'water', 'pump', 'john', 'snow', 'time', 'alreadi', 'develop', 'theori', 'cholera', 'spread', 'water', 'test', 'mark', 'map', 'also', 'locat', 'water', 'pump', 'nearbi', 'whole', 'pictur', 'combin', 'locat', 'death', 'relat', 'cholera', 'locat', 'water', 'pump', 'snow', 'abl', 'show', 'major', 'cluster', 'around', 'one', 'particular', 'public', 'water', 'pump', 'broad', 'street', 'soho', 'final', 'proof', 'need', 'add', 'locat', 'pump', 'recreat', 'ghost', 'map', '6', 'know', 'noth', 'john', 'snow', 'john', 'snow', 'final', 'proof', 'connect', 'death', 'consequ', 'cholera', 'outbreak', 'public', 'water', 'pump', 'probabl', 'contamin', 'stop', 'investig', 'look', 'anomali', 'would', 'say', 'outlier', 'data', 'found', 'two', 'fact', 'death', 'first', 'breweri', 'right', 'broad', 'street', 'went', 'learn', 'drank', 'mostli', 'beer', 'word', 'water', 'local', 'pump', 'confirm', 'theori', 'pump', 'sourc', 'outbreak', 'second', 'build', 'without', 'death', 'workhous', 'near', 'poland', 'street', 'learn', 'sourc', 'water', 'pump', 'broad', 'street', 'confirm', 'locat', 'build', 'visual', 'also', 'map', 'left', 'sure', 'although', 'offici', 'trust', 'theori', 'remov', 'handl', 'pump', 'next', 'day', '8th', 'septemb', '1854', 'john', 'snow', 'later', 'collect', 'publish', 'famou', 'book', 'also', 'data', 'death', 'chronolog', 'order', 'peak', 'outbreak', 'analyz', 'compar', 'effect', 'handl', 'remov', '7', 'pictur', 'worth', 'thousand', 'word', 'remov', 'handl', 'pump', 'prevent', 'infect', 'water', 'collect', 'spring', 'pump', 'later', 'found', 'contamin', 'sewag', 'act', 'later', 'recogn', 'earli', 'exampl', 'epidemiolog', 'public', 'health', 'medicin', 'applic', 'scienc', 'germ', 'theori', 'diseas', 'real', 'life', 'crisi', 'replica', 'pump', 'togeth', 'explanatori', 'memori', 'plaqu', 'without', 'handl', 'erect', '1992', 'near', 'locat', 'origin', 'close', 'back', 'wall', 'today', 'john', 'snow', 'pub', 'site', 'subtli', 'mark', 'pink', 'granit', 'kerbston', 'front', 'small', 'wall', 'plaqu', 'learn', 'lot', 'john', 'snow', 'data', 'take', 'look', 'absolut', 'count', 'observ', 'could', 'lead', 'us', 'wrong', 'conclus', 'let', 'take', 'differ', 'look', 'data', 'use', 'bokeh', 'thank', 'john', 'snow', 'data', 'chronolog', 'order', 'e', 'time', 'seri', 'data', 'best', 'way', 'see', 'whole', 'pictur', 'visual', 'look', 'way', 'saw', 'write', 'mode', 'commun', 'cholera', '1855', '8', 'john', 'snow', 'myth', 'learn', 'someth', 'previou', 'interact', 'visual', 'clearli', 'see', 'peak', 'cholera', 'outbreak', 'happen', 'remov', 'handl', 'alreadi', 'declin', 'downsid', 'trajectori', '8th', 'septemb', '1854', 'differ', 'view', 'data', 'import', 'case', 'compar', 'absolut', 'number', 'could', 'lead', 'us', 'wrong', 'conclus', 'remov', 'handl', 'broad', 'street', 'pump', 'sure', 'stop', 'outbreak', 'simpli', 'true', 'sure', 'help', 'stop', 'outbreak', 'john', 'snow', 'awar', 'need', 'done', 'never', 'aspir', 'becom', 'hero', 'peopl', 'love', 'stori', 'hero', 'myth', 'definit', 'scienc', 'data', 'scienc', 'accord', 'john', 'snow', 'myth', 'superhero', 'two', 'day', 'defi', 'equal', 'hypothes', 'cholera', 'waterborn', 'diseas', 'despit', 'one', 'listen', 'brave', 'continu', 'draw', 'map', 'convinc', 'local', 'author', 'remov', 'handl', 'infect', 'water', 'pump', 'find', 'stop', 'outbreak', 'john', 'snow', 'save', 'live', 'mani', 'london', 'take', 'better', 'look', 'behind', 'stori', 'find', 'also', 'true', 'john', 'snow', 'fight', 'diseas', 'limit', 'tool', 'want', 'get', 'proof', 'right', 'knew', 'someth', 'cholera', 'could', 'limit', 'time', 'alway', 'boil', 'water', 'drink']","['john', 'snow', 'pump', 'cholera', 'outbreak', 'street', 'water', 'london', 'map', 'theori', 'death', '1854', 'ghost', 'miasma', 'proof', 'broad', 'recreat', 'handl', 'public', 'anesthesia']","<div>
 <p>
  In 1854, Dr. John Snow (no, not the Game of Thrones's character)
used a pre-computer method of spatial analysis by mapping patterns
and occurrences of cholera outbreaks in Soho, London. He mapped the
deaths in the neighbourhood and determined that a vast majority occurred
around one particular water well and that those that died used that
well.
 </p>
 <p>
  This is not only one of the earliest uses of data visualization,
but by solving this problem, Dr. John Snow also founded spatial analysis and
modern epidemiology. In this Python project, you will reanalyze the data and recreate 
his famous map.
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Risk%20and%20Returns:%20The%20Sharpe%20Ratio,Risk and Returns: The Sharpe Ratio,python,Stefan Jansen,Founder & Lead Data Scientist at Applied Artificial Intelligence,https://www.datacamp.com/projects/66,"Use pandas to calculate and compare profitability and risk of different investments using the Sharpe Ratio.
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Risk%20and%20Returns:%20The%20Sharpe%20Ratio/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Risk%20and%20Returns:%20The%20Sharpe%20Ratio/notebook.ipynb,"['numpy', 'matplotlib.pyplot', 'pandas']","['.plot', '.style', '.pyplot', '.csv']","['.show()', '.describe()', '.pct_change()', '.bar()', '.plot()', '.div()', '.sqrt()', '.std()', '.dropna()', '.info()', '.sub()', '.use()', '.mean()', '.read_csv()']",['print()'],"['1', 'meet', 'professor', 'william', 'sharp', 'invest', 'may', 'make', 'sens', 'expect', 'return', 'money', 'cost', 'return', 'part', 'stori', 'riski', 'may', 'rang', 'possibl', 'outcom', 'one', 'compar', 'differ', 'invest', 'may', 'deliv', 'similar', 'result', 'averag', 'exhibit', 'differ', 'level', 'risk', 'enter', 'william', 'sharp', 'introduc', 'reward', 'variabl', 'ratio', '1966', 'soon', 'came', 'call', 'sharp', 'ratio', 'compar', 'expect', 'return', 'two', 'invest', 'opportun', 'calcul', 'addit', 'return', 'per', 'unit', 'risk', 'investor', 'could', 'obtain', 'choos', 'one', 'particular', 'look', 'differ', 'return', 'two', 'invest', 'compar', 'averag', 'differ', 'standard', 'deviat', 'measur', 'risk', 'differ', 'higher', 'sharp', 'ratio', 'mean', 'reward', 'higher', 'given', 'amount', 'risk', 'common', 'compar', 'specif', 'opportun', 'benchmark', 'repres', 'entir', 'categori', 'invest', 'sharp', 'ratio', 'one', 'popular', 'risk', 'return', 'measur', 'financ', 'least', 'simpl', 'use', 'also', 'help', 'professor', 'sharp', 'nobel', 'memori', 'prize', 'econom', '1990', 'work', 'capit', 'asset', 'price', 'model', 'capm', 'sharp', 'ratio', 'usual', 'calcul', 'portfolio', 'use', 'risk', 'free', 'interest', 'rate', 'benchmark', 'simplifi', 'exampl', 'use', 'stock', 'instead', 'portfolio', 'also', 'use', 'stock', 'index', 'benchmark', 'rather', 'risk', 'free', 'interest', 'rate', 'readili', 'avail', 'daili', 'frequenc', 'get', 'convert', 'interest', 'rate', 'annual', 'daili', 'frequenc', 'keep', 'mind', 'would', 'run', 'calcul', 'portfolio', 'return', 'risk', 'free', 'rate', 'choic', 'e', 'g', '3', 'month', 'treasuri', 'bill', 'rate', 'let', 'learn', 'sharp', 'ratio', 'calcul', 'stock', 'two', 'tech', 'giant', 'facebook', 'amazon', 'benchmark', 'use', 'p', '500', 'measur', 'perform', '500', 'largest', 'stock', 'us', 'use', 'stock', 'index', 'instead', 'risk', 'free', 'rate', 'result', 'call', 'inform', 'ratio', 'use', 'benchmark', 'return', 'activ', 'portfolio', 'manag', 'tell', 'much', 'return', 'given', 'unit', 'risk', 'portfolio', 'manag', 'earn', 'rel', 'put', 'money', 'low', 'cost', 'index', 'fund', '2', 'first', 'glanc', 'data', 'let', 'take', 'look', 'data', 'find', 'mani', 'observ', 'variabl', 'dispos', '3', 'plot', 'summar', 'daili', 'price', 'amazon', 'facebook', 'compar', 'invest', 'either', 'facebook', 'amazon', 'index', '500', 'largest', 'compani', 'us', 'let', 'visual', 'data', 'better', 'understand', 'deal', '4', 'visual', 'summar', 'daili', 'valu', 'p', '500', 'let', 'also', 'take', 'closer', 'look', 'valu', 'p', '500', 'benchmark', '5', 'input', 'sharp', 'ratio', 'start', 'daili', 'stock', 'return', 'sharp', 'ratio', 'use', 'differ', 'return', 'two', 'invest', 'opportun', 'consider', 'howev', 'data', 'show', 'histor', 'valu', 'invest', 'return', 'calcul', 'return', 'need', 'calcul', 'percentag', 'chang', 'valu', 'one', 'day', 'next', 'also', 'take', 'look', 'summari', 'statist', 'becom', 'input', 'calcul', 'sharp', 'ratio', 'alreadi', 'guess', 'result', '6', 'daili', 'p', '500', 'return', 'p', '500', 'calcul', 'daili', 'return', 'work', 'way', 'need', 'make', 'sure', 'select', 'seri', 'use', 'singl', 'bracket', 'datafram', 'facilit', 'calcul', 'next', 'step', '7', 'calcul', 'excess', 'return', 'amazon', 'facebook', 'vs', 'p', '500', 'next', 'need', 'calcul', 'rel', 'perform', 'stock', 'vs', 'p', '500', 'benchmark', 'calcul', 'differ', 'return', 'stock_return', 'sp_return', 'day', '8', 'sharp', 'ratio', 'step', '1', 'averag', 'differ', 'daili', 'return', 'stock', 'vs', 'p', '500', 'final', 'start', 'comput', 'sharp', 'ratio', 'first', 'need', 'calcul', 'averag', 'excess_return', 'tell', 'us', 'much', 'less', 'invest', 'yield', 'per', 'day', 'compar', 'benchmark', '9', 'sharp', 'ratio', 'step', '2', 'standard', 'deviat', 'return', 'differ', 'look', 'like', 'quit', 'bit', 'differ', 'averag', 'daili', 'return', 'amazon', 'facebook', 'next', 'calcul', 'standard', 'deviat', 'excess_return', 'show', 'us', 'amount', 'risk', 'invest', 'stock', 'impli', 'compar', 'invest', 'p', '500', '10', 'put', 'togeth', 'need', 'comput', 'ratio', 'avg_excess_return', 'sd_excess_return', 'result', 'final', 'sharp', 'ratio', 'indic', 'much', 'less', 'return', 'invest', 'opportun', 'consider', 'yield', 'per', 'unit', 'risk', 'sharp', 'ratio', 'often', 'annual', 'multipli', 'squar', 'root', 'number', 'period', 'use', 'daili', 'data', 'input', 'use', 'squar', 'root', 'number', 'trade', 'day', '5', 'day', '52', 'week', 'minu', 'holiday', '252', '11', 'conclus', 'given', 'two', 'sharp', 'ratio', 'invest', 'go', '2016', 'amazon', 'sharp', 'ratio', 'twice', 'high', 'facebook', 'mean', 'invest', 'amazon', 'return', 'twice', 'much', 'compar', 'p', '500', 'unit', 'risk', 'investor', 'would', 'assum', 'word', 'risk', 'adjust', 'term', 'invest', 'amazon', 'would', 'attract', 'differ', 'mostli', 'driven', 'differ', 'return', 'rather', 'risk', 'amazon', 'facebook', 'risk', 'choos', 'amazon', 'fb', 'measur', 'standard', 'deviat', 'slightli', 'higher', 'higher', 'sharp', 'ratio', 'amazon', 'end', 'higher', 'mainli', 'due', 'higher', 'averag', 'daili', 'return', 'amazon', 'face', 'invest', 'altern', 'offer', 'differ', 'return', 'risk', 'sharp', 'ratio', 'help', 'make', 'decis', 'adjust', 'return', 'differ', 'risk', 'allow', 'investor', 'compar', 'invest', 'opportun', 'equal', 'term', 'appl', 'appl', 'basi']","['ratio', 'sharp', 'return', 'risk', 'amazon', 'invest', '500', 'p', 'daili', 'benchmark', 'stock', 'facebook', 'portfolio', 'opportun', 'deviat', 'calcul', 'input', 'higher', 'investor', 'free']","<div>
 <p>
  When you assess whether to invest in an asset, you want to look not only 
at how much money you could make but also at how much risk you are taking. 
The Sharpe Ratio, developed by Nobel Prize winner William Sharpe some 
50 years ago, does precisely this: it compares the return of an investment 
to that of an alternative and relates the relative return to the risk of
the investment, measured by the standard deviation of returns.
 </p>
 <p>
  In this project, you will apply the Sharpe ratio to real financial data using pandas.
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/TV%2C%20Halftime%20Shows%2C%20and%20the%20Big%20Game,"TV, Halftime Shows, and the Big Game",python,David Venturi,Curriculum Manager at DataCamp,https://www.datacamp.com/projects/684,"Load, clean, and explore Super Bowl data in the age of soaring ad costs and flashy halftime shows.
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/TV%2C%20Halftime%20Shows%2C%20and%20the%20Big%20Game/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/TV%2C%20Halftime%20Shows%2C%20and%20the%20Big%20Game/notebook.ipynb,"['pyplot', 'matplotlib', 'seaborn', 'pandas']","['.super_bowl', '.musician', '.ad_cost', '.and', '.avg_us_viewers', '.combined_pts', '.difference_pts', '.num_songs', '.rating_household', '.str', '.style', '.values', '.csv']","['.subplot()', '.xlabel()', '.hist()', '.contains()', '.ylabel()', '.title()', '.sort_values()', '.show()', '.tight_layout()', '.regplot()', '.info()', '.merge()', '.plot()', '.use()', '.reset_index()', '.dropna()', '.count()', '.head()', '.groupby()', '.read_csv()']","['display()', 'game()', 'max()', 'int()', 'print()']","['1', 'tv', 'halftim', 'show', 'big', 'game', 'whether', 'like', 'footbal', 'super', 'bowl', 'spectacl', 'littl', 'someth', 'everyon', 'super', 'bowl', 'parti', 'drama', 'form', 'blowout', 'comeback', 'controversi', 'sport', 'fan', 'ridicul', 'expens', 'ad', 'hilari', 'other', 'gut', 'wrench', 'thought', 'provok', 'weird', 'half', 'time', 'show', 'biggest', 'musician', 'world', 'sometim', 'ride', 'giant', 'mechan', 'tiger', 'leap', 'roof', 'stadium', 'show', 'babi', 'notebook', 'go', 'find', 'element', 'show', 'interact', 'explor', 'clean', 'data', 'littl', 'go', 'answer', 'question', 'like', 'extrem', 'game', 'outcom', 'game', 'affect', 'televis', 'viewership', 'viewership', 'tv', 'rate', 'ad', 'cost', 'evolv', 'time', 'prolif', 'musician', 'term', 'halftim', 'show', 'perform', 'left', 'shark', 'steal', 'show', 'kati', 'perri', 'perform', 'halftim', 'super', 'bowl', 'xlix', 'photo', 'huntley', 'paton', 'attribut', 'sharealik', '2', '0', 'gener', 'cc', 'sa', '2', '0', 'dataset', 'use', 'scrape', 'polish', 'wikipedia', 'made', 'three', 'csv', 'file', 'one', 'game', 'data', 'one', 'tv', 'data', 'one', 'halftim', 'musician', 'data', '52', 'super', 'bowl', '2018', 'let', 'take', 'look', 'use', 'display', 'instead', 'print', 'sinc', 'output', 'much', 'prettier', 'jupyt', 'notebook', '2', 'take', 'note', 'dataset', 'issu', 'super', 'bowl', 'game', 'data', 'see', 'dataset', 'appear', 'whole', 'except', 'miss', 'valu', 'backup', 'quarterback', 'column', 'qb_winner_2', 'qb_loser_2', 'make', 'sens', 'given', 'start', 'qb', 'super', 'bowl', 'qb_winner_1', 'qb_loser_1', 'play', 'entir', 'game', 'visual', 'inspect', 'tv', 'halftim', 'musician', 'data', 'one', 'miss', 'valu', 'display', 'got', 'hunch', 'super', 'bowl', 'goe', 'way', 'back', '1967', 'granular', 'column', 'e', 'g', 'number', 'song', 'halftim', 'musician', 'probabl', 'track', 'reliabl', 'time', 'wikipedia', 'great', 'perfect', 'inspect', 'info', 'output', 'tv', 'halftime_musician', 'show', 'us', 'multipl', 'column', 'null', 'valu', '3', 'combin', 'point', 'distribut', 'tv', 'data', 'follow', 'column', 'miss', 'valu', 'lot', 'total_us_view', 'amount', 'u', 'viewer', 'watch', 'least', 'part', 'broadcast', 'rating_18_49', 'averag', 'u', 'adult', '18', '49', 'live', 'household', 'tv', 'watch', 'entir', 'broadcast', 'share_18_49', 'averag', 'u', 'adult', '18', '49', 'live', 'household', 'tv', 'use', 'watch', 'entir', 'broadcast', 'halftim', 'musician', 'data', 'miss', 'number', 'song', 'perform', 'num_song', 'third', 'perform', 'lot', 'potenti', 'reason', 'miss', 'valu', 'data', 'ever', 'track', 'lost', 'histori', 'research', 'effort', 'make', 'data', 'whole', 'worth', 'mayb', 'watch', 'everi', 'super', 'bowl', 'halftim', 'show', 'get', 'song', 'count', 'would', 'pretti', 'fun', 'time', 'kind', 'stuff', 'let', 'take', 'note', 'dataset', 'perfect', 'start', 'uncov', 'insight', 'let', 'start', 'look', 'combin', 'point', 'super', 'bowl', 'visual', 'distribut', 'let', 'also', 'pinpoint', 'super', 'bowl', 'highest', 'lowest', 'score', '4', 'point', 'differ', 'distribut', 'combin', 'score', 'around', '40', '50', 'point', 'extrem', 'roughli', 'equal', 'distanc', 'away', 'opposit', 'direct', 'go', 'highest', 'combin', 'score', '74', '75', 'find', 'two', 'game', 'featur', 'domin', 'quarterback', 'perform', 'one', 'even', 'happen', 'recent', '2018', 'super', 'bowl', 'lii', 'tom', 'bradi', 'patriot', 'lost', 'nick', 'fole', 'underdog', 'eagl', '41', '33', 'combin', 'score', '74', 'go', 'lowest', 'combin', 'score', 'super', 'bowl', 'iii', 'vii', 'featur', 'tough', 'defens', 'domin', 'also', 'super', 'bowl', 'ix', 'new', 'orlean', '1975', 'whose', '16', '6', 'score', 'attribut', 'inclement', 'weather', 'field', 'slick', 'overnight', 'rain', 'cold', '46', 'f', '8', 'c', 'make', 'hard', 'steeler', 'vike', 'much', 'offens', 'second', 'coldest', 'super', 'bowl', 'ever', 'last', 'play', 'inclement', 'weather', '30', 'year', 'nfl', 'realiz', 'peopl', 'like', 'point', 'guess', 'updat', 'super', 'bowl', 'liii', '2019', 'patriot', 'ram', 'broke', 'record', 'lowest', 'score', 'super', 'bowl', 'combin', 'score', '16', 'point', '13', '3', 'patriot', 'let', 'take', 'look', 'point', 'differ', '5', 'blowout', 'translat', 'lost', 'viewer', 'vast', 'major', 'super', 'bowl', 'close', 'game', 'make', 'sens', 'team', 'like', 'deserv', 'made', 'far', 'closest', 'game', 'ever', 'buffalo', 'bill', 'lost', 'new', 'york', 'giant', '1', 'point', '1991', 'best', 'rememb', 'scott', 'norwood', 'last', 'second', 'miss', 'field', 'goal', 'attempt', 'went', 'wide', 'right', 'kick', 'four', 'bill', 'super', 'bowl', 'loss', 'row', 'poor', 'scott', 'biggest', 'point', 'discrep', 'ever', '45', 'point', 'hall', 'famer', 'joe', 'montana', 'led', 'san', 'francisco', '49er', 'victori', '1990', 'one', 'year', 'closest', 'game', 'ever', 'rememb', 'watch', 'seahawk', 'crush', 'bronco', '35', 'point', '43', '8', '2014', 'bore', 'experi', 'opinion', 'game', 'never', 'realli', 'close', 'pretti', 'sure', 'chang', 'channel', 'end', 'third', 'quarter', 'let', 'combin', 'game', 'data', 'tv', 'see', 'univers', 'phenomenon', 'larg', 'point', 'differ', 'translat', 'lost', 'viewer', 'plot', 'household', 'share', 'averag', 'percentag', 'u', 'household', 'tv', 'use', 'watch', 'entir', 'broadcast', 'vs', 'point', 'differ', 'find', '6', 'viewership', 'ad', 'industri', 'time', 'downward', 'slope', 'regress', 'line', '95', 'confid', 'interv', 'regress', 'suggest', 'bail', 'game', 'blowout', 'common', 'though', 'match', 'intuit', 'must', 'take', 'grain', 'salt', 'linear', 'relationship', 'data', 'weak', 'due', 'small', 'sampl', 'size', '52', 'game', 'regardless', 'score', 'though', 'bet', 'peopl', 'stick', 'halftim', 'show', 'good', 'news', 'tv', 'network', 'advertis', '30', 'second', 'spot', 'cost', 'pretti', '5', 'million', 'alway', 'way', 'number', 'viewer', 'household', 'rate', 'trend', 'alongsid', 'ad', 'cost', 'find', 'use', 'line', 'plot', 'share', 'super', 'bowl', 'x', 'axi', '7', 'halftim', 'show', 'alway', 'great', 'see', 'viewer', 'increas', 'ad', 'cost', 'mayb', 'network', 'data', 'savvi', 'slow', 'react', 'make', 'sens', 'sinc', 'datacamp', 'exist', 'back', 'anoth', 'hypothesi', 'mayb', 'halftim', 'show', 'good', 'earlier', 'year', 'modern', 'spectacl', 'super', 'bowl', 'lot', 'cultur', 'prestig', 'big', 'halftim', 'act', 'went', 'youtub', 'rabbit', 'hole', 'turn', 'old', 'one', 'today', 'standard', 'offend', 'super', 'bowl', 'xxvi', '1992', 'frosti', 'snowman', 'rap', 'perform', 'children', 'super', 'bowl', 'xxiii', '1989', 'elvi', 'imperson', 'magic', 'trick', 'even', 'sing', 'one', 'elvi', 'song', 'super', 'bowl', 'xxi', '1987', 'tap', 'danc', 'poni', 'okay', 'pretti', 'awesom', 'actual', 'turn', 'michael', 'jackson', 'super', 'bowl', 'xxvii', 'perform', 'one', 'watch', 'event', 'american', 'tv', 'histori', 'nfl', 'realiz', 'valu', 'super', 'bowl', 'airtim', 'decid', 'need', 'sign', 'big', 'name', 'act', 'halftim', 'show', 'mj', 'inde', 'impress', 'see', 'filter', 'halftime_musician', 'data', '8', 'halftim', 'show', 'appear', 'lot', 'march', 'band', 'american', 'jazz', 'clarinetist', 'pete', 'fountain', 'miss', 'texa', '1973', 'play', 'violin', 'noth', 'perform', 'simpli', 'beyoncé', 'fair', 'one', 'let', 'see', 'musician', 'done', 'one', 'halftim', 'show', 'includ', 'perform', 'count', '9', 'perform', 'song', 'halftim', 'show', 'world', 'famou', 'grambl', 'state', 'univers', 'tiger', 'march', 'band', 'take', 'crown', 'six', 'appear', 'beyoncé', 'justin', 'timberlak', 'nelli', 'bruno', 'mar', 'post', 'y2k', 'musician', 'multipl', 'appear', 'two', 'previou', 'inspect', 'num_song', 'column', 'lot', 'miss', 'valu', 'lot', 'march', 'band', 'num_song', 'entri', 'non', 'march', 'band', 'miss', 'data', 'start', 'occur', 'super', 'bowl', 'xx', 'let', 'filter', 'march', 'band', 'filter', 'musician', 'word', 'march', 'word', 'spirit', 'common', 'name', 'convent', 'march', 'band', 'spirit', 'someth', 'filter', 'super', 'bowl', 'super', 'bowl', 'xx', 'address', 'miss', 'data', 'issu', 'let', 'see', 'number', 'song', '10', 'conclus', 'non', 'band', 'musician', '1', '3', 'song', 'per', 'halftim', 'show', 'import', 'note', 'durat', 'halftim', 'show', 'fix', 'roughli', '12', 'minut', 'song', 'per', 'perform', 'measur', 'mani', 'hit', 'song', 'jt', 'went', '2018', 'wow', '11', 'song', 'diana', 'ross', 'come', 'second', '10', 'medley', '1996', 'notebook', 'load', 'clean', 'explor', 'super', 'bowl', 'game', 'televis', 'halftim', 'show', 'data', 'visual', 'distribut', 'combin', 'point', 'point', 'differ', 'halftim', 'show', 'perform', 'use', 'histogram', 'use', 'line', 'plot', 'see', 'ad', 'cost', 'increas', 'lag', 'behind', 'viewership', 'increas', 'discov', 'blowout', 'appear', 'lead', 'drop', 'viewer', 'year', 'big', 'game', 'know', 'think', 'win', 'super', 'bowl', 'liii', 'updat', 'spoiler', 'alert']","['bowl', 'super', 'halftim', 'tv', 'musician', 'game', 'band', 'song', 'miss', 'viewer', 'march', 'watch', 'household', 'lost', 'blowout', 'broadcast', 'u', 'viewership', 'show', 'combin']","<div>
 <p>
  Whether or not you like football, the Super Bowl is a spectacle. There's drama in the form of blowouts, comebacks, and controversy in the games themselves. There are the ridiculously expensive ads, some hilarious, others gut-wrenching, thought-provoking, and weird. The half-time shows with the biggest musicians in the world, sometimes
  <a href=""https://youtu.be/ZD1QrIe--_Y?t=14"">
   riding giant mechanical tigers
  </a>
  or
  <a href=""https://youtu.be/mjrdywp5nyE?t=62"">
   leaping from the roof of the stadium
  </a>
  . And in this project, you will find out how some of the elements of this show interact with each other. You will answer questions like:
 </p>
 <ul>
  <li>
   What are the most extreme game outcomes?
  </li>
  <li>
   How does the game affect television viewership?
  </li>
  <li>
   How have viewership, TV ratings, and ad cost evolved over time?
  </li>
  <li>
   Who are the most prolific musicians in terms of halftime show performances?
  </li>
 </ul>
 <p>
  The dataset used in this project was scraped and polished from Wikipedia. It is made up of three CSV files, one with
  <a href=""https://en.wikipedia.org/wiki/List_of_Super_Bowl_champions"">
   game data
  </a>
  , one with
  <a href=""https://en.wikipedia.org/wiki/Super_Bowl_television_ratings"">
   TV data
  </a>
  , and one with
  <a href=""https://en.wikipedia.org/wiki/List_of_Super_Bowl_halftime_shows"">
   halftime musician data
  </a>
  for all 52 Super Bowls through 2018.
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/The%20Android%20App%20Market%20on%20Google%20Play,The Android App Market on Google Play,python,Lavanya Gupta,Machine Learning Engineer at PropTiger.com,https://www.datacamp.com/projects/619,"Load, clean, and visualize scraped Google Play Store data to understand the Android app market.
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/The%20Android%20App%20Market%20on%20Google%20Play/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/The%20Android%20App%20Market%20on%20Google%20Play/notebook.ipynb,"['go', 'plotly', 'plotly.graph_objs', 'warnings', 'seaborn', 'matplotlib.pyplot', 'pandas']","['.Category', '.offline', '.Rating', '.graph_objs', '.index', '.str', '.values', '.shape', '.pyplot', '.csv']","['.iplot()', '.nunique()', '.set_size_inches()', '.Box()', '.jointplot()', '.set_style()', '.stripplot()', '.set_title()', '.subplots()', '.sample()', '.Bar()', '.Histogram()', '.Layout()', '.init_notebook_mode()', '.filter()', '.filterwarnings()', '.duplicated()', '.drop_duplicates()', '.to_numeric()', '.boxplot()', '.query()', '.unique()', '.merge()', '.isin()', '.replace()', '.reset_index()', '.dropna()', '.sort_values()', '.info()', '.sum()', '.value_counts()', '.mean()', '.groupby()', '.read_csv()', '.head()']","['round()', 'dict()', 'len()', 'print()']","['1', 'googl', 'play', 'store', 'app', 'review', 'mobil', 'app', 'everywher', 'easi', 'creat', 'lucr', 'two', 'factor', 'app', 'develop', 'notebook', 'comprehens', 'analysi', 'android', 'app', 'market', 'compar', 'ten', 'thousand', 'app', 'googl', 'play', 'across', 'differ', 'categori', 'look', 'insight', 'data', 'devis', 'strategi', 'drive', 'growth', 'retent', 'let', 'take', 'look', 'data', 'consist', 'two', 'file', 'app', 'csv', 'contain', 'detail', 'applic', 'googl', 'play', '13', 'featur', 'describ', 'given', 'app', 'user_review', 'csv', 'contain', '100', 'review', 'app', 'help', 'first', 'text', 'review', 'pre', 'process', 'attribut', 'three', 'new', 'featur', 'sentiment', 'posit', 'neg', 'neutral', 'sentiment', 'polar', 'sentiment', 'subject', '2', 'data', 'clean', 'three', 'featur', 'work', 'frequent', 'henceforth', 'instal', 'size', 'price', 'care', 'glanc', 'dataset', 'reveal', 'column', 'mandat', 'data', 'clean', 'order', 'consum', 'code', 'write', 'later', 'specif', 'presenc', 'special', 'charact', 'letter', 'k', 'instal', 'size', 'price', 'column', 'make', 'convers', 'numer', 'data', 'type', 'difficult', 'let', 'clean', 'remov', 'convert', 'column', 'numer', 'type', '3', 'explor', 'app', 'categori', '1', 'billion', 'activ', 'user', '190', 'countri', 'around', 'world', 'googl', 'play', 'continu', 'import', 'distribut', 'platform', 'build', 'global', 'audienc', 'busi', 'get', 'app', 'front', 'user', 'import', 'make', 'quickli', 'easili', 'discover', 'googl', 'play', 'improv', 'overal', 'search', 'experi', 'googl', 'introduc', 'concept', 'group', 'app', 'categori', 'bring', 'us', 'follow', 'question', 'categori', 'highest', 'share', 'activ', 'app', 'market', 'specif', 'categori', 'domin', 'market', 'categori', 'fewest', 'number', 'app', 'see', '33', 'uniqu', 'app', 'categori', 'present', 'dataset', 'famili', 'game', 'app', 'highest', 'market', 'preval', 'interestingli', 'tool', 'busi', 'medic', 'app', 'also', 'top', '4', 'distribut', 'app', 'rate', 'wit', 'market', 'share', 'categori', 'app', 'let', 'see', 'app', 'perform', 'averag', 'app', 'rate', 'scale', '1', '5', 'impact', 'discover', 'convers', 'app', 'well', 'compani', 'overal', 'brand', 'imag', 'rate', 'key', 'perform', 'indic', 'app', 'research', 'found', 'averag', 'volum', 'rate', 'across', 'app', 'categori', '4', '17', 'histogram', 'plot', 'skew', 'right', 'indic', 'major', 'app', 'highli', 'rate', 'except', 'low', 'rate', 'app', '5', 'size', 'price', 'app', 'let', 'examin', 'app', 'size', 'app', 'price', 'size', 'mobil', 'app', 'larg', 'may', 'difficult', 'expens', 'user', 'download', 'lengthi', 'download', 'time', 'could', 'turn', 'user', 'even', 'experi', 'mobil', 'app', 'plu', 'user', 'devic', 'finit', 'amount', 'disk', 'space', 'price', 'user', 'expect', 'app', 'free', 'inexpens', 'problem', 'compound', 'develop', 'world', 'part', 'target', 'market', 'especi', 'due', 'internet', 'speed', 'earn', 'power', 'exchang', 'rate', 'effect', 'come', 'strategi', 'size', 'price', 'app', 'size', 'app', 'affect', 'rate', 'user', 'realli', 'care', 'system', 'heavi', 'app', 'prefer', 'light', 'weight', 'app', 'price', 'app', 'affect', 'rate', 'user', 'alway', 'prefer', 'free', 'app', 'paid', 'app', 'find', 'major', 'top', 'rate', 'app', 'rate', '4', 'rang', '2', 'mb', '20', 'mb', 'also', 'find', 'vast', 'major', 'app', 'price', '10', '6', 'relat', 'app', 'categori', 'app', 'price', 'come', 'hard', 'part', 'compani', 'develop', 'suppos', 'make', 'end', 'meet', 'monet', 'strategi', 'compani', 'use', 'maxim', 'profit', 'cost', 'app', 'larg', 'base', 'featur', 'complex', 'platform', 'mani', 'factor', 'consid', 'select', 'right', 'price', 'strategi', 'mobil', 'app', 'import', 'consid', 'willing', 'custom', 'pay', 'app', 'wrong', 'price', 'could', 'break', 'deal', 'download', 'even', 'happen', 'potenti', 'custom', 'could', 'turn', 'perceiv', 'shock', 'cost', 'might', 'delet', 'app', 'download', 'receiv', 'mani', 'ad', 'simpli', 'get', 'money', 'worth', 'differ', 'categori', 'demand', 'differ', 'price', 'rang', 'app', 'simpl', 'use', 'daili', 'like', 'calcul', 'app', 'probabl', 'kept', 'free', 'howev', 'would', 'make', 'sens', 'charg', 'highli', 'special', 'medic', 'app', 'diagnos', 'diabet', 'patient', 'see', 'medic', 'famili', 'app', 'expens', 'medic', 'app', 'extend', 'even', '80', 'game', 'app', 'reason', 'price', '20', '7', 'filter', 'junk', 'app', 'look', 'like', 'bunch', 'realli', 'expens', 'app', 'junk', 'app', 'app', 'realli', 'purpos', 'app', 'develop', 'may', 'creat', 'app', 'call', 'rich', 'premium', 'expens', 'app', 'h', 'joke', 'test', 'app', 'develop', 'skill', 'develop', 'even', 'malici', 'intent', 'tri', 'make', 'money', 'hope', 'peopl', 'accident', 'click', 'purchas', 'app', 'store', 'let', 'filter', 'junk', 'app', 'visual', 'distribut', 'app', '20', 'becom', 'clearer', '8', 'popular', 'paid', 'app', 'vs', 'free', 'app', 'app', 'play', 'store', 'today', 'five', 'type', 'price', 'strategi', 'free', 'freemium', 'paid', 'paymium', 'subscript', 'let', 'focu', 'free', 'paid', 'app', 'characterist', 'free', 'app', 'free', 'download', 'main', 'sourc', 'incom', 'often', 'come', 'advertis', 'often', 'creat', 'compani', 'product', 'app', 'serv', 'extens', 'product', 'serv', 'tool', 'custom', 'retent', 'commun', 'custom', 'servic', 'characterist', 'paid', 'app', 'user', 'ask', 'pay', 'app', 'download', 'use', 'user', 'realli', 'get', 'feel', 'app', 'buy', 'paid', 'app', 'instal', 'much', 'free', 'app', 'turn', 'paid', 'app', 'rel', 'lower', 'number', 'instal', 'free', 'app', 'though', 'differ', 'stark', 'would', 'expect', '9', 'sentiment', 'analysi', 'user', 'review', 'mine', 'user', 'review', 'data', 'determin', 'peopl', 'feel', 'product', 'brand', 'servic', 'done', 'use', 'techniqu', 'call', 'sentiment', 'analysi', 'user', 'review', 'app', 'analyz', 'identifi', 'mood', 'posit', 'neg', 'neutral', 'app', 'exampl', 'posit', 'word', 'app', 'review', 'might', 'includ', 'word', 'amaz', 'friendli', 'good', 'great', 'love', 'neg', 'word', 'might', 'word', 'like', 'malwar', 'hate', 'problem', 'refund', 'incompet', 'plot', 'sentiment', 'polar', 'score', 'user', 'review', 'paid', 'free', 'app', 'observ', 'free', 'app', 'receiv', 'lot', 'harsh', 'comment', 'indic', 'outlier', 'neg', 'axi', 'review', 'paid', 'app', 'appear', 'never', 'extrem', 'neg', 'may', 'indic', 'someth', 'app', 'qualiti', 'e', 'paid', 'app', 'higher', 'qualiti', 'free', 'app', 'averag', 'median', 'polar', 'score', 'paid', 'app', 'littl', 'higher', 'free', 'app', 'therebi', 'sync', 'previou', 'observ', 'notebook', 'analyz', 'ten', 'thousand', 'app', 'googl', 'play', 'store', 'use', 'find', 'inform', 'decis', 'ever', 'wish', 'creat', 'app']","['app', 'paid', 'user', 'free', 'price', 'review', 'sentiment', 'categori', 'instal', 'mobil', 'strategi', 'rate', 'googl', 'play', 'market', 'expens', 'size', 'junk', 'download', 'medic']","<div>
 <p>
  Mobile apps are everywhere. They are easy to create and can be lucrative. Because of these two factors, more and more apps are being developed. In this project, you will do a comprehensive analysis of the Android app market by comparing over ten thousand apps in Google Play across different categories. You'll look for insights in the data to devise strategies to drive growth and retention.
 </p>
 <p>
  The
  <a href=""https://www.kaggle.com/lava18/google-play-store-apps"">
   data
  </a>
  for this project was scraped from the
  <a href=""https://play.google.com/store/apps?hl=en"">
   Google Play
  </a>
  website. While there are many popular datasets for Apple App Store, there aren't many for Google Play apps, which is partially due to the increased difficulty in scraping the latter as compared to the former. The data files are as follows:
 </p>
 <ul>
  <li>
   <code>
    apps.csv
   </code>
   : contains all the details of the applications on Google Play. There are 13 features that describe a given app.
  </li>
  <li>
   <code>
    user_reviews.csv
   </code>
   : contains 100 reviews for each app,
   <a href=""https://www.androidpolice.com/2019/01/21/google-play-stores-redesigned-ratings-and-reviews-section-lets-you-easily-filter-by-star-rating/"">
    most helpful first
   </a>
   . The text in each review has been pre-processed and attributed with three new features: Sentiment (Positive, Negative or Neutral), Sentiment Polarity and Sentiment Subjectivity.
  </li>
 </ul>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/The%20GitHub%20History%20of%20the%20Scala%20Language,The GitHub History of the Scala Language,python,Anita Sarma,Associate Professor at Oregon State University,https://www.datacamp.com/projects/163,"Find the true Scala experts by exploring its development history in Git and GitHub.
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/The%20GitHub%20History%20of%20the%20Scala%20Language/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/The%20GitHub%20History%20of%20the%20Scala%20Language/notebook.ipynb,['pandas'],"['.scala', '.dtypes', '.dt', '.index', '.year', '.plot', '.date', '.csv']","['.merge()', '.pivot_table()', '.set_xlabel()', '.count()', '.set_ylabel()', '.isin()', '.groupby()', '.reset_index()', '.strftime()', '.bar()', '.startswith()', '.nlargest()', '.to_datetime()', '.agg()', '.head()', '.sort_values()', '.sort_index()', '.apply()', '.split()', '.hist()', '.append()', '.plot()', '.read_csv()']","['set()', 'january_only()', 'len()', 'print()']","['1', 'scala', 'real', 'world', 'project', 'repositori', 'data', 'almost', '30k', 'commit', 'histori', 'span', 'ten', 'year', 'scala', 'matur', 'program', 'languag', 'gener', 'purpos', 'program', 'languag', 'recent', 'becom', 'anoth', 'promin', 'languag', 'data', 'scientist', 'scala', 'also', 'open', 'sourc', 'project', 'open', 'sourc', 'project', 'advantag', 'entir', 'develop', 'histori', 'made', 'chang', 'chang', 'code', 'review', 'etc', 'publicli', 'avail', 'go', 'read', 'clean', 'visual', 'real', 'world', 'project', 'repositori', 'scala', 'span', 'data', 'version', 'control', 'system', 'git', 'well', 'project', 'host', 'site', 'github', 'find', 'influenc', 'develop', 'expert', 'dataset', 'use', 'previous', 'mine', 'extract', 'github', 'compris', 'three', 'file', 'pulls_2011', '2013', 'csv', 'contain', 'basic', 'inform', 'pull', 'request', 'span', 'end', '2011', 'includ', '2014', 'pulls_2014', '2018', 'csv', 'contain', 'ident', 'inform', 'span', '2014', '2018', 'pull_fil', 'csv', 'contain', 'file', 'modifi', 'pull', 'request', '2', 'prepar', 'clean', 'data', 'first', 'need', 'combin', 'data', 'two', 'separ', 'pull', 'datafram', 'next', 'raw', 'data', 'extract', 'github', 'contain', 'date', 'iso8601', 'format', 'howev', 'panda', 'import', 'regular', 'string', 'make', 'analysi', 'easier', 'need', 'convert', 'string', 'python', 'datetim', 'object', 'datetim', 'object', 'import', 'properti', 'compar', 'sort', 'pull', 'request', 'time', 'utc', 'also', 'known', 'coordin', 'univers', 'time', 'commit', 'time', 'howev', 'local', 'time', 'author', 'time', 'zone', 'inform', 'number', 'hour', 'differ', 'utc', 'make', 'comparison', 'easi', 'convert', 'time', 'utc', '3', 'merg', 'datafram', 'data', 'extract', 'come', 'two', 'separ', 'file', 'merg', 'two', 'datafram', 'make', 'easier', 'us', 'analyz', 'data', 'futur', 'task', '4', 'project', 'still', 'activ', 'maintain', 'activ', 'open', 'sourc', 'project', 'consist', 'project', 'might', 'activ', 'mani', 'year', 'initi', 'releas', 'other', 'slowli', 'taper', 'oblivion', 'commit', 'contribut', 'project', 'import', 'understand', 'state', 'project', 'develop', 'go', 'steadili', 'drop', 'project', 'abandon', 'altogeth', 'data', 'use', 'project', 'collect', 'januari', '2018', 'interest', 'evolut', 'number', 'contribut', 'date', 'scala', 'plot', 'chart', 'project', 'activ', 'calcul', 'number', 'pull', 'request', 'submit', 'calendar', 'month', 'project', 'lifetim', 'plot', 'number', 'see', 'trend', 'contribut', '5', 'camaraderi', 'project', 'organiz', 'structur', 'vari', 'one', 'project', 'anoth', 'influenc', 'success', 'contributor', 'project', 'small', 'commun', 'might', 'best', 'one', 'start', 'work', 'small', 'commun', 'might', 'indic', 'high', 'barrier', 'entri', 'caus', 'sever', 'factor', 'includ', 'commun', 'reluct', 'accept', 'pull', 'request', 'outsid', 'code', 'base', 'hard', 'work', 'etc', 'howev', 'larg', 'commun', 'serv', 'indic', 'project', 'regularli', 'accept', 'pull', 'request', 'new', 'contributor', 'project', 'would', 'good', 'place', 'start', 'order', 'evalu', 'dynam', 'commun', 'plot', 'histogram', 'number', 'pull', 'request', 'submit', 'user', 'distribut', 'show', 'peopl', 'contribut', 'small', 'number', 'pull', 'request', 'use', 'indic', 'project', 'welcom', 'new', 'contributor', '6', 'file', 'chang', 'last', 'ten', 'pull', 'request', 'choos', 'right', 'place', 'make', 'contribut', 'import', 'choos', 'project', 'contribut', 'part', 'code', 'might', 'stabl', 'might', 'dead', 'contribut', 'might', 'impact', 'therefor', 'import', 'understand', 'part', 'system', 'recent', 'chang', 'allow', 'us', 'pinpoint', 'hot', 'area', 'code', 'activ', 'happen', 'focus', 'part', 'might', 'effect', 'use', 'time', '7', 'made', 'pull', 'request', 'given', 'file', 'contribut', 'project', 'might', 'need', 'guidanc', 'might', 'find', 'need', 'inform', 'regard', 'codebas', 'import', 'direct', 'question', 'right', 'person', 'contributor', 'open', 'sourc', 'project', 'gener', 'day', 'job', 'time', 'limit', 'import', 'address', 'question', 'right', 'peopl', 'one', 'way', 'identifi', 'right', 'target', 'inquiri', 'use', 'contribut', 'histori', 'identifi', 'src', 'compil', 'scala', 'reflect', 'reifi', 'phase', 'calcul', 'scala', 'recent', 'chang', 'interest', 'top', '3', 'develop', 'chang', 'file', 'develop', 'one', 'like', 'best', 'understand', 'code', '8', 'made', 'last', 'ten', 'pull', 'request', 'given', 'file', 'open', 'sourc', 'project', 'suffer', 'fluctuat', 'membership', 'make', 'problem', 'find', 'right', 'person', 'challeng', 'person', 'knowledg', 'still', 'involv', 'project', 'person', 'contribut', 'lot', 'past', 'might', 'longer', 'avail', 'will', 'help', 'get', 'better', 'understand', 'need', 'investig', 'recent', 'histori', 'particular', 'part', 'system', 'like', 'previou', 'task', 'look', 'histori', 'src', 'compil', 'scala', 'reflect', 'reifi', 'phase', 'calcul', 'scala', '9', 'pull', 'request', 'two', 'special', 'develop', 'identifi', 'two', 'potenti', 'contact', 'project', 'need', 'find', 'person', 'involv', 'project', 'recent', 'time', 'person', 'like', 'answer', 'question', 'calendar', 'year', 'interest', 'understand', 'number', 'pull', 'request', 'author', 'submit', 'give', 'us', 'high', 'level', 'imag', 'contribut', 'trend', 'project', '10', 'visual', 'contribut', 'develop', 'mention', 'import', 'make', 'distinct', 'global', 'expertis', 'contribut', 'level', 'contribut', 'level', 'granular', 'level', 'file', 'submodul', 'etc', 'case', 'want', 'see', 'two', 'develop', 'interest', 'experi', 'code', 'given', 'file', 'measur', 'experi', 'number', 'pull', 'request', 'submit', 'affect', 'file', 'recent', 'pull', 'request', 'submit']","['pull', 'project', 'request', 'scala', 'contribut', 'submit', 'recent', 'span', 'develop', 'utc', 'person', 'contributor', 'commun', 'commit', 'github', 'code', 'histori', 'activ', 'calendar', 'reflect']","<div>
 <p>
  Open source projects contain entire development histories, such as who made changes, the changes themselves, and code reviews. 
In this project, you'll be challenged to read in, clean
up, and visualize the real-world project repository of 
Scala that spans data from a version control system (Git)
as well as a project hosting site (GitHub). With almost
30,000 commits and a history spanning over ten years, Scala
is a mature language. You will find out who has had the
most influence on its development and who are the experts.
 </p>
 <p>
  The dataset includes the project history of
  <a href=""http://www.scala-lang.org"">
   Scala
  </a>
  retrieved from Git and
GitHub as a set of CSV files.
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/The%20Hottest%20Topics%20in%20Machine%20Learning,The Hottest Topics in Machine Learning,python,Lars Hulstaert,Data Scientist at Microsoft,https://www.datacamp.com/projects/158,"Use Natural Language Processing on NIPS papers to uncover the trendiest topics in machine learning research.
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/The%20Hottest%20Topics%20in%20Machine%20Learning/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/The%20Hottest%20Topics%20in%20Machine%20Learning/notebook.ipynb,"['CountVectorizer', 'LDA', 'LatentDirichletAllocation', 'wordcloud', 're', 'sklearn.decomposition', 'warnings', 'sklearn.feature_extraction.text', 'numpy', 'matplotlib.pyplot', 'pandas']","['.components_', '.gz', '.decomposition', '.feature_extraction', '.text', '.str', '.pyplot', '.plot', '.csv']","['.get_feature_names()', '.join()', '.WordCloud()', '.argsort()', '.generate()', '.map()', '.simplefilter()', '.to_image()', '.toarray()', '.xticks()', '.bar()', '.size()', '.sub()', '.zeros()', '.arange()', '.drop()', '.lower()', '.xlabel()', '.fit_transform()', '.fit()', '.ylabel()', '.title()', '.show()', '.count()', '.head()', '.groupby()', '.read_csv()']","['plot_10_most_common_words()', 'print_topics()', 'LDA()', 'CountVectorizer()', 'sorted()', 'enumerate()', 'zip()', 'len()', 'print()']","['1', 'load', 'nip', 'paper', 'nip', 'confer', 'neural', 'inform', 'process', 'system', 'one', 'prestigi', 'yearli', 'event', 'machin', 'learn', 'commun', 'nip', 'confer', 'larg', 'number', 'research', 'paper', 'publish', '50', '000', 'pdf', 'file', 'automat', 'download', 'process', 'obtain', 'dataset', 'variou', 'machin', 'learn', 'techniqu', 'nip', 'paper', 'store', 'dataset', 'paper', 'csv', 'csv', 'file', 'contain', 'inform', 'differ', 'nip', 'paper', 'publish', '1987', '2017', '30', 'year', 'paper', 'discuss', 'wide', 'varieti', 'topic', 'machin', 'learn', 'neural', 'network', 'optim', 'method', 'mani', 'first', 'explor', 'csv', 'file', 'determin', 'type', 'data', 'use', 'analysi', 'structur', 'research', 'paper', 'typic', 'consist', 'titl', 'abstract', 'main', 'text', 'data', 'figur', 'tabl', 'extract', 'pdf', 'file', 'paper', 'discuss', 'novel', 'techniqu', 'improv', 'analysi', 'focu', 'analyz', 'paper', 'natur', 'languag', 'process', 'method', '2', 'prepar', 'data', 'analysi', 'analysi', 'paper', 'interest', 'text', 'data', 'associ', 'paper', 'well', 'year', 'paper', 'publish', 'analyz', 'text', 'data', 'use', 'natur', 'languag', 'process', 'sinc', 'file', 'contain', 'metadata', 'id', 'filenam', 'necessari', 'remov', 'column', 'contain', 'use', 'text', 'inform', '3', 'plot', 'machin', 'learn', 'evolv', 'time', 'order', 'understand', 'machin', 'learn', 'field', 'recent', 'explod', 'popular', 'begin', 'visual', 'number', 'public', 'per', 'year', 'look', 'number', 'publish', 'paper', 'per', 'year', 'understand', 'extent', 'machin', 'learn', 'revolut', 'typic', 'signific', 'increas', 'popular', 'attribut', 'larg', 'amount', 'comput', 'power', 'data', 'improv', 'algorithm', '4', 'preprocess', 'text', 'data', 'let', 'analyz', 'titl', 'differ', 'paper', 'identifi', 'machin', 'learn', 'trend', 'first', 'perform', 'simpl', 'preprocess', 'titl', 'order', 'make', 'amen', 'analysi', 'use', 'regular', 'express', 'remov', 'punctuat', 'titl', 'perform', 'lowercas', 'print', 'titl', 'first', 'row', 'appli', 'modif', '5', 'word', 'cloud', 'visual', 'preprocess', 'text', 'data', 'order', 'verifi', 'whether', 'preprocess', 'happen', 'correctli', 'make', 'word', 'cloud', 'titl', 'research', 'paper', 'give', 'us', 'visual', 'represent', 'common', 'word', 'visualis', 'key', 'understand', 'whether', 'still', 'right', 'track', 'addit', 'allow', 'us', 'verifi', 'whether', 'need', 'addit', 'preprocess', 'analyz', 'text', 'data', 'python', 'massiv', 'number', 'open', 'librari', 'instead', 'tri', 'develop', 'method', 'creat', 'word', 'cloud', 'use', 'andrea', 'mueller', 'wordcloud', 'librari', '6', 'prepar', 'text', 'lda', 'analysi', 'main', 'text', 'analysi', 'method', 'use', 'latent', 'dirichlet', 'alloc', 'lda', 'lda', 'abl', 'perform', 'topic', 'detect', 'larg', 'document', 'set', 'determin', 'main', 'topic', 'larg', 'unlabel', 'set', 'text', 'topic', 'collect', 'word', 'tend', 'co', 'occur', 'often', 'hypothesi', 'lda', 'might', 'abl', 'clarifi', 'differ', 'topic', 'research', 'titl', 'topic', 'use', 'start', 'point', 'analysi', 'lda', 'work', 'directli', 'text', 'data', 'first', 'necessari', 'convert', 'document', 'simpl', 'vector', 'represent', 'represent', 'use', 'lda', 'determin', 'topic', 'entri', 'document', 'vector', 'correspond', 'number', 'time', 'word', 'occur', 'document', 'conclus', 'convert', 'list', 'titl', 'list', 'vector', 'length', 'equal', 'vocabulari', 'exampl', 'analyz', 'machin', 'learn', 'trend', 'neural', 'network', 'would', 'transform', '1', '0', '1', '1', '0', 'plot', '10', 'common', 'word', 'base', 'outcom', 'oper', 'list', 'document', 'vector', 'check', 'word', 'also', 'occur', 'word', 'cloud', '7', 'analys', 'trend', 'lda', 'final', 'research', 'titl', 'analyz', 'use', 'lda', 'note', 'order', 'process', 'new', 'set', 'document', 'e', 'g', 'news', 'articl', 'similar', 'set', 'step', 'requir', 'preprocess', 'data', 'flow', 'construct', 'thu', 'easili', 'export', 'new', 'text', 'dataset', 'paramet', 'tweak', 'number', 'topic', 'lda', 'algorithm', 'typic', 'one', 'would', 'calcul', 'perplex', 'metric', 'determin', 'number', 'topic', 'best', 'iter', 'differ', 'amount', 'topic', 'lowest', 'perplex', 'found', 'let', 'play', 'around', 'differ', 'number', 'topic', 'distinguish', 'topic', 'neural', 'network', 'reinforc', 'learn', 'kernel', 'method', 'gaussian', 'process', 'etc', '8', 'futur', 'machin', 'learn', 'machin', 'learn', 'becom', 'increasingli', 'popular', 'past', 'year', 'number', 'nip', 'confer', 'paper', 'risen', 'exponenti', 'peopl', 'continu', 'look', 'way', 'incorpor', 'machin', 'learn', 'product', 'servic', 'although', 'analysi', 'focus', 'analyz', 'machin', 'learn', 'trend', 'research', 'lot', 'techniqu', 'rapidli', 'adopt', 'industri', 'follow', 'latest', 'machin', 'learn', 'trend', 'critic', 'skill', 'data', 'scientist', 'recommend', 'continu', 'keep', 'learn', 'go', 'blog', 'tutori', 'cours']","['paper', 'topic', 'lda', 'nip', 'machin', 'titl', 'learn', 'cloud', 'neural', 'text', 'confer', 'preprocess', 'research', 'publish', 'network', 'typic', 'represent', 'pdf', 'perplex', 'word']","<div>
 <p>
  Neural Information Processing Systems (NIPS) is one of the top machine learning conferences in the world where groundbreaking work is published. 
In this Project, you will analyze a large collection of NIPS research papers from the past decade to discover
the latest trends in machine learning. The techniques used here to handle large amounts of data can be applied 
to other text datasets as well.
 </p>
 <p>
  Familiarity with Python and pandas is required to complete this Project, as well as experience 
with Natural Language Processing in Python (
  <code>
   sklearn
  </code>
  specifically).
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Up%20and%20Down%20With%20the%20Kardashians,Up and Down With the Kardashians,python,David Venturi,Curriculum Manager at DataCamp,https://www.datacamp.com/projects/538,"Plot Google Trends data to find the most famous Kardashian/Jenner sister. Is it Kim? Kendall? Kylie?
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Up%20and%20Down%20With%20the%20Kardashians/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Up%20and%20Down%20With%20the%20Kardashians/notebook.ipynb,['pandas'],"['.columns', '.str', '.csv']","['.info()', '.rolling()', '.to_string()', '.mean()', '.plot()', '.to_numeric()', '.set_index()', '.replace()', '.head()', '.to_datetime()', '.read_csv()']",[],"['1', 'sister', 'googl', 'trend', 'fan', 'hater', 'kardashian', 'jenner', 'polar', 'famili', 'intrigu', 'market', 'prowess', 'say', 'stand', 'great', 'hype', 'game', 'everyth', 'touch', 'turn', 'content', 'sister', 'particular', 'past', 'decad', 'especi', 'product', 'regard', 'let', 'get', 'fact', 'straight', 'consid', 'sister', 'follow', 'daughter', 'kri', 'jenner', 'three', 'first', 'marriag', 'lawyer', 'robert', 'kardashian', 'kourtney', 'kardashian', 'daughter', 'robert', 'kardashian', 'born', '1979', 'kim', 'kardashian', 'daughter', 'robert', 'kardashian', 'born', '1980', 'khloé', 'kardashian', 'daughter', 'robert', 'kardashian', 'born', '1984', 'two', 'second', 'marriag', 'olymp', 'gold', 'medal', 'win', 'decathlet', 'caitlyn', 'jenner', 'formerli', 'bruce', 'kendal', 'jenner', 'daughter', 'caitlyn', 'jenner', 'born', '1995', 'kyli', 'jenner', 'daughter', 'caitlyn', 'jenner', 'born', '1997', 'famili', 'tree', 'confus', 'explain', 'explor', 'data', 'underneath', 'hype', 'use', 'search', 'interest', 'data', 'googl', 'trend', 'recreat', 'googl', 'trend', 'plot', 'visual', 'up', 'down', 'time', 'make', 'custom', 'plot', 'answer', 'big', 'question', 'kim', 'even', 'famou', 'sister', 'anymor', 'first', 'let', 'load', 'inspect', 'googl', 'trend', 'data', 'download', 'csv', 'form', 'queri', 'paramet', 'sister', 'worldwid', 'search', 'data', '2007', 'present', 'day', '2007', 'year', 'kim', 'becam', 'activ', 'accord', 'wikipedia', '2', 'better', 'kolumn', 'name', 'column', 'month', 'sinc', 'januari', '2007', 'column', 'worldwid', 'search', 'interest', 'sister', 'month', 'way', 'googl', 'defin', 'valu', 'search', 'interest', 'number', 'repres', 'search', 'interest', 'rel', 'highest', 'point', 'chart', 'given', 'region', 'time', 'valu', '100', 'peak', 'popular', 'term', 'valu', '50', 'mean', 'term', 'half', 'popular', 'score', '0', 'mean', 'enough', 'data', 'term', 'okay', 'great', 'googl', 'make', 'data', 'easili', 'analyz', 'us', 'see', 'thing', 'let', 'column', 'name', 'first', 'column', 'name', 'kim', 'kardashian', 'worldwid', 'usabl', 'code', 'purpos', 'let', 'shorten', 'access', 'valu', 'better', 'might', 'well', 'standard', 'column', 'format', 'like', 'lowercas', 'short', 'column', 'name', '3', 'peski', 'data', 'type', 'better', 'need', 'scroll', 'eye', 'across', 'tabl', 'read', 'valu', 'anymor', 'sinc', 'much', 'less', 'wide', 'see', 'five', 'column', 'start', 'letter', 'k', 'aesthet', 'call', 'kolumn', 'bad', 'joke', 'next', 'thing', 'see', 'go', 'issu', 'sign', 'score', '0', 'mean', 'enough', 'data', 'term', '1', 'must', 'mean', '0', '1', 'googl', 'want', 'give', 'us', 'fraction', 'googl', 'trend', 'com', 'whatev', 'reason', 'fine', 'sign', 'mean', 'abl', 'analyz', 'visual', 'data', 'right', 'away', 'column', 'valu', 'go', 'repres', 'number', 'data', 'structur', 'let', 'confirm', 'inspect', 'data', 'type', '4', 'object', 'integ', 'ye', 'okay', 'khloe', 'kourtney', 'kendal', 'column', 'integ', 'like', 'kim', 'kyli', 'column', 'sign', 'indic', 'search', 'interest', 'valu', 'zero', 'one', 'earli', 'hint', 'hierarchi', 'sister', 'popular', 'see', 'shortli', 'need', 'remov', 'peski', 'sign', 'chang', 'type', 'column', 'integ', '5', 'object', 'datetim', 'okay', 'great', 'sign', 'sister', 'column', 'integ', 'type', 'let', 'convert', 'month', 'column', 'type', 'object', 'datetim', 'make', 'date', 'data', 'access', '6', 'set', 'month', 'index', 'final', 'let', 'set', 'month', 'column', 'index', 'wrap', 'data', 'clean', 'month', 'index', 'rather', 'zero', 'base', 'row', 'number', 'allow', 'us', 'write', 'shorter', 'line', 'code', 'creat', 'plot', 'month', 'repres', 'x', 'axi', '7', 'earli', 'kim', 'hype', 'okay', 'data', 'readi', 'plot', 'clean', 'data', 'need', 'one', 'line', 'code', 'thirteen', 'charact', 'remak', 'googl', 'trend', 'chart', 'plu', 'anoth', 'line', 'make', 'plot', 'show', 'notebook', '8', 'kyli', 'rise', 'oh', 'much', 'make', 'sens', 'kim', 'sharp', 'rise', '2007', 'begin', 'keep', 'kardashian', 'among', 'thing', 'signific', 'search', 'interest', 'four', 'sister', 'mid', '2009', 'kourtney', 'khloé', 'launch', 'realiti', 'televis', 'seri', 'kourtney', 'khloé', 'take', 'miami', 'kim', 'rise', 'famou', 'liter', 'famou', 'god', '2011', 'cosmopolitan', 'articl', 'cover', 'timelin', 'includ', 'launch', 'music', 'video', 'fragranc', 'iphon', 'android', 'game', 'anoth', 'televis', 'seri', 'join', 'instagram', 'kim', 'ridicul', 'spike', 'decemb', '2014', 'pose', 'nake', 'cover', 'paper', 'magazin', 'bid', 'break', 'internet', 'curiou', 'thing', 'start', 'happen', 'bid', 'well', 'let', 'zoom', '9', 'smooth', 'fluctuat', 'roll', 'mean', 'look', 'like', 'suspicion', 'may', 'true', 'kim', 'alway', 'search', 'kardashian', 'jenner', 'sister', 'sinc', 'late', '2016', 'variou', 'month', 'kyli', 'overtak', 'kim', 'two', 'big', 'spike', 'smash', 'kim', 'search', 'interest', 'septemb', '2017', 'report', 'kyli', 'expect', 'first', 'child', 'rapper', 'travi', 'scott', 'februari', '2018', 'gave', 'birth', 'daughter', 'stormi', 'webster', 'continu', 'success', 'kyli', 'cosmet', 'kept', 'news', 'mention', 'make', 'youngest', 'self', 'made', 'billionair', 'ever', 'accord', 'forb', 'fluctuat', 'descript', 'realli', 'help', 'us', 'answer', 'question', 'kim', 'even', 'famou', 'sister', 'anymor', 'use', 'roll', 'mean', 'smooth', 'short', 'term', 'fluctuat', 'time', 'seri', 'data', 'highlight', 'long', 'term', 'trend', 'let', 'make', 'window', 'twelv', 'month', 'k', 'one', 'year', '10', 'famou', 'kardashian', 'jenner', 'whoa', 'okay', 'metric', 'kim', 'still', 'famou', 'sister', 'despit', 'kyli', 'close', 'nearli', 'take', 'crown', 'honestli', 'biggest', 'takeaway', 'whole', 'exercis', 'might', 'kendal', 'show', 'much', 'make', 'sens', 'though', 'despit', 'wildli', 'success', 'model', 'career', 'call', 'normal', 'one', 'famili', 'tend', 'shi', 'away', 'dramat', 'controversi', 'part', 'media', 'limelight', 'gener', 'oh', 'mani', 'click', 'let', 'end', 'analysi', 'one', 'last', 'plot', 'plot', 'pun', 'kardashian', 'sister', 'jenner', 'sister', 'see', 'famili', 'line', 'popular', 'use', 'averag', 'search', 'interest', 'make', 'thing', 'fair', 'e', 'total', 'search', 'interest', 'divid', 'number', 'sister', 'famili', 'line', 'answer', 'sinc', '2015', 'toss', 'futur', 'famili', 'penchant', 'big', 'event', 'know']","['sister', 'kim', 'kardashian', 'jenner', 'kyli', 'daughter', 'search', 'month', 'famili', 'googl', '2007', 'integ', 'kourtney', 'robert', 'famou', 'sign', 'okay', 'anymor', 'caitlyn', 'hype']","<div>
 <p>
  While I'm not a fan nor a hater of the Kardashians and Jenners, the polarizing family intrigues me. Why? Their marketing prowess. Say what you will about them and what they stand for, they are great at the hype game. Everything they touch turns to content.
 </p>
 <p>
  In this Project, you will explore the data underneath the hype in the form of search interest data from Google Trends. You'll recreate the Google Trends plot to visualize their ups and downs over time, then make a few custom plots of your own. And you'll answer the big question:
  <strong>
   is Kim even the most famous sister anymore?
  </strong>
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Who%20Is%20Drunk%20and%20When%20in%20Ames%2C%20Iowa%3F,"Who Is Drunk and When in Ames, Iowa?",python,Samantha Tyner,Postdoctoral Research Associate at Iowa State University,https://www.datacamp.com/projects/475,"Flex your data manipulation muscles on breath alcohol test data from Ames, Iowa, USA.
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Who%20Is%20Drunk%20and%20When%20in%20Ames%2C%20Iowa%3F/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Who%20Is%20Drunk%20and%20When%20in%20Ames%2C%20Iowa%3F/notebook.ipynb,['pandas'],"['.08', '.bar', '.week', '.shape', '.plot', '.dt', '.csv']","['.size()', '.value_counts()', '.bar()', '.assign()', '.unstack()', '.groupby()', '.boxplot()', '.dropna()', '.to_datetime()', '.sort_values()', '.count()', '.plot()', '.head()', '.read_csv()']",['print()'],"['1', 'breath', 'alcohol', 'test', 'ame', 'iowa', 'usa', 'ame', 'iowa', 'usa', 'home', 'iowa', 'state', 'univers', 'land', 'grant', 'univers', '36', '000', 'student', 'comparison', 'citi', 'ame', 'iowa', '65', '000', 'resid', 'colleg', 'town', 'ame', 'fair', 'share', 'alcohol', 'relat', 'incid', 'exampl', 'googl', 'veishea', 'riot', '2014', 'take', 'look', 'breath', 'alcohol', 'test', 'data', 'ame', 'publish', 'state', 'iowa', 'data', 'file', 'breath_alcohol_am', 'csv', 'contain', '1', '556', 'read', 'breath', 'alcohol', 'test', 'administ', 'ame', 'iowa', 'state', 'univers', 'polic', 'depart', 'januari', '2013', 'decemb', '2017', 'column', 'data', 'set', 'year', 'month', 'day', 'hour', 'locat', 'gender', 'res1', 'res2', '2', 'busiest', 'polic', 'depart', 'ame', 'two', 'polic', 'depart', 'data', 'set', 'iowa', 'state', 'univers', 'polic', 'depart', 'ame', 'polic', 'depart', 'one', 'administ', 'breathalyz', 'test', '3', 'noth', 'good', 'happen', '2am', 'know', 'noth', 'good', 'happen', '2am', 'thu', 'inevit', 'time', 'day', 'breath', 'alcohol', 'test', 'especi', 'colleg', 'town', 'like', 'ame', 'least', 'common', 'hour', 'day', 'least', 'breathalyz', 'test', '4', 'breathalyz', 'test', 'month', 'discov', 'time', 'day', 'common', 'breath', 'alcohol', 'test', 'determin', 'time', 'year', 'breathalyz', 'test', 'month', 'record', 'test', '5', 'colleg', 'think', 'bing', 'drink', 'colleg', 'town', 'america', 'usual', 'think', 'someth', 'like', 'imag', 'left', 'one', 'might', 'suspect', 'breath', 'alcohol', 'test', 'given', 'men', 'often', 'women', 'men', 'drink', 'women', '6', 'legal', 'limit', 'usa', 'illeg', 'drive', 'blood', 'alcohol', 'concentr', 'bac', '0', '08', 'case', '50', 'state', 'assum', 'everyon', 'test', 'data', 'drive', 'though', 'way', 'know', 'data', 'either', 'result', 'res1', 'res2', '0', '08', 'person', 'would', 'charg', 'dui', 'drive', 'influenc', '7', 'breathalyz', 'test', 'pattern', 'time', 'previous', 'saw', '2am', 'common', 'time', 'day', 'breathalyz', 'test', 'administ', 'august', 'common', 'month', 'year', 'breathalyz', 'test', 'look', 'week', 'year', 'time', '8', 'look', 'timelin', 'week', 'differ', 'time', 'one', 'common', 'data', 'visual', 'time', 'seri', 'line', 'track', 'chang', 'variabl', 'time', 'use', 'new', 'week', 'variabl', 'look', 'test', 'frequenc', 'time', 'end', 'time', 'seri', 'plot', 'show', 'frequenc', 'breathalyz', 'test', 'week', 'year', 'one', 'line', 'year', '9', 'end', 'veishea', 'wikipedia', 'veishea', 'annual', 'week', 'long', 'celebr', 'held', 'spring', 'campu', 'iowa', 'state', 'univers', 'ame', 'iowa', 'celebr', 'featur', 'annual', 'parad', 'mani', 'open', 'hous', 'demonstr', 'univers', 'facil', 'depart', 'campu', 'organ', 'exhibit', 'product', 'technolog', 'held', 'fundrais', 'variou', 'chariti', 'group', 'addit', 'veishea', 'brought', 'speaker', 'lectur', 'entertain', 'iowa', 'state', 'veishea', 'largest', 'student', 'run', 'festiv', 'nation', 'bring', 'ten', 'thousand', 'visitor', 'campu', 'year', '90', 'year', 'tradit', 'ame', 'termin', 'perman', 'riot', '2014', 'drunk', 'celebr', 'flip', 'multipl', 'vehicl', 'tore', 'light', 'pole', 'first', 'incid', 'violenc', 'sever', 'properti', 'damag', 'veishea', 'histori', 'former', 'presid', 'leath', 'make', 'right', 'decis', 'cancel', 'veishea']","['ame', 'iowa', 'alcohol', 'breathalyz', 'veishea', 'test', 'breath', 'depart', 'polic', 'week', 'colleg', 'univers', '2am', 'campu', 'town', 'state', 'usa', 'administ', 'drive', 'month']","<div>
 <p>
  Using data collected from the State of Iowa, you will group, summarize, and visualize data
on breath alcohol tests in Ames, Iowa, (home of Iowa State
University) from 2013-2017. Some questions you will answer
include, ""What is the highest recorded value?"" and 
""When do breath alcohol tests occur most?""
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Who's%20Tweeting%3F%20Trump%20or%20Trudeau%3F,Who's Tweeting? Trump or Trudeau?,python,Katharine Jarmul,"Founder, kjamistan",https://www.datacamp.com/projects/467,"Build a machine learning classifier that knows whether President Trump or Prime Minister Trudeau is tweeting!
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Who's%20Tweeting%3F%20Trump%20or%20Trudeau%3F/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Who's%20Tweeting%3F%20Trump%20or%20Trudeau%3F/notebook.ipynb,"['datasets.helper_functions', 'pprint', 'CountVectorizer,', 'LinearSVC', 'MultinomialNB', 'metrics', 'plot_and_return_top_features', 'plot_confusion_matrix', 'random.seed(53)', 'random;', 'sklearn', 'sklearn.naive_bayes', 'TfidfVectorizer', 'sklearn.svm', 'sklearn.feature_extraction.text', 'sklearn.model_selection', 'train_test_split', 'pandas']","['.05', '.helper_functions', '.9', '.3f', '.e', '.naive_bayes', '.svm', '.33', '.feature_extraction', '.model_selection', '.text', '.csv']","['.transform()', '.predict()', '.accuracy_score()', '.confusion_matrix()', '.fit()', '.fit_transform()', '.seed()', '.sample()', '.read_csv()']","['plot_confusion_matrix()', 'MultinomialNB()', 'LinearSVC()', 'plot_and_return_top_features()', 'TfidfVectorizer()', 'pprint()', 'CountVectorizer()', 'train_test_split()', 'print()']","['1', 'tweet', 'classif', 'trump', 'vs', 'trudeau', 'think', 'classifi', 'text', 'tweet', 'notebook', 'take', 'dive', 'world', 'social', 'media', 'text', 'classif', 'investig', 'properli', 'classifi', 'tweet', 'two', 'promin', 'north', 'american', 'politician', 'donald', 'trump', 'justin', 'trudeau', 'photo', 'credit', 'execut', 'offic', 'presid', 'unit', 'state', 'tweet', 'pose', 'specif', 'problem', 'nlp', 'includ', 'fact', 'shorter', 'text', 'also', 'plenti', 'platform', 'specif', 'convent', 'give', 'hassl', 'mention', 'hashtag', 'emoji', 'link', 'short', 'hand', 'phrase', 'ikr', 'overcom', 'challeng', 'build', 'use', 'classifi', 'two', 'tweeter', 'ye', 'let', 'get', 'start', 'begin', 'import', 'tool', 'need', 'scikit', 'learn', 'need', 'properli', 'vector', 'data', 'countvector', 'tfidfvector', 'also', 'want', 'import', 'model', 'includ', 'multinomialnb', 'naive_bay', 'modul', 'linearsvc', 'svm', 'modul', 'passiveaggressiveclassifi', 'linear_model', 'modul', 'final', 'need', 'sklearn', 'metric', 'train_test_split', 'gridsearchcv', 'model_select', 'modul', 'evalu', 'optim', 'model', 'scikit', 'learn', 'api', 'document', 'http', 'scikit', 'learn', 'org', 'stabl', 'modul', 'class', 'html', '2', 'transform', 'collect', 'data', 'begin', 'let', 'start', 'corpu', 'tweet', 'collect', 'novemb', '2017', 'avail', 'csv', 'format', 'use', 'panda', 'datafram', 'help', 'import', 'data', 'pass', 'scikit', 'learn', 'process', 'sinc', 'data', 'collect', 'via', 'twitter', 'api', 'split', 'test', 'train', 'set', 'need', 'let', 'use', 'train_test_split', 'random_st', '53', 'test', 'size', '0', '33', 'datacamp', 'cours', 'ensur', 'enough', 'test', 'data', 'get', 'result', 'matter', 'run', 'code', '3', 'vector', 'tweet', 'train', 'test', 'data', 'set', 'need', 'creat', 'vector', 'represent', 'tweet', 'order', 'appli', 'machin', 'learn', 'util', 'countvector', 'tfidfvector', 'class', 'first', 'need', 'fit', 'data', 'complet', 'start', 'model', 'new', 'vector', 'tweet', '4', 'train', 'multinomi', 'naiv', 'bay', 'model', 'data', 'vector', 'form', 'train', 'first', 'model', 'investig', 'use', 'multinomi', 'naiv', 'bay', 'model', 'countvector', 'tfidfvector', 'data', 'perform', 'better', 'come', 'assess', 'accuraci', 'print', 'test', 'set', 'accuraci', 'score', 'model', '5', 'evalu', 'model', 'use', 'confus', 'matrix', 'see', 'tf', 'idf', 'model', 'perform', 'better', 'count', 'base', 'approach', 'base', 'know', 'nlp', 'fundament', 'cours', 'might', 'know', 'tf', 'idf', 'allow', 'uniqu', 'token', 'greater', 'weight', 'perhap', 'tweeter', 'use', 'specif', 'import', 'word', 'identifi', 'let', 'continu', 'investig', 'classif', 'task', 'accuraci', 'score', 'tell', 'whole', 'pictur', 'better', 'evalu', 'made', 'look', 'confus', 'matrix', 'show', 'number', 'correct', 'incorrect', 'classif', 'base', 'class', 'use', 'metric', 'true', 'posit', 'fals', 'posit', 'fals', 'neg', 'true', 'neg', 'determin', 'well', 'model', 'perform', 'given', 'class', 'mani', 'time', 'trump', 'misclassifi', 'trudeau', '6', 'tri', 'anoth', 'classifi', 'linear', 'svc', 'bayesian', 'model', 'one', 'predict', 'differ', 'tf', 'idf', 'count', 'vector', 'fairli', 'impress', 'interestingli', 'confus', 'predict', 'label', 'trump', 'actual', 'tweeter', 'trudeau', 'go', 'use', 'model', 'would', 'want', 'investig', 'token', 'caus', 'confus', 'order', 'improv', 'model', 'seen', 'bayesian', 'model', 'tri', 'differ', 'approach', 'linearsvc', 'anoth', 'popular', 'choic', 'text', 'classif', 'let', 'see', 'use', 'tf', 'idf', 'vector', 'improv', 'accuraci', 'classifi', '7', 'introspect', 'top', 'model', 'wow', 'linearsvc', 'model', 'even', 'better', 'multinomi', 'bayesian', 'one', 'nice', 'work', 'via', 'confus', 'matrix', 'see', 'although', 'still', 'confus', 'trudeau', 'tweet', 'classifi', 'trump', 'fals', 'posit', 'rate', 'better', 'previou', 'model', 'perform', 'model', 'right', 'might', 'abl', 'continu', 'tweak', 'improv', 'previou', 'model', 'learn', 'paramet', 'optim', 'appli', 'better', 'preprocess', 'tweet', 'let', 'see', 'model', 'learn', 'use', 'linearsvc', 'classifi', 'two', 'class', 'trump', 'trudeau', 'sort', 'featur', 'token', 'weight', 'see', 'import', 'token', 'trump', 'trudeau', 'trump', 'like', 'trudeau', 'like', 'word', 'model', 'learn', 'someth', 'use', 'distinguish', 'two', 'men', '8', 'bonu', 'write', 'trump', 'trudeau', 'tweet', 'model', 'learn', 'seem', 'like', 'learn', 'trudeau', 'tweet', 'french', 'challeng', 'write', 'tweet', 'use', 'knowledg', 'gain', 'trick', 'model', 'use', 'print', 'list', 'plot', 'make', 'infer', 'word', 'classifi', 'text', 'trump', 'trudeau', 'fool', 'model', 'think', 'trump', 'trudeau', 'write', 'french', 'feel', 'free', 'make', 'trudeau', 'imperson', 'tweet', 'french', 'may', 'notic', 'french', 'word', 'common', 'word', 'stop', 'word', 'could', 'remov', 'english', 'french', 'stop', 'word', 'tweet', 'preprocess', 'step', 'might', 'decreas', 'accuraci', 'model', 'trudeau', 'french', 'speaker', 'group', 'dataset', 'one', 'french', 'speaker', 'would', 'use', 'preprocess', 'step', 'futur', 'work', 'dataset', 'could', 'involv', 'add', 'extra', 'preprocess', 'remov', 'url', 'french', 'stop', 'word', 'see', 'effect', 'use', 'gridsearchcv', 'improv', 'bayesian', 'linearsvc', 'model', 'find', 'optim', 'paramet', 'introspect', 'bayesian', 'model', 'determin', 'word', 'trump', 'trudeau', 'like', 'add', 'recent', 'tweet', 'dataset', 'use', 'tweepi', 'retrain', 'good', 'luck', 'write', 'imperson', 'tweet', 'feel', 'free', 'share', 'twitter']","['trudeau', 'tweet', 'trump', 'model', 'french', 'classifi', 'linearsvc', 'confus', 'bayesian', 'class', 'modul', 'accuraci', 'vector', 'multinomi', 'learn', 'idf', 'tf', 'scikit', 'investig', 'classif']","<div>
 <p>
  Let's apply our natural language processing knowledge to Twitter. Tweets are notoriously difficult, as they are shorter than most texts and usually have hard-to-parse content like hashtags, mentions, links and emoji.
 </p>
 <p>
  Despite the difficulties, tweets are fun content, so in this notebook we'll take a look at classifying two prominent North American politicians. Can we determine if it is Donald Trump  or Justin Trudeau based on just a tweet? Let's see!
 </p>
</div>
"
https://github.com/mrbarkis/DataCamp_projects/tree/master/Word%20Frequency%20in%20Classic%20Novels,Word Frequency in Classic Novels,python,Hugo Bowne-Anderson,Data Scientist at DataCamp,https://www.datacamp.com/projects/38,"Use web scraping and NLP to find the most frequent words in one of two pieces of classic literature: Herman Melville's novel, Moby Dick, or Peter Pan by J. M. Barrie.
",https://www.github.com/mrbarkis/DataCamp_projects/blob/master/Word%20Frequency%20in%20Classic%20Novels/notebook.ipynb,https://raw.githubusercontent.com/mrbarkis/DataCamp_projects/master/Word%20Frequency%20in%20Classic%20Novels/notebook.ipynb,"['nltk', 'requests', 'BeautifulSoup', 'bs4']","['.com', '.amazonaws', '.corpus', '.datacamp', '.encoding', '.htm', '.stopwords', '.tokenize', '.text']","['.FreqDist()', '.RegexpTokenizer()', '.get()', '.tokenize()', '.words()', '.get_text()', '.download()', '.lower()', '.plot()']",['BeautifulSoup()'],"['1', 'tool', 'text', 'process', 'frequent', 'word', 'herman', 'melvil', 'novel', 'mobi', 'dick', 'often', 'occur', 'notebook', 'scrape', 'novel', 'mobi', 'dick', 'websit', 'project', 'gutenberg', 'contain', 'larg', 'corpu', 'book', 'use', 'python', 'packag', 'request', 'extract', 'word', 'web', 'data', 'use', 'beautifulsoup', 'final', 'dive', 'analyz', 'distribut', 'word', 'use', 'natur', 'languag', 'toolkit', 'nltk', 'data', 'scienc', 'pipelin', 'build', 'notebook', 'use', 'visual', 'word', 'frequenc', 'distribut', 'novel', 'find', 'project', 'gutenberg', 'natur', 'languag', 'process', 'tool', 'use', 'appli', 'much', 'data', 'data', 'scientist', 'encount', 'vast', 'proport', 'world', 'data', 'unstructur', 'data', 'includ', 'great', 'deal', 'text', 'let', 'start', 'load', 'three', 'main', 'python', 'packag', 'go', 'use', '2', 'request', 'mobi', 'dick', 'analyz', 'mobi', 'dick', 'need', 'get', 'content', 'mobi', 'dick', 'somewher', 'luckili', 'text', 'freeli', 'avail', 'onlin', 'project', 'gutenberg', 'html', 'file', 'http', 'www', 'gutenberg', 'org', 'file', '2701', '2701', 'h', '2701', 'h', 'htm', 'note', 'html', 'stand', 'hypertext', 'markup', 'languag', 'standard', 'markup', 'languag', 'web', 'fetch', 'html', 'file', 'mobi', 'dick', 'go', 'use', 'request', 'packag', 'make', 'get', 'request', 'websit', 'mean', 'get', 'data', 'browser', 'visit', 'webpag', 'get', 'request', 'page', 'directli', 'python', 'instead', '3', 'get', 'text', 'html', 'html', 'quit', 'want', 'howev', 'contain', 'want', 'text', 'mobi', 'dick', 'need', 'wrangl', 'html', 'extract', 'text', 'novel', 'use', 'packag', 'beautifulsoup', 'firstli', 'word', 'name', 'packag', 'beauti', 'soup', 'web', 'develop', 'term', 'tag', 'soup', 'refer', 'structur', 'syntact', 'incorrect', 'html', 'code', 'written', 'web', 'page', 'beauti', 'soup', 'best', 'make', 'tag', 'soup', 'beauti', 'extract', 'inform', 'eas', 'fact', 'main', 'object', 'creat', 'queri', 'use', 'packag', 'call', 'beautifulsoup', 'creat', 'soup', 'use', 'get_text', 'method', 'extract', 'text', 'quick', 'start', 'quid', 'beatifulsoup', 'http', 'www', 'crummi', 'com', 'softwar', 'beautifulsoup', 'bs4', 'doc', 'quick', 'start', '4', 'extract', 'word', 'text', 'novel', 'unwant', 'stuff', 'start', 'unwant', 'stuff', 'end', 'could', 'remov', 'content', 'much', 'smaller', 'amount', 'text', 'mobi', 'dick', 'first', 'approxim', 'okay', 'leav', 'text', 'interest', 'time', 'count', 'mani', 'time', 'word', 'appear', 'use', 'nltk', 'natur', 'languag', 'toolkit', 'start', 'token', 'text', 'remov', 'everyth', 'word', 'whitespac', 'punctuat', 'etc', 'split', 'text', 'list', 'word', 'use', 'nltk', 'token', 'regexptoken', 'function', 'pleas', 'see', 'exampl', 'nltk', 'document', 'http', 'www', 'nltk', 'org', 'api', 'nltk', 'token', 'html', 'highlight', 'regexp', 'modul', 'nltk', 'token', 'regexp', '5', 'make', 'word', 'lowercas', 'ok', 'nearli', 'note', 'capit', 'place', 'may', 'count', 'word', 'reason', 'build', 'list', 'word', 'mobi', 'dick', 'capit', 'letter', 'made', 'lower', 'case', '6', 'load', 'stop', 'word', 'common', 'practic', 'remov', 'word', 'appear', 'lot', 'english', 'languag', 'interest', 'word', 'known', 'stop', 'word', 'packag', 'nltk', 'includ', 'good', 'list', 'stop', 'word', 'english', 'use', 'see', 'nltk', 'document', 'load', 'stop', 'word', 'http', 'www', 'nltk', 'org', 'book', 'ch02', 'html', 'wordlist', 'corpora', '7', 'remov', 'stop', 'word', 'mobi', 'dick', 'want', 'creat', 'new', 'list', 'word', 'mobi', 'dick', 'except', 'stop', 'word', 'word', 'list', 'sw', 'one', 'way', 'get', 'list', 'loop', 'element', 'word', 'add', 'word', 'new', 'list', 'sw', '8', 'answer', 'origin', 'question', 'frequent', 'word', 'herman', 'melvil', 'novel', 'mobi', 'dick', 'often', 'occur', 'readi', 'answer', 'let', 'creat', 'word', 'frequenc', 'distribut', 'plot', 'use', 'nltk', 'see', 'nltk', 'document', 'use', 'nltk', 'freqdist', 'http', 'www', 'nltk', 'org', 'book', 'ch01', 'html', 'frequenc', 'distribut', '9', 'common', 'word', 'nice', 'frequenc', 'distribut', 'plot', 'answer', 'question', 'natur', 'languag', 'process', 'skill', 'use', 'notebook', 'also', 'applic', 'much', 'data', 'data', 'scientist', 'encount', 'vast', 'proport', 'world', 'data', 'unstructur', 'data', 'includ', 'great', 'deal', 'text', 'word', 'turn', 'surprisingli', 'common', 'word', 'mobi', 'dick']","['dick', 'mobi', 'nltk', 'word', 'packag', 'html', 'soup', 'novel', 'beautifulsoup', 'gutenberg', 'request', 'text', 'stop', 'www', '2701', 'beauti', 'languag', 'org', 'http', 'web']","<div>
 <p>
  In this Project, you'll scrape a novel from the website Project Gutenberg (which contains a large corpus of books) using the Python package
  <code>
   requests
  </code>
  . Then you'll extract words from this web data using
  <code>
   BeautifulSoup
  </code>
  . Finally, we'll dive into analyzing the distribution of words using the Natural Language ToolKit (
  <code>
   nltk
  </code>
  ).
 </p>
 <p>
  The natural language processing tools used here apply to much of the data that data scientists encounter as a vast proportion of the world's data is unstructured data and includes a great deal of text. To complete this Project, you need to know how to import web data into Python and how to work with natural language text.
 </p>
</div>
"
